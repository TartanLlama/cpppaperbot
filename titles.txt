(Untitled)
Update to P0019r7 with requested LWG edits
Application of Rebase Coro to C++17 to the Coroutine Working Draft
span, R7
Update of P0192R4 with open questions and SG-6 feedback.
Static Reflection
Draft with revised polymorphic_value wording
Allocator-aware library wrappers for dynamic allocation
simd paper with less SFINAE requirements
(Untitled)
(Untitled)
D0323r7
to_array from LFTS revision 3 (draft after small group)
to_array with expects, feature-test macro
Making std::underlying_type SFINAE-friendly
Date/time
Extending chrono to Calendars and Time Zones
(Untitled)
Updated to use new elements.
(Untitled)
D0424R3 - Templated string UDL
Updated flat_map wording.
Update flat_map wording.
(Untitled)
LWG clarifications and fixes
Likely/unlikely revision
(Untitled)
(Untitled)
D0528r2
D0528r3
Move proposed text from [expr.const] to [library.c]
Support for contract based programming in C++
D0542R5 - Support for contract based programming in C++
"Don't Specialize std function templates!"
Bit operations
(Untitled)
Update of P0586R0
Revision of P0591r3 (uses-allocator construction) as per LWG wording review Tuesday
Implicit creation of objects for low-level object manipulation (with wording)
variant and optional should propagate copy/move triviality (rebased)
D0608R2 A sane variant converting constructor
Removing deprecated features
Remove deprecated facilities from C++20 please
No Internal Locks for C++ Atomics
std::unreachable() (fetch James Touton if this comes up)
Math Constants (Revision 3)
Updated Math Constant wording revision 7 (post telecon 2019-04-23)
Updated Math Constant wording revision 8 (post telecon 2019-04-23) updated 2019-07-16
Revision of Down with typename!
Text Formatting
D0645R6 Text Formatting for C++20
(Old: use D0645R10 instead) Draft of P0645 with comments from March 18 LWG telecon addressed
(Old: use D0645R10 instead) Draft of P0645 with comments from June 14 LWG telecon addressed
Draft of P0645 with comments from June 21 LWG telecom addressed
D0660R7 (interrupt tokens with callbacks and jthread)
Coroutine Issue List (March 2018)
Created issues 31 and 32 requested by SG1
Coroutines TS Issue list (with fixed wording for ready issues), others moved to not ready
Coroutine TS issues ready for CWG review
D0668R5 memory model
Function reflection
Efficient sized delete for variable sized classes
classes in non-type template parameters
D0732R2 class type NTTPs
D0735R1: Interaction of memory_order_consume with release sequences
D07581R1 Implicit conversion traits and utility functions
D07591R1 fpos Requirements
shift algorithm
(Untitled)
Standard containers and constexpr
(Untitled)
More constexpr containers (including EWG cut)
More constexpr containers
Deprecate implicit capture of "this" via [=]
Revisions to midpoint/lerp
Feedback on P0214 (simd<>)
Feedback on P0214
Modules: semantics of declarations
(Untitled)
(Untitled)
(Untitled)
(Untitled)
conditionally trivial
fibers without scheduler, revised per SG1 in Jacksonville
Updated draft of fiber_handle proposal
Stacktrace wording (after LEWG address() votes)
Stacktrace with LEWG feedback
Stacktrace (after the CWG review)
D0981R3 (strong_order customization point + P1380R1 weak_order for floats)
(Untitled)
(Untitled)
(Untitled)
Standard Library Concepts
(Untitled)
D0907r1
D0907r3
Revised P0912r0 rendered as HTML + fixes
updated paper with more motivation for operator?:
Moar simd<> operations
(Untitled)
Precalculated hash values in lookup
D0928R1: Mitigating Speculation Attacks in C++
D0929R1: Checking for abstract class types (update for arrays)
(Untitled)
D0941R2 feature-test wording
(Untitled)
D0943R1: C atomics in C++ revision
D0943R2: Support C atomics in C++
(Untitled)
Allow initializing aggregates from a parenthesized list of values
Allow initializing aggregates from a parenthesized list of values
(Untitled)
(Untitled)
Finding the right set of traits for simd
Mark Zeren - updated to deprecate default parameter.
Tentatively ready issues to be moved in Jacksonville
(Untitled)
Better, Safer Range Access Customization Points
(Untitled)
D0973R0: Coroutines TS Use Cases and Design Issues
Library impact of coroutines
Response to Coroutine Concerns raised in D0973r0
German position on merging Ranges TS
D0981R3 (Let strong_order be a customization point) with LEWG Kona addenda
D0982
Comparison of Stackful Coroutine Proposals
D0995r0
D0995r1
Rebase Library Fundamentals on C++17
Rebase Library Fundamentals on C++17
Draft P0997 "Retire Pernicious Language Constructs in Module Contexts"
Draft 3 P0997 "Retire Pernicious Language Constructs in Module Contexts"
Target wavefront policies for C++20 rather than TS
vectorization parallel policy for C++20
D1002R1: Try-catch blocks in constexpr functions (with CWG live edits)
(Untitled)
Fixed wording of P1007R2 after review by Jens Maurer
(Untitled)
(Untitled)
D1013R1
Updated P1020 after initial wording review
(Untitled)
D1021R5 - Filling Holes in Class Template Argument Deduction
Revision of P1024r1 after LWG wording review on Wednesday
D1024R3 - Usability enhancements for std::span
D1025R1: Update the reference to the Unicode Standard
Rebases according to N4820
Applies Monday feedback
Latest Revision of Draft Proposal d1040r1 - std::embed based on LEWG feedback
(Untitled)
(Untitled)
Draft of P1063R1, Core Coroutines
(Untitled)
constexpr invoke
Split out make_unique/make_shared portion of P1069R0 as discussed with Titus
(Untitled)
"Today’s return-type-requirements Are Insufficient"
Modules for Standard C++ by Richard Smith and Gabriel Dos Reis
(Untitled)
Minor updates to P1093R0
Nested inline namespaces with revised core wording
D1099R5 (using enum) with fixes after Tuesday review round 1
Merging modules
(Untitled)
(Untitled)
D1111r0: Proposed Resolution to NB Comments on the Parallelism TS v2
concat and split simd over and over
D1119r0
D1120R0: Wording for parts of P0946R0
Editorial Guidance for merging P0019r8 and P0528r3
(Untitled)
p1132 out_ptr with new benchmarks and edits for noexcept discussion
D1135R2: The C++20 Synchronization Library
The C++20 Synchronization Library
(old; use D1135R6 instead) The C++20 Synchronization Library
The C++20 Synchronization Library
(Untitled)
D1141R2: Yet another approach for constrained declarations ("concepts terse syntax")
D1152R2 Deprecating volatile
D1152R4
D1154R2 forwarded to LWG from LEWG
Post-Kona draft of P1155 "More implicit moves"
(Untitled)
Make stateful allocator propagation more consistent for operator+(basic_string)
(Untitled)
(Untitled)
(Untitled)
(Untitled)
when do you use <=>
(Untitled)
(Untitled)
Revision to ranges::to
ranges::to
Updated P1207 (Movability of Single-pass Iterators) wording
Updated source_location wording
Update with 2 additional sections (2.3, 2.8)
D1217R1 out-of-thin-air, minor bug fix revision
Updated flat_set wording paper.
Update based on Tuesday review.
Alternative Wording for P0907R3 Signed Integers are Two's Complement
(Untitled)
D1242r1 - Single file modules
Small qualification fixes and title change
Ranges design cleanup
Added section to explain what's still possible.
D1264R1: Revising the wording of stream input operations (after small group review)
D1272R1: Byteswapping for fun&&nuf
(Untitled)
D1289R1 - Access control in contract conditions
D1290R2 - Avoiding undefined behavior in contracts
ostream_joiner as voted by committee
D1301R4 - nodiscard("should have a reason"), Jens Updates with Aaron Fixes electric boogaloo
Wording for P1306 Expansion Statements
(Untitled)
(Untitled)
D1330R0: Changing the active member of a union inside constexpr
Updated wording prior to CWG discussion (per feedback from Jens)
Updated wording based on 2019-02-20 LEWG strawpoll
pre/post with WD text
contract pre/post with WD text
An Executor Property for Occupancy of Execution Agents
Missing feature test macros
D1355R2
Draft of P1361 "Integration of chrono with text formatting" with comments from June 28 LWG telecom addressed
(Untitled)
Draft of Reflection NB comment resolutions
Updated span range constructor wording
(Untitled)
(Untitled)
(Untitled)
intended version
as meant to be published
Updated to P1429R2
D1448R1 - Simplifying Mixed Contract Modes
Updated "Mandating the Standard Library" papers
(Untitled)
Updated "Mandating the Standard Library" papers
Updated "Mandating the Standard Library" papers
Reworked a bunch of "Constraints" elements
Miscellaneous minor fixes for chrono -- updated
D1469R1 - Disallow _ usage - With wording
Shadow namespaces
D1482r0 modules feedback
D1485R0 - Better keywords for the Coroutines TS
United Amendment to Contracts Facility for C++20
United Amendment to Contracts Facility for C++20
User Experience with Contracts That Work
Optimization barrier for undefined behavior
D1496R0 Formatting of negative zero
(Untitled)
(Untitled)
Mandating the Standard Library: Clause 30 - Atomic operations library
slides from 'can we build it?' presentation. d1600 may change, assignment bug discovered
(Untitled)
the mothership paper
spaceship tuneup
Ammendments to P1135
Add wait/notify to atomic_ref
d1664 - Reconstructible Ranges (not published, maybe discussed during P1739)
Included proposed snake_case name alternatives.
D1723R1: Mandating the Standard Library: Clause 31 - Atomics library
Draft of P1739 that contains the state approved by LEWG.
(Untitled)
ABI isolation for member functions
Local contract restrictions
Declarations and where to find them
D1806R0: Put target_type/target in any_invocable
Overview of all contract papers
P1808R0: Contra P0339 polymorphic_allocator<> as a vocabulary type
A Quick Look at what P1754 will change (full)
Relaxing redefinition restrictions for re-exportation robustness
Axioms should be assumable
D1814R0: Wording for Class Template Argument Deduction for Alias Templates and Inherited Constructors. Split from P1021 as requested
Translation-unit-local entities
Wording for the aggregate part of P1021 "Filling holes in CTAD"
A very early and rough draft of an executor error handling compromise.
(Draft) Responses to the National Body Comments on PDTS 19750 (Parallelism TS v2)
Namespaces and Library Versioning
Type Traits Proposal
Agenda: J16 Meeting No. 34, WG21 Meeting No. 29, April 22-26, 2002
C++ Standard Core Language Active Issues, Revision 21
C++ Standard Core Language Defect Reports, Revision 21
C++ Standard Core Language Closed Issues, Revision 21
C++ Standard Library Active Issuess List (Revision 21)
C++ Standard Library Defect Report List (Revision 21)
C++ Standard Library Closed Issues List (Revision 21)
Local Classes and Linkage
Proposed C99 Library Additions to C++
Technical Report on C++ Performance (DRAFT)
Predictable data layout for certain non-POD types
Minutes of ISO WG21 Meeting, April 21, 2002
Minutes of ANSI J16 and ISO WG21 Co-located Meeting, 22-26 April 2002
Technical Report on C++ Performance (DRAFT)
const-correctness and other safety issues in clause 27: input/output library
Library Technical Report Proposals and Issues List (Revision 3)
Agenda for October 2002 Meeting of WG21
C++ Support for Delegation
Evolution WG Proposal Skeleton
October 2002 meeting information in Santa Cruz CA
C++ Standard Core Language Active Issues, Revision 22
C++ Standard Core Language Defect Reports, Revision 22
C++ Standard Core Language Closed Issues, Revision 22
C++ Standard Library Active Issuess List (Revision 22)
C++ Standard Library Defect Report List (Revision 22)
C++ Standard Library Closed Issues List (Revision 22)
Proposed C99 Library Additions to C++ (Revised)
WG21 Business Plan and Convener's Report
A Proposal to add a Polymorphic Function Object Wrapper to the Standard Library
Consolidated edits for core issues 245, 254, et al.
A Proposal to Add Move Semantics Support to the C++ Language
C++ Standard Core Language Active Issues, Revision 23
C++ Standard Core Language Defect Reports, Revision 23
C++ Standard Core Language Closed Issues, Revision 23
Proposal to Add Static Assertions to the Core Language
Proposal for adding tuple type into the standard library
Agenda: J16 Meeting No. 35, WG21 Meeting No. 30, October 21-25, 2002
PME: Properties, methods and events
The Forwarding Problem: Arguments
A Proposal to add Regular Expressions to the Standard Library
Proposed Resolution to LWG Issues 225, 226, 229
Enhancing numerical support
C++ Standard Library Active Issuess List (Revision 23)
C++ Standard Library Defect Report List (Revision 23)
C++ Standard Library Closed Issues List (Revision 23)
Revisions to Partial Ordering Rules
Some proposed extensions to C++ language
Aspects of Forwarding (was C++ Support For Delegation)
Technical Report on C++ Performance
Library Technical Report Proposals and Issues List (Revision 4)
A Proposal to Add an Extensible Random Number Facility to the Standard Library
A proposal to add Hash Tables to the Standard Library (revision 2)
Toward standardization of dynamic libraries
Atomic operations with multi-threaded environments
A Proposal to add a Polymorphic Function Object Wrapper to the Standard Library
Proposal for adding tuple types into the standard library
Evolution Working Group Record of Discussion
Minutes of ANSI J16 and ISO WG21 Co-located Meeting, 21-25 October 2002
Proposed Addition to C++: Typedef Templates
Qualified Namespaces
Minutes of ISO WG21 meeting, October 20, 2002
C++ Standard Library Active Issuess List (Revision 24)
C++ Standard Library Defect Report List (Revision 24)
C++ Standard Library Closed Issues List (Revision 24)
C++ Standard Core Language Active Issues, Revision 24
C++ Standard Core Language Defect Reports, Revision 24
C++ Standard Core Language Closed Issues, Revision 24
Oxford meeting information
Dynamic Libraries in C++
WG21 Agenda
Proposed Addition to C++: Class Namespaces
Agenda: J16 Meeting No. 36, WG21 Meeting No. 31, April 7-11, 2003
A Proposal to Add Mathematical Special Functions to the C++ Standard Library
2003 Five-Year Maintenance Review
A Proposal to add Type Traits to the Standard Library
Proposal for Technical Report on C++ Standard Library Security
Why We Can't Afford Export
Making Local Templates more Useful
Proposal for Dynamic Library Support in C++
A Proposal to add Regular Expression to the Standard Library
Technical Report on C++ Performance
A Proposal to Add General Purpose Smart Pointers to the Library Technical Report
A Proposal to Add an Enhanced Member Pointer Adaptor to the Library Technical Report
C++ Standard Core Language Active Issues, Revision 25
C++ Standard Core Language Defect Reports, Revision 25
C++ Standard Core Language Closed Issues, Revision 25
A proposal to add a reference wrapper to the standard library
A uniform method for computing function object return types
A Proposal to Add an Enhanced Binder to the Library Technical Report
Proposed Resolution to LWG issues 225, 226, 229
C++ Standard Library Active Issuess List (Revision 25)
C++ Standard Library Defect Report List (Revision 25)
C++ Standard Library Closed Issues List (Revision 25)
A Proposal to Add Hash Tables to the Standard Library (revision 3)
Library Technical Report Proposals and Issues List (Revision 5)
Class defaults
Controling Implicit Template Instantiation
Proposal to add template aliases to C++
A Proposal to Add General Purpose Smart Pointers to the Library Technical Report
A Case for Template Aliasing
A Proposal to Add an Extensible Random Number Facility to the Standard Library (Revision 2)
A proposal to add a reference wrapper to the standard library (revision 1)
A uniform method for computing function object return types (revision 1)
A Proposal to Add an Enhanced Binder to the Library Technical Report (revision 1)
A Proposal to Add Hash Tables to the Standard Library (revision 4)
Technical Report on C++ Performance
Minutes of ISO WG21 Meeting, April 6, 2003
Minutes of J16 Meeting No. 36/WG21 Meeting No. 31, April 7-11, 2003
WG21 agenda
Security and Standard C Libraries
Safe Exceptions and Compiler Security Checks
Draft proposal for adding Multimethods to C++
Anonymous array members
Constant inheritance
Expliciting default parameters
Non default constructors for arrays
Self methods
Inline Constants
Enum Type checking for SWITCH statements
Reflective Metaprogramming in C++
C++ Standard Core Language Active Issues, Revision 26
C++ Standard Core Language Defect Reports, Revision 26
C++ Standard Core Language Closed Issues, Revision 26
Library Technical Report Proposals and Issues List (Revision 6)
Iterator Facade and Adaptor
New Iterator Concepts
Decltype and auto
A Proposal to Add a Fixed Size Array Wrapper to the Standard Library Technical Report
C++ Standard Library Active Issues List (Revision 26)
C++ Standard Library Defect Report List (Revision 26)
C++ Standard Library Closed Issues List (Revision 26)
Typesafe Variable-length Function and Template Argument Lists
Business Plan and Convener's Report
Technical Report on C++ Performance
A name for the null pointer: nullptr
Template aliases for C++
Proposed resolution of core issue 301
AGENDA, J16 Meeting No. 37, WG21 Meeting No. 32, October 27-31, 2003, Kona, Hawaii
Exclusive Inheritance
Braces Initialization Overloading
Pure implementation method declaration
Draft Proposal for Dynamic Libraries in C++ (Revision 1)
Simplifying Interfaces in basic_regex
Regular Expressions: Internationalization and Customization
Information for March-April 2004 WG21/WG14 Meetings in Sydney, NSW Australia
Proposed Signature Changes for Special Math Functions in TR-1
Proposed Additions to TR-1 to Improve Compatibility with C99
C++ Standard Core Language Active Issues, Revision 27
C++ Standard Core Language Defect Reports, Revision 27
C++ Standard Core Language Closed Issues, Revision 27
Errata to the Regular Expression Proposal
Proposal to add Deletion Traits to the Standard Library
Generalized Initializer Lists
Concept checking - A more abstract complement to type checking
Literals for user-defined types
Evolution WG issues list
Improving Enumeration Types
A Proposal to Add Mathematical Special Functions to the C++ Standard Library (version 2)
C++ Standard Library Active Issuess List (Revision 27)
C++ Standard Library Defect Report List (Revision 27)
C++ Standard Library Closed Issues List (Revision 27)
(Draft) Technical Report on Standard Library Extensions
Type Traits Issue List
Extended friend Declarations
Generalized Constant Expressions
Concepts - Design choices for template argument checking
Proposed Resolution To LWG issues 225, 226, 229 (revision 1)
Nested Namespace Definition Proposal
Proposal to add namespace references to C++
Mechanisms for querying types of expressions: decltype and auto revisited
Syntactic Disambiguation Using the Template Keyword
Draft proposal for adding Multimethods to C++
Iterator Facade and Adaptor
New Iterator Concepts
WG20 liaison report
Proposed addition of __func__ predefined identifier from C99
Random Number Generators Issues List
Concepts - syntax and composition
C++ Standard Library Active Issues List (Revision 28)
C++ Standard Library Defect Report List (Revision 28)
C++ Standard Library Closed Issues List (Revision 28)
(Draft) Technical Report on Standard Library Extensions
Library Extension Technical Report - Issues List
A Proposal to Add Mathematical Special Functions to the C++ Standard Library (version 3)
Analysis and Proposed Resolution for Core Issue 39
Comments about Issues with Random Number Generators
Variadic Macros and Placemarkers
Alignment Proposal
Comments on the Initialization of Random Engines
A Proposal to Add a Fixed Size Array Wrapper to the Standard Library Technical Report
Const correctness in unordered associative containers
New Iterator Concepts
Changes to N1540 to Implement N1499 Parts 1 and 2
Minutes of ISO WG21 Meeting, October 26, 2003
Minutes of J16 Meeting No. 37/WG21 Meeting No. 32, October 27-31, 2003
C++ Standard Core Language Active Issues, Revision 28
C++ Standard Core Language Defect Reports, Revision 28
C++ Standard Core Language Closed Issues, Revision 28
C++/CLI Overview
Library Technical Report Component Detection
WG21 Agenda
TG5 Liaison Report to WG21
Core Issue 195 and "Conditionally-Supported Behavior"
Adding the long long type to C++
Synchronizing the C++ preprocessor with C99
Critique of WG14/N1016 decimal floating-point arithmetic
Proposed additions to TR-1 to improve compatibility with C99
Proposed fixes to library inconsistencies
Corrections to domain-error reporting for TR1 chapter on special math functions
C++ Standard Core Language Active Issues, Revision 29
C++ Standard Core Language Defect Reports, Revision 29
C++ Standard Core Language Closed Issues, Revision 29
Library Technical Report Component Detection (Revision 1)
Filesystem library query
Working Draft, Standard for Programming Language C++
Editor's report
Strongly Typed Enums
AGENDA J16 Meeting No. 38 WG21 Meeting No. 33 March 22-26, 2004, Sydney Australia
Delegating Constructors
Compiler Generated Defaults
Inheriting Constructors
Regularizing Initialization Syntax
Uniform Calling Syntax (Re-opening public interfaces)
On Random-Number Distributions for C++0x
complex and issue 387
Smart Pointer Comparison Operators
October 2004 Meeting Information
Explicit Conversion Operators
C++ Standard Library Active Issues List (Revision 29)
C++ Standard Library Defect Report List (Revision 29)
C++ Standard Library Closed Issues List (Revision 29)
(Draft) Technical Report on Standard Library Extensions
Library Extension Technical Report - Issues List
Evolution WG issues list
Issue 431: Swapping containers with unequal allocators
C++/CLI Properties
A name for the null pointer: nullptr (revision 2)
Class Scope Using Declarations & private Members
Variadic Templates
Proposal to Add Static Assertions to the Core Language (Revision 1)
Extending Template Type Parameters I: Namespace and scope
Decltype and auto (revision 3)
TG5 Liaison Report #2
More on Issues with Random Number Generators in the Library TR Proposal
Clarification of Initialization of Class Objects by rvalues
Implicitly-Callable Functions in C++0x
How we might remove the remaining shortcomings of std::complex<T>
Proposal to add Design by Contract to C++
#scope: A simple scoping mechanism for the C/C++ preprocessor
C++ Properties -- a Library Solution
Extended friend Declarations (Rev. 1)
Proposal to Add Static Assertions to the Core Language (Revision 2)
Delegating Constructors (revision 1)
Library Extension Technical Report -- Issues List
Dimension and Rank
Resolution to TR issue 4.37
Resolutions to unordered associative container issues
Resolutions to regular expression issues
Resolutions to fixed-size array issues
#scope for C/C++
Proposed Resolution for Core Issue 39 (Rev. 1)
"Conditionally-Supported Behavior" (Rev. 1)
Extensions for the Programming Language C++ to Support New Character Data Types
Minutes of J16 Meeting No. 38/WG21 Meeting No. 33, March 22-26, 2004
Minutes of ISO WG21 Meeting, March 21, 2004
Electronic review process
C++ Standard Core Language Active Issues, Revision 30
C++ Standard Core Language Defect Reports, Revision 30
C++ Standard Core Language Closed Issues, Revision 30
C++ Standard Library Active Issues List (Revision 30)
C++ Standard Library Defect Report List (Revision 30)
C++ Standard Library Closed Issues List (Revision 30)
Working Draft, Standard for Programming Language C++
Editor's Report
New Iterator Concepts
Iterator Facade and Adaptor
Adoption of C99's __func__ predefined identifier and improved default argument behavior
(Draft) Technical Report on Standard Library Extensions
Motivation, Objectives and Design Decisions
Right Angle Brackets
C++ Evolution Working Group -- Active Proposals, Revision 1
WG21 agenda
WG21 Agenda
Working draft changes for C99 preprocessor synchronization
TG5 Liaison Report #3
Unofficial Working Draft, Standard for Programming Language C++
Editor's report
C++ Standard Library Active Issues List (Revision 31)
C++ Standard Library Defect Report List (Revision 31)
C++ Standard Library Closed Issues List (Revision 31)
(Draft) Technical Report on Standard Library Extensions
Library Extension Technical Report - Issues List
WG21 Business Plan and Convener's Report
TG5 Liaison Report #4
Toward Improved Optimization Opportunities in C++0x
Guidelines for Domain Errors in Mathematical Special Functions
Technical Report on C++ Performance
Accessing the target of a tr1::function object
A Proposal to add Mathematical Functions for Statistics to the C++ Standard Library
Proposal to add Contract Programming to C++ (revision 1)
Overloading Operator.() & Operator.*()
Adapting N1640=04-0080 To C++0x
Unifying TR1 Function Object Type Specifications
A Proposal to Improve const_iterator Use from C++0X Containers
TG5 Liaison Report #5
Non-member overloaded copy assignment operator
C++ Standard Core Language Active Issues, Revision 31
C++ Standard Core Language Defect Reports, Revision 31
C++ Standard Core Language Closed Issues, Revision 31
Memory Model for multithreaded C++
A Proposal to Add a Policy-Based Smart Pointer Framework to the Standard Library
A Multi-threading Library for Standard C++
Proposed Library Additions for Code Conversions
C++ Standard Library Active Issues List (Revision 32)
C++ Standard Library Defect Report List (Revision 32)
C++ Standard Library Closed Issues List (Revision 32)
(Draft) Technical Report on Standard Library Extensions
Library Extension Technical Report - Issues List (Revision 5)
C++0x Standard Library wishlist
A Proposal to Add an Rvalue Reference to the C++ Language
Explicit Namespaces
A Proposal to add the Infinite Precision Integer to the C++ Standard Library
Adding the long long type to C++ (Revision 1)
A Proposal to Extend the Function Call Operator
A Proposal to Make Pointers to Members Callable
Language Support for Restricted Templates
Restrictions on Order Parameters for Bessels and Other Function Families
AGENDA J16 Meeting No. 39 WG21 Meeting No. 34 Oct 17-22, 2004, Redmond, Washington
C++ Evolution Working Group -- Active Proposals, Revision 1b
Regularizing Initialization Syntax (revision 1)
explicit class and default definitions
Function Qualifiers
Variadic Templates: Exploring the Design Space
Decltype and Auto (revision 4)
Toward Opaque typedefs in C++0X
Invitation April 2005 meeting
C++ Standard Library Active Issues List (Revision 33)
C++ Standard Library Defect Report List (Revision 33)
C++ Standard Library Closed Issues List (Revision 33)
(Draft) Technical Report on Standard Library Extensions
Library Extension Technical Report - Issues List
Proposed Resolution to TR1 Issues 3.12, 3.14, and 3.15
Minutes of ISO WG21 Meeting, October 17, 2004
Minutes of J16 Meeting No. 39/WG21 Meeting No. 34, October 17-22, 2004
Explicit class and default definitions
A Proposal to add the Infinite Precision Integer and Rational to the C++ Standard Library
Strongly Typed Enums (revision 1)
Proposal to Add Static Assertions to the Core Language (Revision 3)
Deducing the type of variable from its initializer expression
Extended friend Declarations (Rev. 2)
Proposed Resolutions to Library TR Issues
A Library Approach to Initialization
Copy Elision in Exception Handling
Macro scopes
Changing Undefined Behavior into Diagnosable Errors
C++ Standard Core Language Active Issues, Revision 32
C++ Standard Core Language Defect Reports, Revision 32
C++ Standard Core Language Closed Issues, Revision 32
C++0x Standard Library wishlist (revision 2)
Working Draft, Standard for Programming Language C++
Editor's report
Adding the long long type to C++ (Revision 2)
Modules in C++ (Revision 1)
A Proposal to Restore Multi-declarator auto Declarations
Memory Model for Multithreaded C++
Adding a Policy-Based Smart Pointer Framework to the Standard Library
The "scope" extension for the C/C++ preprocessor
Proposal for Extending the switch statement
Auxiliary class interfaces
Agenda
Big Integer Library Proposal for C++0x
Proposed Draft Technical Report on C++ Library Extensions
Adding extended integer types to C++
C++ Standard Core Language Active Issues, Revision 33
C++ Standard Core Language Defect Reports, Revision 33
C++ Standard Core Language Closed Issues, Revision 33
Critique of Code Conversion Proposal (N1683)
Aspects of Reflection in C++
C++0x Standard Library wishlist (revision 3)
C++ Standard Library Active Issues List (Revision 34)
C++ Standard Library Defect Report List (Revision 34)
C++ Standard Library Closed Issues List (Revision 34)
Library Extension Technical Report - Issues List
Right Angle Brackets (Revision 1)
Concepts for C++0x
TG5 Liaison Report #6
TG5 Liaison Report #7
TG5 Liaison Report #8
C++ Standard Library Active Issues List (Revision 35)
C++ Standard Library Defect Report List (Revision 35)
C++ Standard Library Closed Issues List (Revision 35)
Library Extension Technical Report - Issues List
C++0x Standard Library wishlist (revision 4)
C++ Standard Core Language Active Issues, Revision 34
C++ Standard Core Language Defect Reports, Revision 34
C++ Standard Core Language Closed Issues, Revision 34
A Proposal to Add an Rvalue Reference to the C++ Language: Proposed Wording
Impact of the rvalue reference on the Standard Library
Agenda
Proposal to add Contract Programming to C++ (revision 2)
On the Future Evolution of C++
A Case for Reflection
Decimal Types for C++
Memory model for multithreaded C++: Issues
Modules in C++ (Revision 1)
Comments on LWG issue 233: Insertion hints in associative containers
Rules of thumb for the design of C++0x
A concept design (Rev. 1)
TG5 Liaison Report #9
A proposal to add l-value member function qualifier
Toward a Proposal for Object Templates in C++0x
C++ Standard Core Language Active Issues, Revision 35
C++ Standard Core Language Defect Reports, Revision 35
C++ Standard Core Language Closed Issues, Revision 35
Minutes of J16 Meeting No. 40/WG21 Meeting No. 34, April 11-15, 2005
Minutes of ISO WG21 Meeting, April 10, 2005
Extended friend Declarations (Rev. 3)
A Modest Proposal: Fixing ADL
Deducing the type of variable from its initializer expression (revision 2)
Proposal for new for-loop
Explicit model definitions are necessary
C++ Language Support for Generic Programming
Contract Programming For C++0x
Proposed resolution of core issue 301
Uniform Use of std::string
Simple Numeric Access
Working Draft, Standard for Programming Language C++
Editor's Report
C++ Standard Library Active Issues List (Revision R36)
C++ Standard Library Defect Report List (Revision R36)
C++ Standard Library Closed Issues List (Revision R36)
Library Extension Technical Report - Issues List
Library Extension TR2 Call for Proposals
Adding the long long type to C++ (Revision 3)
October 2005 Meeting Information (Revision 1)
ISO C++ Strategic Plan for Multithreading
Business Plan and Convener's Report
Agenda
C++ Standard Core Language Active Issues, Revision 36
C++ Standard Core Language Defect Reports, Revision 36
C++ Standard Core Language Closed Issues, Revision 36
Extending Move Semantics To *this (Revision 2)
A Proposal to add a max significant decimal digits value to the C++ Standard Library Numeric limits
New Character Types in C++
Extending Aggregate Initialization
Addressing Exception Specifications for Next Generation of C++
An Explicit Override Syntax for C++
C++ Standard Library Active Issues List (Revision R37)
C++ Standard Library Defect Report List (Revision R37)
C++ Standard Library Closed Issues List (Revision R37)
Transparent Garbage Collection for C++
A Pleading for Reasonable Parallel Processing Support in C++
<stdint.h> for C++
Draft Technical Report on C++ Library Extensions
Library Extension Technical Report - Issues List
A Proposal to Add Sockets to the Standard Library
Decimal Types for C++: Second Draft
C++0x Proposal: Function template std::minmax and / or algorithm std::minmax_element
Filesystem Library Proposal
A Proposal to add two iostream manipulators to the C++ Standard Library
A Proposal to add Interval Arithmetic to the C++ Standard Library
C++ Standard Core Language Active Issues, Revision 37
C++ Standard Core Language Defect Reports, Revision 37
C++ Standard Core Language Closed Issues, Revision 37
vector<bool>: More Problems, Better Solutions
Implementing Concepts
Concepts for C++0x Revision 1
Towards a Better Allocator Model
Improving Usability and Performance of TR1 Smart Pointers
C++ Standard Library Active Issues List (Revision R38)
C++ Standard Library Defect Report List (Revision R38)
C++ Standard Library Closed Issues List (Revision R38)
A Proposal to Add an Rvalue Reference to the C++ Language: Proposed Wording
Rvalue Reference Recommendations for Chapter 20
Rvalue Reference Recommendations for Chapter 21
Rvalue Reference Recommendations for Chapter 23
Rvalue Reference Recommendations for Chapter 24
Rvalue Reference Recommendations for Chapter 25
Rvalue Reference Recommendations for Chapter 26
Rvalue Reference Recommendations for Chapter 27
TG4 liaison report
A Proposal to Improve const_iterator Use (version 2)
Proposal to add Contract Programming to C++ (revision 3)
Synergies between Contract Programming, Concepts and Static Assertions
Proposal for new for-loop (revision 1)
Wording for imaginary numbers
14 crazy ideas for the standard library in C++0x
Range Library Proposal
Proposal for new string algorithms in C++0x
The Cursor/Property Map Abstraction
Thread-Local Storage
C++ Threads
Memory model for multithreaded C++: August 2005 status update
Adding Alignment Support to the C++ Programming Language
A proposal to add an utility class to represent optional objects (Revision 1)
A proposal to add a general purpose ranged-checked numeric_cast<> (Revision 1)
A proposal to extend numeric_limits for consistent range query (Revision 1)
AGENDA
Preliminary Threading Library Proposal for TR2
Further Restrictions on Special Math Functions
A formalism for C++
Specifying C++ concepts
Meeting information for SC 22/WG 21 Meetings in Berlin
Defining Members of Explicit Specializations
Filesystem Library Proposal for TR2 (Revision 1)
Initialization and initializers
Progress toward Opaque Typedefs for C++0X
Extensible Literals
A Modest Proposal: Fixing ADL (revision 1)
Deducing the type of variable from its initializer expression (revision 3)
Delegating Constructors (revision 2)
Proposed resolution of core issue 301 (revision 1)
Forwarding and inherited constructors
Concept proposal comparison
Proposal to Add Date-Time to the C++ Standard Library
C++0x Standard Library wishlist (revision 5)
C++ Standard Core Language Active Issues, Revision 38
C++ Standard Core Language Defect Reports, Revision 38
C++ Standard Core Language Closed Issues, Revision 38
Working Draft, Standard for Programming Language C++
Editor's Report
A Multi-threading Library for Standard C++, Revision 1
C++ Standard Library Active Issues List (Revision R39)
C++ Standard Library Defect Report List (Revision R39)
C++ Standard Library Closed Issues List (Revision R39)
Memory Model for C++: Status update
A sketch for a namespace() operator
A Proposal to Improve const_iterator Use (version 3)
A Proposal to Add Random-Number Distributions to C++0x
Minutes of J16 Meeting No. 41/WG21 Meeting No. 35, October 3-8, 2005
Minutes of ISO WG21 Meeting, October 2, 2005
Agenda
Initializer lists
TG5 Liaison Report #11
Networking proposal for TR2 (rev. 1)
C++ Standard Library Active Issues List (Revision R40)
C++ Standard Library Defect Report List (Revision R40)
C++ Standard Library Closed Issues List (Revision R40)
C++ Standard Core Language Active Issues, Revision 39
C++ Standard Core Language Defect Reports, Revision 39
C++ Standard Core Language Closed Issues, Revision 39
Random Number Generation in C++0X: A Comprehensive Proposal
Improvements to TR1's Facility for Random Number Generation
Filesystem Library Proposal for TR2 (Revision 2)
C++ Standard Core Language Active Issues, Revision 40
C++ Standard Core Language Defect Reports, Revision 40
C++ Standard Core Language Closed Issues, Revision 40
Lookup Issues in Destructor and Pseudo-Destructor References
Any Library Proposal for TR2
Why POSIX Threads Are Unsuitable for C++
Agenda: J16 Meeting No. 42, WG21 Meeting No. 37
A Memory Model for C++: Strawman Proposal
Transparent Garbage Collection for C++
A finer-grained alternative to sequence points
Names, Linkage, and Templates
Portland meeting information
The Memory Model and the C++ Library, Non-Memory Actions etc.
C++ Standard Library Active Issues List (Revision R41)
C++ Standard Library Defect Report List (Revision R41)
C++ Standard Library Closed Issues List (Revision R41)
A Proposal to Add an Rvalue Reference to the C++ Language: Proposed Wording Revision 2
Upgrading the Interface of Allocators using API Versioning
LWG Paper Summary
New Character Types in C++
A Design Rationale for C++/CLI Version 1.1
Proposed Library Additions for Code Conversion
A proposal to add lambda functions to the C++ standard
Class member initializers
Adding "extern template"
Wording for range-based for-loop
Proposal to add Contract Programming to C++ (revision 4)
Generic Support for Threading Models
Modules in C++ (Revision 3)
Decimal Types for C++: Draft 3
Thread-Local Storage
Lambda expressions and closures for C++
State of C++ Evolution (before Berlin 2006 Meeting)
C99 Compatibility : __func__ and predeclared identifiers
Adding Alignment Support to the C++ Programming Language
Generalized Constant Expressions — Revision 2
Lexical Conversion Library Proposal for TR2
Boost Network Library Query
Filesystem Library Proposal for TR2 (Revision 3)
Dynamic Shared Objects: Survey and Issues
Decimal Types for C++: Draft 4
Decltype (revision 5)
Generalized Constant Expressions— Revision 3
Uniform Use of std::string Revision 1
Simple Numeric Access Revision 1
long long, size t and compatibility
Deducing the type of variable from its initializer expression (revision 4)
Request the Standard Provide Explicit Specialization of char_traits For All Built-in Character Types
Delegating Constructors (revision 3)
Adding "extern template" (version 2)
Adding extended integer types to C++ (Revision 1)
Proposed Text for minmax (N1840)
Proposed Text for defaultfloat (N1842)
Minutes of ISO WG21 Meeting, April 2, 2006
Minutes of J16 Meeting No. 42/WG21 Meeting No. 37, April 3-7, 2006
C++ Standard Core Language Active Issues, Revision 41
C++ Standard Core Language Defect Reports, Revision 41
C++ Standard Core Language Closed Issues, Revision 41
C++ Standard Library Active Issues List (Revision R42)
C++ Standard Library Defect Report List (Revision R42)
C++ Standard Library Closed Issues List (Revision R42)
LWG Paper Summary
Impact of Language Changes on LWG Schedule
A maximum significant decimal digits value for the C++0x Standard Library Numeric limits
Accessibility and Visibility in C++ Modules
Proposed Library Additions for Code Conversion
Editor's Report
Working Draft, Standard for Programming Language C++
Memory Model Overview
State of C++ Evolution (after Berlin 2006 Meeting)
Thread Subcommittee Minutes from Berlin
Versioning with Namespaces
C99 and POSIX(2001) Compatibility
Plugins in C++
Should volatile Acquire Atomicity and Thread Visibility Semantics?
New Character Types in C++
Agenda
Proposal for an Infinite Precision Integer for Library Technical Report 2, Revision 1
Business plan and convenor's report
Input & Output of NaN and infinity for the C++ Standard Library
erase(iterator) for unordered containers should not return an iterator
C++ Standard Library Active Issues List (Revision R43)
C++ Standard Library Defect Report List (Revision R43)
C++ Standard Library Closed Issues List (Revision R43)
A Brief Introduction to Rvalue References
Minor Modifications to the type traits Wording
C++ Standard Core Language Active Issues, Revision 42
C++ Standard Core Language Defect Reports, Revision 42
C++ Standard Core Language Closed Issues, Revision 42
Random Number Generation in C++0X: A Comprehensive Proposal, version 2
Proposal to Consolidate the Subtract-with-Carry Engines
C++0x Standard Library wishlist (revision 6)
Minimal Unicode support for the standard library
Concepts for the C++0x Standard Library: Approach
Concepts for the C++0x Standard Library: Introduction
Concepts for the C++0x Standard Library: Utilities
Concepts for the C++0x Standard Library: Iterators
Concepts for the C++0x Standard Library: Algorithms
Concepts for the C++0x Standard Library: Numerics
Concepts
Simplifying And Extending Mutex and Scoped Lock Types For C++ Multi-Threading Library
Memory Mapped Files And Shared Memory For C++
Improving STL Allocators
Bool_set: multi-valued logic
An Atomic Operations Library for C++
Conceptualizing the Range-Based for Loop
Proposal to Add a Dynamically Sizeable Bitset to the Standard Library Technical Report Revision 1
Evolution of the C++ Standard Library
Sequencing and the concurrency memory model
Raw String Literals
Networking Library Proposal for TR2
C++ Standard Core Language Active Issues, Revision 43
C++ Standard Core Language Defect Reports, Revision 43
C++ Standard Core Language Closed Issues, Revision 43
Proposed Text for Proposal to add Date-Time to the Standard Library 1.0
Proposal for new string algorithms in TR2
Library Exception Propagation Support
POD's Revisited
AGENDA: J16 Meeting No. 43, WG21 Meeting No. 38
A proposal to add stream objects based on fixed memory buffers
TR2 Diagnostics Enhancements
A Proposal to add Interval Arithmetic to the C++ Standard Library
Range Library Core
Yet another type-trait: decay
Enhancing the time_get facet for POSIX� compatibility
Iostream manipulators for convenient extraction and insertion of struct tm objects
Iostream manipulators for convenient extraction and insertion of monetary values
Modules in C++ (Revision 4)
Plugins in C++
Prism: A Principle-Based Sequential Memory Model for Microsoft Native Code Platforms
Oxford meeting invitation
Random Number Generation in C++0X: A Comprehensive Proposal, version 3
Variadic Templates (Revision 3)
Concepts (Revision 1)
Concepts for the C++0x Standard Library: Utilities (Revision 1)
Concepts for the C++0x Standard Library: Iterators (Revision 1)
Concepts for the C++0x Standard Library: Algorithms (Revision 1)
Concepts for the C++0x Standard Library: Containers
Signals and Slots for Library TR2
A Brief Introduction to Variadic Templates
IEEE 754R Support and Threading (and Decimal)
Asynchronous Exceptions for Threads
A Threading API for C++
C++ Standard Library Active Issues List (Revision R44)
C++ Standard Library Defect Report List (Revision R44)
C++ Standard Library Closed Issues List (Revision R44)
Multithreading API for C++0X - A Layered Approach
long long Goes to the Library
Transporting Values and Exceptions between Threads
Scoped Concept Maps
3 of the least crazy ideas for the standard library in C++0x
Initializer lists
Hierarchical Data Structures and Related Concepts for the C++ Standard Library
POD's Revisited; Resolving Core Issue 568 (Revision 1)
A Modest Proposal: Fixing ADL (revision 2)
A Proposal to Add Parallel Iteration to the Standard Library
Proposed C++0x Keywords Considered
Cloning and Throwing Dynamically Typed Exceptions
Exception Propagation across Threads
Explicit Virtual Overides
Minutes of ISO WG21 Meeting, October 15, 2006
Minutes of J16 Meeting No. 43/WG21 Meeting No. 38, October 16-20, 2006
Random Number Generation in C++0X: A Comprehensive Proposal, version 4
Templates Aliases
long long Goes to the Library, Revision 1
Decltype (revision 6): proposed wording
Generalized Constant Expressions— Revision 4
Minimal Dynamic Library Support
A Proposal to Add an Rvalue Reference to the C++ Language: Proposed Wording: Revision 3
Inheriting Constructors
April 2007 Meeting
Proposed Improvements to the Presentation of Requirements for Functions
State of C++ Evolution (after Portland 2006 Meeting)
Adding the prohibited access specifier to C++09
C++ Standard Core Language Active Issues, Revision 44
C++ Standard Core Language Defect Reports, Revision 44
C++ Standard Core Language Closed Issues, Revision 44
Transparent Programmer-Directed Garbage Collection for C++
Transparent Garbage Collection for C++ (Revised)
C++ Standard Library Active Issues List (Revision R45)
C++ Standard Library Defect Report List (Revision R45)
C++ Standard Library Closed Issues List (Revision R45)
Editor's Report
Working Draft, Standard for Programming Language C++
Programming Languages —C++
Bool_set: multi-valued logic (revision 1)
A Proposal to add Interval Arithmetic to the C++ Standard Library (revision 2)
A Less Formal Explanation of the Proposed C++ Concurrency Memory Model
Thoughts on a Thread Library for C++
Adding Alignment Support to the C++ Programming Language / Consolidated
Strong Typedefs in C++09(Revisited)
State of C++ Evolution (between Portland and Oxford 2007 Meetings)
Proposal for an Infinite Precision Integer for Library Technical Report 2, Revision 2
Proposal for exact specification of is modulo
C++ Atomic Types and Operations
Raw String Literals (Revision 1)
Thread-Local Storage
Dynamic Initialization and Destruction with Concurrency
New Character Types in C++
Extending sizeof to apply to non-static data members without an object
Variadic Templates for the C++0x Standard Library
Proposed Wording for Variadic Templates
A simple and efficient memory model for weakly-ordered architectures
C++ Standard Library Active Issues List (Revision R46)
C++ Standard Library Defect Report List (Revision R46)
C++ Standard Library Closed Issues List (Revision R46)
Minor Modifications to the type traits Wording Revision 1
LWG Issue 206: Linking new/delete operators
UTF-8 String Literals
Library Issue 96: Fixing vector<bool>
Considering Concept Constraint Combinators
C++ Standard Core Language Active Issues, Revision 45
C++ Standard Core Language Defect Reports, Revision 45
C++ Standard Core Language Closed Issues, Revision 45
Adding Alignment Support to the C++ Programming Language / Wording
Agenda
Overview of Linux-Kernel Reference Counting
July 2007 Meeting of WG21/J16 Travel Information
State of C++ Evolution (pre-Oxford 2007 Meeting)
Universal Character Names in Literals
Sequencing and the concurrency memory model (revised)
POD's Revisited; Resolving Core Issue 568 (Revision 2)
Core Extensions for Evolution
Diagnostics Enhancements for C++0x
Networking Library Proposal for TR2 (Revision 1)
Memory Model Rationales
Sequential Consistency for Atomics
Proposed Text for Chapter 30, Thread Support Library [threads]
Language Support for Transporting Exceptions between Threads
C++ Standard Library Active Issues List (Revision R47)
C++ Standard Library Defect Report List (Revision R47)
C++ Standard Library Closed Issues List (Revision R47)
Issues From Batavia
Thread Launching for C++0X
Proposed Text for Parallel Task Execution
Some Small Additions to iostream
Names, Linkage, and Templates (rev 1)
C++ Standard Core Language Defect Reports, Revision 46
C++ Standard Core Language Active Issues, Revision 46
C++ Standard Core Language Closed Issues, Revision 46
Proposed Wording for Variadic Templates (Revision 1)
Variadic Templates for the C++0x Standard Library (Revision 1)
Proposed Wording for Concepts
decltype for the C++0x Standard Library
Proposed Text for Chapter 29, Atomic Operations Library [atomics]
Wording for range-based for-loop (revision 1)
Prism: A Principle-Based Sequential Memory Model for Microsoft Native Code Platforms
Extension for the programming language C++ to support decimal floating-point arithmetic
Improved min/max
Operator Overloading
AGENDA J16 Meeting No. 44 WG21 Meeting No. 39 April 16-20, 2006, Oxford, UK
C99 Compatibility : __func__ and predeclared identifiers
Inheriting Constructors
A Specification to deprecate vector<bool>
Consistent Insertion into Standard Containers
Minimal Unicode support for the standard library (revision 2)
UTF-8 String Literals
Defaulted and Deleted Functions
Enhancing the time_get facet for POSIX� compatibility, Revision 1
Support for sequence in-place construction
Strongly Typed Enums (revision 2)
A name for the null pointer: nullptr (revision 3)
Initializer lists (Rev. 3)
Report on language support for Multi-Methods and Open-Methods for C++
Placement Insert for Containers
Constant Expressions in the Standard Library
Initializer Lists for Standard Containers
An analysis of concept intersection
Toronto Agenda
Explicit Conversion Operator Draft Working Paper
Seeking a Syntax for Attributes in C++09
Improved integration with C arrays and strings
State of C++ Evolution (pre-Oxford 2007 Meeting)
Cloning and Throwing Dynamically Typed Exceptions (Rev 1)
POD's Revisited; Resolving Core Issue 568 (Revision 3)
STL singly linked lists
Improving shared_ptr for C++0x
basic_string operator <<
French Panel (AFNOR) Position
Generalized Constant Expressions—Revision 5
Towards support for attributes in C++
A simple and efficient memory model for weakly-ordered architectures
Minimal Unicode support for the standard library (revision 3)
A finer-grained alternative to sequence points (revised)
Two missing traits: enable_if and conditional
Diagnostics Enhancements for C++0x (Rev. 1)
Proposed Wording for Variadic Templates (Revision 2)
Wording for range-based for-loop (revision 2)
Wording for decay, make_pair and make_tuple
Range Utilities for C++0x
2 of the least crazy ideas for the standard library in C++0x
Toward a More Perfect Union
New Character Types in C++
C99 Compatibility : __func__ and predeclared identifiers (revision 1)
Adding Alignment Support to the C++ Programming Language / Wording
Extending sizeof to apply to non-static data members without an object (revision 1)
Inheriting Constructors (revision 1)
Minor Modifications to the type traits Wording Revision 2
Container insert/erase and iterator constness
Removing unused allocator functions
Templates Aliases
Specify header dependency for <iostream>
C++ Data-Dependency Ordering
Optimization-robust finalization
Explicit Memory Fences
C++ Standard Core Language Active Issues, Revision 47
C++ Standard Core Language Defect Reports, Revision 47
C++ Standard Core Language Closed Issues, Revision 47
Minutes of J16 Meeting No. 44/WG21 Meeting No. 39, April 16-20, 2007
Minutes of ISO WG21 Meeting, April 15, 2007
Placement Insert for Containers (Revision 1)
AGENDA July 16-20, 2007, Toronto, Ontario, Canada
Incompatible changes in C++0x
EASTL -- Electronic Arts Standard Template Library
Optional Sequential Consistency
Non-Memory Actions (Core Aspects)
Object Aliasing and Threads
Non-Memory Actions (Library)
Thread Pools and Futures
C++ Standard Library Active Issues List (Revision R48)
C++ Standard Library Defect Report List (Revision R48)
C++ Standard Library Closed Issues List (Revision R48)
Thread-Local Storage
Digit Separators
Extensible Literals (revision 2)
Editor's report
Working Draft, Standard for Programming Language C++
A Multi-threading Library for Standard C++, Revision 2
Programmer Directed GC for C++
Transparent Programmer-Directed Garbage Collection for C++
Constant Expressions in the Standard Library —Revision 1
October 2007 Meeting
Business plan and convenor's report
State of C++ Evolution (Toronto 2007 Meeting)
Standard Library Applications for Deleted Functions
Standard Library Applications for Explicit Conversion Operators
POD's Revisited; Resolving Core Issue 568 (Revision 4)
Raw and Unicode String Literals; Unified Proposal
Diagnostics Enhancements; Resolution of Small Issues
Improving shared_ptr for C++0x, Revision 1
Thread-Safety in the Standard Library
Concatenating tuples
Concurrency memory model (revised)
Adding Alignment Support to the C++ Programming Language / Wording
Revised system_error
C++ Standard Core Language Active Issues, Revision 48
C++ Standard Core Language Defect Reports, Revision 48
C++ Standard Core Language Closed Issues, Revision 48
Proposed Wording for Concepts (Revision 1)
Adding allocator support to std::function for C++0x
Error-handling and Exception-related library changes for C++0x
Transparent Programmer-Directed Garbage Collection for C++
2008 Fees for Participation on INCITS Technical Committees and Task Groups
Namespace Regions
Editor's report
Working Draft, Standard for Programming Language C++
Modules in C++ (Revision 5)
C++ Standard Library Active Issues List (Revision R49)
C++ Standard Library Defect Report List (Revision R49)
C++ Standard Library Closed Issues List (Revision R49)
Multi-threading Library for Standard C++
Enhancing the time_get facet for POSIX� compatibility, Revision 2
Concepts for the C++0x Standard Library: Utilities (Revision 2)
Concepts for the C++0x Standard Library: Iterators (Revision 2)
C++ Atomic Types and Operations
Dynamic Initialization and Destruction with Concurrency
Defaulted and Deleted Functions
Inconsistencies in IOStreams Numeric Extraction
Proposal for Date-Time Types in C++0x To Support Threading APIs
Lambda expressions and closures for C++ (Revision 1)
Namespace Association ("strong" using)
Argument Deduction for Constructors
Explicit Conversion Operator Draft Working Paper Revision 1
Concurrency memory model (revised again)
State of C++ Evolution (Toronto 2007 Meeting)
The Syntax of auto Declarations
Concurrency memory model compiler consequences
Response to N2257=07-0117 "Removing unused allocator functions"
C99 Compatibility : __func__ and predeclared identifiers (revision 2)
Adding Alignment Support to the C++ Programming Language / Wording
POD's Revisited; Resolving Core Issue 568 (Revision 5)
Decltype (revision 7): proposed wording
Placement Insert for Containers (Revision 2)
Defaulted and Deleted Functions
Strongly Typed Enums (revision 3)
Wording for std::numeric_limits<T>::lowest()
Constant Expressions in the Standard Library —Revision 2
Container insert/erase and iterator constness (Revision 1)
Improving shared_ptr for C++0x, Revision 2
A Specification for vector<bool>
Class member initializers
Minutes of J16 Meeting No. 45/WG21 Meeting No. 40, July 16-20, 2007
Minutes of ISO WG21 Meeting, July 15, 2007
C++ Data-Dependency Ordering: Atomics
C++ Data-Dependency Ordering: Memory Model
C++ Data-Dependency Ordering: Function Annotation
Converting Memory Fences to N2324 Form
C++ Library Working Group Status Report (post-Toronto 2007 Meeting)
Development of C++ Standard C++ Library Technical Report no. 1
Explicit Virtual Overides
C++ Standard Core Language Active Issues, Revision 49
C++ Standard Core Language Defect Reports, Revision 49
C++ Standard Core Language Closed Issues, Revision 49
Working Draft, Standard for Programming Language C++
Editor’s Report
C++ Standard Library Active Issues List (Revision R50)
C++ Standard Library Defect Report List (Revision R50)
C++ Standard Library Closed Issues List (Revision R50)
WG21 agenda
AGENDA J16 Meeting No. 46 WG21 Meeting No. 41 October 1-6, 2007, Kona, Hawaii
Inheriting Constructors (revision 2)
Extending move semantics to *this (revised wording)
User-defined Literals (aka. Extensible Literals (revision 3))
Towards support for attributes in C++ (Revision 2)
Explicit Conversion Operator Draft Working Paper (revision 2)
C++ Atomic Types and Operations
Dynamic Initialization and Destruction with Concurrency
Abandoning a Process
Raw and Unicode String Literals; Unified Proposal (Rev. 1)
Initializer lists WP wording
Namespace Regions
Omnibus Allocator Fix-up Proposals
Pointer Arithmetic for shared_ptr
State of C++ Evolution (pre-Kona 2007 Meeting)
C++ Library Working Group Status Report (pre-Kona 2007 Meeting)
Recommendations for Resolving Issues re [rand]
A Memory Model for C++: Sequential Consistency for Race-Free Programs
C++ Atomic Types and Operations
Wording for range-based for-loop (revision 3)
C++ Standard Core Language Active Issues, Revision 50
C++ Standard Core Language Defect Reports, Revision 50
C++ Standard Core Language Closed Issues, Revision 50
Proposed Wording for Concepts (Revision 2)
A Tour of the Concepts Wording
February 2008 Meeting
Code Conversion Facets for the Standard C++ Library
Names, Linkage, and Templates (rev 2)
C++ Standard Library Active Issues List (Revision R51)
C++ Standard Library Defect Report List (Revision R51)
C++ Standard Library Closed Issues List (Revision R51)
Mutex, Lock, Condition Variable Rationale
C++ Dynamic Library Support
Simple Numeric Access Revision 2
Proposed Resolutions for the Outstanding Issues in Chapter 28: Regular expressions library
Thread-Safety in the Standard Library (Rev 1)
Proposal for Date-Time Types in C++0x To Support Threading APIs v2
Unrestricted Unions
Lambda Expressions and Closures: Wording for Monomorphic Lambdas
Proposed Wording for Scoped Concept Maps
Diagnostics Issues (Rev. 1)
Agenda
C++0x Timing Options for Kona Discussion
Towards support for attributes in C++ (Revision 3)
POSIX/C++ Liaison Report
Proposed Wording for Concepts (Revision 3)
Diagnostics Issues (Rev. 2)
Recommendations for Resolving Issues re [rand], Version 2
Recommendations for Resolving the 2007-09-21 Issues re [rand]
DRAFT C++ Dynamic Library Support
Class member initializers
C++ Atomic Types and Operations
Concurrency memory model (final revision)
Unrestricted Unions (Revision 1)
A name for the null pointer: nullptr (revision 4)
State of C++ Evolution (post-Kona 2007 Meeting)
C++ Library Working Group Status Report (post-Kona 2007 Meeting)
Standard Library Applications for Explicit Conversion Operators
Explicit bool for Smart Pointers
Small Allocator Fix-ups
Explicit Conversion Operator Draft Working Paper (revision 3)
Inheriting Constructors (revision 3)
Extending move semantics to *this (revised wording)
Abandoning a Process
Raw and Unicode String Literals; Unified Proposal (Rev. 2)
Dynamic Initialization and Destruction with Concurrency
New Function Declarator Syntax Wording
The Scoped Allocator Model
Multi-threading Library for Standard C++
STL singly linked lists (revision 2)
C++ Standard Core Language Active Issues, Revision 51
C++ Standard Core Language Defect Reports, Revision 51
C++ Standard Core Language Closed Issues, Revision 51
Minutes of WG21 Meeting No. 41, October 1-6, 2007
Minutes of J16 Meeting No. 46, October 1-6, 2007
Minutes of ISO WG21 Meeting, October 1, 2007
Thread Cancellation
C++ Standard Library Active Issues List (Revision R52)
C++ Standard Library Defect Report List (Revision R52)
C++ Standard Library Closed Issues List (Revision R52)
Allow atomics use in signal handlers
Working Draft, Standard for Programming Language C++
Editor’s Report
Agenda
Winter 2008 Meeting (Version 2)
WG 14: Towards Attributes for C
June 2008 Meeting
C++ Standard Core Language Active Issues, Revision 52
C++ Standard Core Language Defect Reports, Revision 52
C++ Standard Core Language Closed Issues, Revision 52
AGENDA J16 Meeting No. 47 February 25 - Mar 1, 2008, Bellevue, WA
Uniform initialization design choices
A Proposal to Add typedef default_random_engine to C++0X
Normative Language to Describe Value Copy Semantics
A Less Formal Explanation of the Proposed C++ Concurrency Memory Model
Minimal Support for Garbage Collection and Reachability-Based Leak Detection
C++ Standard Library Active Issues List (Revision R53)
C++ Standard Library Defect Report List (Revision R53)
C++ Standard Library Closed Issues List (Revision R53)
A variadic std::min(T, ...) for the C++ Standard Library
Alternative Allocators and Standard Containers
Lambda Expressions and Closures: Wording for Monomorphic Lambdas (Revision 2)
Extending Variadic Template Template Parameters
C++ Data-Dependency Ordering: Atomics and Memory Model
C++ Data-Dependency Ordering: Function Annotation
C++ Standard Library Active Issues List (Revision R54)
C++ Standard Library Defect Report List (Revision R54)
C++ Standard Library Closed Issues List (Revision R54)
Multi-threading Library for Standard C++ (Revision 1)
Custom Time Duration Support
Forward declaration of enumerations
Iterator Concepts for the C++0x Standard Library
Proposed Wording for Concepts (Revision 4)
Core Concepts for the C++0x Standard Library
Indicating iostream failures with system_error
C++ Standard Core Language Active Issues, Revision 53
C++ Standard Core Language Defect Reports, Revision 53
C++ Standard Core Language Closed Issues, Revision 53
State of C++ Evolution (Pre-Bellevue 2008 Mailing)
C++ Library Working Group Status Report (Belleuve 2008 Mailing)
Nesting Exceptions
BSI Position on Lambda Functions
Named Lambdas and Local Functions
Inheriting Constructors (revision 4)
Dynamic Initialization and Destruction with Concurrency
Implicit Conversion Operators for Atomics
Threads API Review Committee Report
June 2008 Meeting
Compiler Support for type_traits
Library thread-safety from a user's point of view, with wording
Proposed Wording for Concepts (Changes from Revision 3 to Revision 4)
Working Draft, Standard for Programming Language C++
Editor’s Report
The Scoped Allocator Model (Rev 1)
Conservative Swap and Move with Stateful Allocators
Allocator-specific Swap and Move Behavior
Why duration Should Be a Type in C++0X
Minimal Support for Garbage Collection and Reachability-Based Leak Detection (revised)
Timed_mutex in C++0x
Lambda Expressions and Closures: Wording for Monomorphic Lambdas (Revision 3)
Making It Easier to Use std::type_info as an Index in an Associative Container
Initializer lists WP wording
Uniform initialization design choices (Revision 2)
Tuples and Pairs
Concurrency Modifications to Basic String
Namespace Association ("inline namespace")
POSIX Liaison Report
Fall 2008 meeting
Removal of System error support
A New Interface for C++ std::duration Type
Inheriting Constructors (revision 5)
New Function Declarator Syntax Wording
Reserved namespaces for POSIX
STL singly linked lists (revision 3)
Unrestricted Unions (Revision 2)
Thread-Local Storage
Removal of auto as a storage-class specifier
Allow atomics use in signal handlers
Excision of Clause 31
Lambda Expressions and Closures: Wording for Monomorphic Lambdas (Revision 4)
A variadic std::min(T, ...) for the C++ Standard Library (Revision 2)
Using ytime for Times in the Thread Support Library
Towards support for attributes in C++ (Revision 4)
The Scoped Allocator Model (Rev 2)
Extending Variadic Template Template Parameters (Revision 1)
C++ Data-Dependency Ordering: Atomics and Memory Model
Nesting Exception Objects (Revision 1)
An Asynchronous Future Value
C++ Standard Core Language Active Issues, Revision 54
C++ Standard Core Language Defect Reports, Revision 54
C++ Standard Core Language Closed Issues, Revision 54
State of C++ Evolution (Post-Bellevue 2008 Mailing)
C++ Library Working Group Status Report (Post-Bellevue 2008 Mailing)
Forward declaration of enumerations (rev. 1)
More STL algorithms
Iterator Concepts for the C++0x Standard Library (Revision 1)
Core Concepts for the C++0x Standard Library (Revision 1)
Concepts for the C++0x Standard Library: Algorithms (Revision 2)
Concepts for the C++0x Standard Library: Numerics (Revision 1)
Initializer Lists — Alternative Mechanism and Rationale
Type-Soundness and Optimization in the Concepts Proposal
C++ Standard Library Active Issues List (Revision R55)
C++ Standard Library Defect Report List (Revision R55)
C++ Standard Library Closed Issues List (Revision R55)
Some More Small Additions to iostream
Named Requirements for C++0X Concepts
Unified Function Syntax
Default Move Functions
Default Swap Functions
Minimal Support for Garbage Collection and Reachability-Based Leak Detection
Minimal Support for Garbage Collection and Reachability-Based Leak Detection (revised)
Minimal Garbage Collection Status API
Working Draft, Standard for Programming Language C++
Editor’s Report
Simplifying swap overloads
Refactoring numeric_limits
Minutes of J16 Meeting No. 47, February 25-March 1, 2008
Minutes of ISO WG21 Meeting, February 23, 2008
WG21 Agenda
Unofficial Record of Discussion: J16 Meeting No. 47, February 25-March 1, 2008
State of C++ Evolution (Pre-Antipolis 2008 Mailing)
C++ Library Working Group Status Report (Pre-Antipolis 2008 Mailing)
noncopyable utility class
Sexagesimal Numbers in C++
BSI Requirements for a system-time library in C++0x
Thoughts on Implementing errno as a Macro
Changing some "undefined behavior" into "ill-formed"
Working Draft, Standard for Programming Language C++
Editor's Report
C++ Standard Core Language Active Issues, Revision 55
C++ Standard Core Language Defect Reports, Revision 55
C++ Standard Core Language Closed Issues, Revision 55
AGENDA J16 Meeting No. 48 June 9-14, 2008, Sophia Antipolis, France
C++ Standard Library Active Issues List (Revision R56)
C++ Standard Library Defect Report List (Revision R56)
C++ Standard Library Closed Issues List (Revision R56)
A Foundation to Sleep On
Proposed Wording for Concepts (Revision 5)
Concepts for the C++0x Standard Library: Chapter 17 -Introduction (Revision 1)
CONCEPTS FOR CLAUSE 18
Concepts for the C++0x Standard Library: Diagnostics library
Core Concepts for the C++0x Standard Library (Revision 2)
Concepts for the C++0x Standard Library: Utilities (Revision 3)
Concepts for the C++0x Standard Library: Containers (Revision 1)
Iterator Concepts for the C++0x Standard Library (Revision 2)
Concepts for the C++0x Standard Library: Algorithms (Revision 2)
Concepts for the C++0x Standard Library: Numerics (Revision 2)
An Asynchronous Future Value (revised)
Non-static data member initializers
Detailed Reporting for Input/Output Library Errors
Resolving the difference between C and C++ with regards to object representation of integers
Shared_ptr atomic access
Improved support for bidirectional fences
Solving the SFINAE problem for expressions
Local and Unnamed Types as Template Arguments
Error Handling Specification for Chapter 30 (Threads)
Revisiting std::shared_ptr comparison
Improving the wording of std::shared_ptr
Algorithms for permutations and combinations, with and without repetitions
Initializer Lists — Alternative Mechanism and Rationale (v. 2)
Allocator Concepts
Proposed Wording for Placement Insert
C++ Data-Dependency Ordering: Function Annotation
Agenda
Fundamental Mathematical Concepts for the STL in C++0x
Concept Implication and Requirement Propagation
Concurrency Modifications to Basic String
C++ Dynamic Arrays
Proposed Resolution for Valarray Constructors
Toward a More Complete Taxonomy of Algebraic Properties for Numeric Libraries in TR2
Constness of Lambda Functions
State of C++ Evolution (Post-Antipolis 2008 Mailing)
C++ Library Working Group Status Report (Post-Antipolis 2008 Mailing)
Allocator Concepts (revision 1)
Detailed Reporting for Input/Output Library Errors (Revision 1)
Core issue 654 wording
Local and Unnamed Types as Template Arguments
Constness of Lambda Functions (Revision 1)
Thread-Local Storage
Dynamic Initialization and Destruction with Concurrency
A Foundation to Sleep On
C++ Data-Dependency Ordering: Atomics and Memory Model
More STL algorithms (revision 2)
Reserved namespaces for POSIX
Concurrency Modifications to Basic String
Thread-Safety in the Standard Library (Rev 2)
Minimal Support for Garbage Collection and Reachability-Based Leak Detection (revised)
An Asynchronous Future Value: Proposed Wording
Initializer List proposed wording
Non-static data member initializers with draft of initializer list wording
Shared_ptr atomic access, revision 1
noncopyable utility class (revision 1)
Proposed Wording for Concepts (Revision 6)
Foundational Concepts for the C++0x Standard Library (Revision 3)
Error Handling Specification for Chapter 30 (Threads)
Initializer Lists for Standard Containers (Revision 1)
Proposed Wording for Placement Insert (Revision 1)
Minutes of PL22.16 Meeting No. 48, June 8-15, 2008
Minutes of ISO WG21 Meeting, June 8, 2008
issue 454: problems and solutions
C++ Standard Library Active Issues List (Revision R57)
C++ Standard Library Defect Report List (Revision R57)
C++ Standard Library Closed Issues List (Revision R57)
Forward declaration of enumerations (rev. 2)
C++ Standard Core Language Active Issues, Revision 56
C++ Standard Core Language Defect Reports, Revision 56
C++ Standard Core Language Closed Issues, Revision 56
Working Draft, Standard for Programming Language C++
Editor's Report
Requirements on programs and backwards compatibility
Concepts for the C++0x Standard Library: Containers (Revision 2)
Iterator Concepts for the C++0x Standard Library (Revision 3)
Concepts for the C++0x Standard Library: Algorithms (Revision 3)
Minutes of WG21 Meeting, June 8-15, 2008
Additional type traits: has_trivial_destructor_after_move and has_trivial_reallocation
C++ Standard Core Language Active Issues, Revision 57
C++ Standard Core Language Defect Reports, Revision 57
C++ Standard Core Language Closed Issues, Revision 57
C++ Standard Library Active Issues List (Revision R58)
C++ Standard Library Defect Report List (Revision R58)
C++ Standard Library Closed Issues List (Revision R58)
State of C++ Evolution (Mid-term 2008 Mailing)
C++ Library Working Group Status Report (Mid-term 2008 Mailing)
Expedited core issues handling
Business Plan and Convener's Report
Packaging Tasks for Asynchronous Execution
Proposed Wording for Concepts (Revision 7)
WG21 July 2009 Meeting
Non-static data member initializers
Allow auto for non-static data members
C++ Standard Core Language Active Issues, Revision 58
C++ Standard Core Language Defect Reports, Revision 58
C++ Standard Core Language Closed Issues, Revision 58
Extensions to the C++ Library to Support Mathematical Special Functions
Additional type traits: has_trivial_destructor_after_move and has_trivial_reallocation (rev1)
Initializer lists and move semantics
AGENDA PL22.16 Meeting No. 49 September 15-20, 2008, San Francisco, California
Variadic functions: Variadic templates or initializer lists?
Working Draft, Standard for Programming Language C++
Editor's Report
C++ Standard Library Active Issues List (Revision R59)
C++ Standard Library Defect Report List (Revision R59)
C++ Standard Library Closed Issues List (Revision R59)
Expedited core issues handling (revision 1)
Proposed Text for Bidirectional Fences
Extension for the programming language C++ to support decimal floating-point arithmetic
Appendix C: ISO C++ 2003 Compatibility
Concepts for the C++0x Standard Library: Iterators (Revision 3)
Concepts for the C++0x Standard Library: Utilities (Revision 4)
Concepts for the C++0x Standard Library: Numerics (Revision 3)
Foundational Concepts for the C++0x Standard Library (Revision 4)
Concepts for the C++0x Standard Library: Containers (Revision 3)
Iterator Concepts for the C++0x Standard Library (Revision 4)
Concepts for the C++0x Standard Library: Algorithms (Revision 4)
Proposed Wording for Concepts (Revision 8)
Simplifying unique copy
Unifying Operator and Function-Object Variants of Standard Library Algorithms
Comments on Asynchronous Future Value Proposal
Example POWER Implementation for C/C++ Memory Model
Rationale for the C++ working paper definition of "memory location"
Ambiguity and Insecurity with User-Defined Literals
Strong Compare and Exchange
Not so Trivial Issues with Trivial
User-defined Literals (aka. Extensible Literals (revision 4))
Towards support for attributes in C++ (Revision 5)
Proposed Text for Bidirectional Fences
March 2009 meeting information
Additional concepts: TriviallyDestructibleAfterMove and TriviallyReallocatable
Concepts for the C++0x Standard Library: Chapter 17 -Introduction (Revision 2)
Non-static data member initializers
Expedited core issues handling (revision 2)
Iterator Concepts for the C++0x Standard Library (Revision 5)
Concepts for the C++0x Standard Library: Algorithms (Revision 5)
Input/Output Library Thread Safety
Towards support for attributes in C++ (Revision 6)
Not so Trivial Issues with Trivial
Unified Function Syntax
Forward declaration of enumerations (rev. 3)
User-defined Literals (aka. Extensible Literals (revision 5))
Allocator Concepts, part 1 (revision 2)
Detailed Reporting for Input/Output Library Errors (Revision 2)
Concepts for the C++0x Standard Library: Utilities (Revision 5)
LWG Issues
Variadic functions: Variadic templates or initializer lists? -- Revision 1
Proposed Wording for Concepts (Revision 9)
Foundational Concepts for the C++0x Standard Library (Revision 5)
Small library thread-safety revisions
Concepts for the C++0x Standard Library: Containers (Revision 4)
Concepts for the C++0x Standard Library: Iterators (Revision 4)
Wording for range-based for-loop (revision 4)
Concepts for Clause 18: Part 2
Named Requirements for C++0X Concepts, version 2
Concepts for Random Number Generation in C++0X
C++ Data-Dependency Ordering: Function Annotation
Collected Issues with Atomics
Minutes of WG21 Meeting, September 15-20, 2008
Minutes of PL22.16 Meeting, September 15-20, 2008
Simplifying unique copy (Revision 1)
C++ Standard Core Language Active Issues, Revision 59
C++ Standard Core Language Defect Reports, Revision 59
C++ Standard Core Language Closed Issues, Revision 59
C++ Standard Library Active Issues List (Revision R60)
C++ Standard Library Defect Report List (Revision R60)
C++ Standard Library Closed Issues List (Revision R60)
AGENDA PL22.16 Meeting No. 50 WG21 Meeting No. 45 March 1-6, 2009, Summit, NJ
Working Draft, Standard for Programming Language C++
Editor's Report
Programming Languages — C++
Initializer lists and move semantics
A plea to reconsider detach-on-destruction for thread objects
C++ Standard Core Language Active Issues, Revision 60
C++ Standard Core Language Defect Reports, Revision 60
C++ Standard Core Language Closed Issues, Revision 60
C++ Standard Library Active Issues List (Revision R61)
C++ Standard Library Defect Report List (Revision R61)
C++ Standard Library Closed Issues List (Revision R61)
Library Support for hybrid error handling
Defects and Proposed Resolutions for Allocator Concepts
Directed Rounding Arithmetic Operations
A Safety Problem with RValue References (and what to do about it)
Issue Resolutions for Concept-enabled Random Number Generation in C++0X
Fixing freestanding
Improving the standard library's exception specifications
C++ Standard Core Language Active Issues, Revision 61
C++ Standard Core Language Defect Reports, Revision 61
C++ Standard Core Language Closed Issues, Revision 61
Ref-qualifiers for assignment operators of the Standard Library
Adding heterogeneous comparison lookup to associative containers
C++ Standard Library Active Issues List (Revision R62)
C++ Standard Library Defect Report List (Revision R62)
C++ Standard Library Closed Issues List (Revision R62)
AGENDA, PL22.16 Meeting No. 51, WG21 Meeting No. 46, July 13-18, 2009, Frankfurt, Germany
Unified Function Syntax
Issues with Constexpr
Thread Unsafe Standard Functions
Library Support for Hybrid Error Handling (Rev 1)
Defects and Proposed Resolutions for Allocator Concepts (Rev 1)
Problems with reference_closure
Fixing a Safety Problem with Rvalue References: Proposed Wording
Concepts and Ref-qualifiers
Several Proposals to Simplify pair
forward
Wording Tweaks for Concept-enabled Random Number Generation in C++0X
C++0X, CD 1, National Body Comments
Library Support for Hybrid Error Handling (Rev 2)
Response to "Problems with reference_closure"
Defects and Proposed Resolutions for Allocator Concepts (Rev 2)
Consolidated Quasi-Editorial Changes for National Body Comments Concerning the Core Language
Another numeric facet
Pack Expansion and Attributes
Fixing a Safety Problem with Rvalue References: Proposed Wording (Revision 1)
Remove std::reference_closure
Minutes of PL22.16 Meeting, March 2, 2009
Minutes of WG21 Meeting, March 2, 2009
Extension for the programming language C++ to support decimal floating-point arithmetic
Extensions to the C++ Library to Support Mathematical Special Functions
Changes to the Decimal TR since the PDTR Ballot
Explicit Virtual Overrides
Constraining unique_ptr
Rvalue References and Exception Safety
Working Draft, Standard for Programming Language C++
Editor's Report
New wording for C++0x Lambdas
C++ Standard Core Language Active Issues, Revision 62
C++ Standard Core Language Defect Reports, Revision 62
C++ Standard Core Language Closed Issues, Revision 62
C++ CD1 Comment Status
Thread Unsafe Standard Functions
C++ Standard Library Active Issues List (Revision R63)
C++ Standard Library Defect Report List (Revision R63)
C++ Standard Library Closed Issues List (Revision R63)
State of C++ Evolution (Post San Francisco 2008)
C++ Library Working Group Status Report (Post San Francisco 2008)
Summary of C++0x Standard : CD 1
Ensuring Certain C++0x Features "just work"
C++ Standard Library Active Issues List (Revision R64)
C++ Standard Library Defect Report List (Revision R64)
C++ Standard Library Closed Issues List (Revision R64)
Directed Rounding Arithmetic Operations (Revision 1)
C++ Standard Core Language Active Issues, Revision 64
C++ Standard Core Language Defect Reports, Revision 64
C++ Standard Core Language Closed Issues, Revision 64
C++ object lifetime interactions with the threads API
Base Class Aliases for The-C++-After-0x
Adding heterogeneous comparison lookup to associative containers for TR2 (Rev 1)
Report of the 2009-05.htm">2009-05.htm">2009-05.htm">2009-05 Batavia Meeting
C++0x Stream Positioning
Fixing freestanding: iteration 2
Axioms: Semantics Aspects of C++ Concepts
Moving Futures - Proposed Wording for UK comments 335, 336, 337 and 338
An Asynchronous Call for C++
Unified Function Syntax
AGENDA, PL22.16 Meeting No. 52, WG21 Meeting No. 47, October 19-24, 2009, Santa Cruz, California
Some Concerns About Axioms
The long pole gets longer
C++ Standard Library Active Issues List (Revision R65)
C++ Standard Library Defect Report List (Revision R65)
C++ Standard Library Closed Issues List (Revision R65)
C++ CD1 Comment Status
Directed Rounding Arithmetic Operations (Revision 2)
Ensuring Certain C++0x Features "just work" - Revision 1
A simple async()
Business Plan and Convener's Report
New wording for C++0x Lambdas
Defining default copy and move
Aggregation headers
Simplifying the use of concepts
Managing the lifetime of thread_local variables with contexts
Several Proposals to Simplify pair (Rev 1)
Specifying the complexity of size()
Comment on Proposed Trigraph Deprecation
Minimizing Dependencies within Generic Classes for Faster and Smaller Programs
SCARY Iterator Assignment and Initialization
Working Draft, Standard for Programming Language C++
Editor's Report
Intentional Concept Mapping
N2880 Distilled, and a New Issue With Function Statics
Exported Concept Maps
Concept mapping unconstrained templates
Minutes of WG21 Meeting, July 13, 2009
Minutes of PL22.16 Meeting, July 13, 2009
Specifying the complexity of size()(Revision 1)
Implicitly-Deleted Special Member Functions
More Collected Issues with Atomics
C++0x Stream Positioning - Revision 1
New wording for C++0x Lambdas (rev. 2)
Explicit Virtual Overrides
LWG Papers to Re-Merge into C++0x After Removing Concepts
Range-Based For Loop Wording (Without Concepts)
Unified Function Syntax
Fixing freestanding: iteration 2.2
Pack Expansion and Attributes
Fall 2009 WG21 Meeting Information
C++ Standard Core Language Active Issues, Revision 65
C++ Standard Core Language Defect Reports, Revision 65
C++ Standard Core Language Closed Issues, Revision 65
C++ CD1 Comment Status, Rev. 2
C++ Standard Library Active Issues List (Revision R66)
C++ Standard Library Defect Report List (Revision R66)
C++ Standard Library Closed Issues List (Revision R66)
Allocators without Concepts (preview)
Equality Comparison for Unordered Containers
Proposal to Simplify pair (rev 2)
Allocators post Removal of C++ Concepts
Additional Type Traits for C++0x
C++ Standard Library Active Issues List (Revision R67)
C++ Standard Library Defect Report List (Revision R67)
C++ Standard Library Closed Issues List (Revision R67)
forward
Accessing current exception during unwinding
Defining Move Special Member Functions
Unified Function Syntax
Comments on the C++ Memory Model Following a Partial Formalization Attempt
Spring 2010 JTC1/SC22/WG21 C++ Standards Committee Meeting
Reaching Scope of Lambda Expressions
Moving Swap Forward
Managing the lifetime of thread_local variables with contexts (Revision 1)
Working Draft, Standard for Programming Language C++
Editor's Report
C++ Standard Core Language Active Issues, Revision 66
C++ Standard Core Language Defect Reports, Revision 66
C++ Standard Core Language Closed Issues, Revision 66
Type traits and base classes
Issues on Futures
Background for issue 887: Clocks and Condition Variables
A simple async() (revision 1)
Core issue 743: decltype(...) name qualifiers
Core issue 814: Attribute [[nothrow]]
An Asynchronous Call for C++
An Analysis of Async and Futures
Collected Issues for Tuples
constexpr in the library: take 2
Pairs do not make good ranges
Core issue 789: Replacing Trigraphs
Moving Swap Forward (revision 1)
SCARY Iterator Assignment and Initialization Revision 1
Proposal to Simplify pair (rev 3)
Allocators post Removal of C++ Concepts (Rev 1)
Allowing Move Constructors to Throw
Additional Type Traits for C++0x (Revision 1)
C and C++ Thread Compatibility
Equality Comparison for Unordered Containers
Defining Move Special Member Functions
LWG Issue 897 and other small changes to forward_list
Unified Function Syntax
Core issue 789: Fixing Raw Strings wrt. Trigraphs
Core issue 743: decltype(...) name qualifiers
More Collected Issues with Atomics
Expanding the meaning of variable
constexpr in the library: take 2
Pairs do not make good ranges
A Simple Asynchronous Call
Issues on Futures (Rev. 1)
Reaching Scope of Lambda Expressions
Background for issue 887: Clocks and Condition Variables (Rev. 1)
Working Draft, Standard for Programming Language C++
Editor's Report
Gaussian Integers in the Standard Library
Minutes of WG21 Meeting, October 19, 2009
Minutes of PL22.16 Meeting, October 19, 2009
C++ Standard Core Language Active Issues, Revision 67
C++ Standard Core Language Defect Reports, Revision 67
C++ Standard Core Language Closed Issues, Revision 67
C++ CD1 Comment Status, Rev. 3
Rvalue References as "Funny" Lvalues
C++ Standard Library Active Issues List (Revision R68)
C++ Standard Library Defect Report List (Revision R68)
C++ Standard Library Closed Issues List (Revision R68)
AGENDA, PL22.16 Meeting No. 53, WG21 Meeting No. 48, March 8-13, 2010, Pittsburgh, PA
Fall 2010 WG21 Meeting Information
SUMMER 2010 JTC1/SC22/WG21 C++ STANDARDS COMMITTEE MEETING
Agenda and Meeting Notice for WG21 Telecon Meeting, 2010-06-18
C++ Standard Library Active Issues List (Revision R69)
C++ Standard Library Defect Report List (Revision R69)
C++ Standard Library Closed Issues List (Revision R69)
Harmonizing Effects and Returns Elements in Clause 21
Defaulting non-public special member functions on first declaration
Proposal to Simplify pair (rev 4)
Specifying Pointer-Like Requirements
C++ Standard Core Language Active Issues, Revision 68
C++ Standard Core Language Defect Reports, Revision 68
C++ Standard Core Language Closed Issues, Revision 68
C++ CD1 Comment Status, Rev. 4
Rvalue References as "Funny" Lvalues
Core issues 743 and 950: Additional decltype(...) uses
Core issue 374: Explicit specialization outside a template's parent
Core issue 951: Various Attribute Issues
Core issue 968: Disambiguating [[
Working Draft, Standard for Programming Language C++
Editor's Report
Conceptless Random Number Generation in C++0X
Managing the lifetime of thread_local variables with contexts (Revision 2)
Constexpr functions with const reference parameters (a summary)
Various threads issues in the library (LWG 1151)
Futures and Async Cleanup
Renaming launch::any and what asyncs really might be
Converting Lambdas to Function Pointers
Defining Move Special Member Functions
Updates to C++ Memory Model Based on Formalization
Iterators in C++0x
Fixing is_constructible and is_explicitly_convertible
Defining Swappable Requirements
Core issues 743 and 950: Additional decltype(...) uses (revision 1)
Allowing Move Constructors to Throw (Rev. 1)
Deprecating Exception Specifications
Converting Lambdas to Function Pointers
Defining Move Special Member Functions
C++ Standard Library Active Issues List (Revision D70)
A Taxonomy of Expression Value Categories
Conceptless Random Number Generation in C++0X, version 2
Explicit Initializers for Atomics
Futures and Async Cleanup (Rev.)
Proposal to Simplify pair (rev 5.2)
Extensions to the C++ Library to Support Mathematical Special Functions
Record of Response
Core issue 789: Fixing Raw Strings wrt. Trigraphs (revision 1)
Core issue 968: Disambiguating [[ (revision 1)
Core issue 374: Explicit specialization outside a template's parent (revision 1)
Removing Export
Iterators in C++0x
Core issue 951: Various Attribute Issues (revision 1)
Equality Comparison for Unordered Containers (Rev 2)
Various threads issues in the library (LWG 1151)
Handling Detached Threads and thread_local Variables
Renaming launch::any and what asyncs really might be (Rev.)
Harmonizing Effects and Returns Elements in Clause 21
Specifying Pointer-Like Requirements (Revision 1)
Updates to C++ Memory Model Based on Formalization
C++0X, CD 14882, National Body Comments and Responses
SUMMER 2010 JTC1/SC22/WG21 C++ STANDARDS COMMITTEE MEETING (REVISION 1.1)
Alternative approach to Raw String issues
Constexpr functions with reference parameters
Redrafting: issues 667, 861, 990, 818
Minutes of PL22.16 Meeting, March 08, 2010
Minutes of WG21 Meeting, March 08, 2010
C++0x Meeting Schedule
C++ Standard Core Language Active Issues, Revision 69
C++ Standard Core Language Defect Reports, Revision 69
C++ Standard Core Language Closed Issues, Revision 69
C++ CD1 Comment Status Rev. 7
C++ Standard Library Active Issues List (Revision R70)
C++ Standard Library Defect Report List (Revision R70)
C++ Standard Library Closed Issues List (Revision R70)
Working Draft, Standard for Programming Language C++
Editor's Report
Programming Languages - C++
C and C++ Alignment Compatibility
Minutes of PL22.16 Meeting, March 08, 2010 (Revision 2 )
Minutes of WG21 Meeting, March 08, 2010 (Revision 2)
AGENDA, PL22.16 Meeting No. 54, WG21 Meeting No. 49, August 2-7, 2010, Rapperswil, Switzerland
Minutes, WG21 Teleconference 2010-06-18
Spring 2011 JTC1/SC22/WG21 C++ Standards Committee Meeting
ISO/IEC FCD 14882, C++0X, National Body Comments
Security impact of noexcept
Agenda and Meeting Notice for Upcoming WG21 Telecon Meetings
Business Plan and Convener's Report, ISO/IEC JTC1/SC22/WG21 (C++)
Proposed Resolution for US 122: Revision of N2772 and Issue 915 to adopt it into the Standard
Proposed Resolution for US 114: Small-string optimization not possible with current swap() specification
US 108
Problems with bitmask types in the library
C++ Standard Core Language Active Issues, Revision 70
Proposed Resolution for CH 15: Double check copy and move semantics of classes due to new rules for default move constructors and assignment operators
Async Launch Policies (CH 36)
throw() becomes noexcept
C++ Standard Core Language Active Issues, Revision 72
C++ Standard Core Language Defect Reports, Revision 72
C++ Standard Core Language Closed Issues, Revision 72
C++ FCD Comment Status
Minutes of WG21 Meeting, August 2, 2010
Minutes of PL22.16 Meeting, August 2, 2010
Minutes, WG21 Teleconference 2010-07-23
Observers for the three handler functions
Bringing result_of near to INVOKE
C and C++ Alignment Compatibility
Omnibus Memory Model and Atomics Paper
Working Draft, Standard for Programming Language C++
Editor's Report
C++ Timeout Specification
Managing C++ Associated Asynchronous State
Lockable requirements for C++0x
Compile-time rational arithmetic and overflow
Mathematizing C++ Concurrency: The Post-Rapperswil Model
C++ Standard Library Active Issues List (Revision R71)
C++ Standard Library Defect Report List (Revision R71)
C++ Standard Library Closed Issues List (Revision R71)
Coherence Requirements Detailed
C and C++ Liaison: Compatibility for Atomics
AGENDA: PL22.16 Meeting No. 55, WG21 Meeting No. 50, Novermber 8-13, 2010, Batavia, IL
An Incomplete Language Feature
Cleanup of pair and tuple
ISO/IEC FCD 14882, C++0X, National Body Comments
Adjustments to constructor and assignment traits
Proposed wording for US 90
Wording for US 84
Deprecating unary_function and binary_function
Recommendations for extended identifier characters for C and C++
throw() becomes noexcept (Version 2)
From Throws: Nothing to noexcept
Removing non-empty dynamic exception specifications from the library
Keywords for override control
Progress guarantees for C++0x (US 3 and US 186)
Implicit Move Must Go
US 19: Ambiguous use of "use"
More on noexcept for the language support library
More on noexcept for the diagnostics library
More on noexcept for the General Utilities Library
Missing preconditions for default-constructed match_result objects
C++ Standard Core Language Active Issues, Revision 73
C++ Standard Core Language Defect Reports, Revision 73
C++ Standard Core Language Closed Issues, Revision 73
C++ FCD Comment Status, Rev. 1
Override Control Using Contextual Keywords
Adjusting C++ Atomics for C Compatibility
Allocator Requirements: Alternatives to US88
Destructors default to noexcept
Delete operators default to noexcept
Problems with Iostreams Member Functions (Amended from US 137)
A Few Small Library Issues
Clarifying C++ Futures
Proposed resolution for US104: Allocator-aware regular expressions
Allocators for stringstream (US140)
Terminology for constructing container elements (US115)
To move or not to move
C++ Standard Library Active Issues List (Revision R72)
C++ Standard Library Defect Report List (Revision R72)
C++ Standard Library Closed Issues List (Revision R72)
emplace Broken for Associative Containers
Move and swap for I/O streams (US138)
More on noexcept for the Strings Library
C++ Standard Library Active Issues List (Revision R73)
C++ Standard Library Defect Report List (Revision R73)
C++ Standard Library Closed Issues List (Revision R73)
Appendix C: ISO C++ 2003 Compatibility, Revision 1
More on noexcept for the Containers Library
Revision to N3113: Async Launch Policies (CH 36)
Observers for the three handler functions
C and C++ Alignment Compatibility
C++ Timeout Specification
Managing C++ Associated Asynchronous State
Adjusting C++ Atomics for C Compatibility
Clarifying C++ Futures
From Throws: Nothing to noexcept (version 2)
Omnibus Memory Model and Atomics Paper
Lockable requirements for C++0x
Deprecating unary_function and binary_function (Revision 1)
More on noexcept for the General Utilities Library (version 2)
Moving right along
To which extent can noexcept be deduced?
Tightening the conditions for generating implicit moves
Deducing "noexcept" for destructors
Delete operators default to noexcept
Override control: Eliminating Attributes
noexcept(auto)
Library Working group Issues resolved in Batavia
Progress guarantees for C++0x (US 3 and US 186)(revised)
New wording for arithmetic on ratios
Minutes, WG21 Teleconference 2010-10-29
Minutes of WG21 Meeting, November 8, 2010
Minutes of PL22.16 Meeting, November 8, 2010
US 19: Ambiguous use of "use" (version 2)
Fixing LWG 1322, Explicit CopyConstructible requirements are insufficient
Removing Implicit Move Constructors and Move Assignment Operators
Wording for brace-initializers as default arguments
Core Issue 1125: Unclear definition of "potential constant expression" (DE 8, GB 26)
AGENDA, PL22.16 Meeting No. 56, WG21 Meeting No. 51, March 21-26, 2011, Madrid, Spain
C++ Standard Core Language Active Issues, Revision 74
C++ Standard Core Language Defect Reports, Revision 74
C++ Standard Core Language Closed Issues, Revision 74
C++ FCD Comment Status, Rev. 4
Working Draft, Standard for Programming Language C++
Editor's Report
Please reconsider noexcept
Constexpr Library Additions: complex
Constexpr Library Additions: chrono
Constexpr Library Additions: future
Constexpr Library Additions: support/utilities
Spring 2011 JTC1/SC22/WG21 C++ Standards Committee Meeting
US22/DE9 Revisited: Decltype and Call Expressions
Remove explicit from class-head
Generalized pointer casts
C++ Standard Core Language Active Issues, Revision 75
C++ Standard Core Language Defect Reports, Revision 75
C++ Standard Core Language Closed Issues, Revision 75
Filesystem Library Update for TR2 (Preliminary)
Agenda and Meeting Notice for Upcoming WG21 Telecon Meetings
CH-18 and US-85: Clarifying the state of moved-from objects
Working Draft, Standard for Programming Language C++
Editor's Report
WG21 C++ Standards Committee Meeting Summer 2011
C++ Standard Library Active Issues List (Revision R74)
C++ Standard Library Defect Report List (Revision R74)
C++ Standard Library Closed Issues List (Revision R74)
noexcept Prevents Library Validation
C++ FCD Comment Status Rev. 5
US-18: Removing User-Defined Literals
noexcept for the Atomics Library
A review of noexcept in the threads library
A Proposal to Tweak Certain C++ Contextual Conversions
Proposed resolution for US104: Allocator-aware regular expressions (rev 2)
C++ Decay Copy
C++ Freestanding and Conditionally Supported
Range-based for statements and ADL
US-65: Removing Inheriting Constructors
Core Issue 355: Global-scope :: in elaborated-type-specifier
Consolidated corrections for a cluster of constexpr concerns
Agenda and Meeting Notice for Upcoming WG21 Telecon Meetings
Additional Core Language Issue Resolutions for Madrid
More on noexcept for the Containers Library (revision)
CH-18 and US-85: Clarifying the state of moved-from objects (Revision 1)
AGENDA, PL22.16 Meeting No. 57, WG21 Meeting No. 52, August 15-19, 2011, Bloomington, IN
Revision 2 of: Proposed Resolution for CH 15: Double check copy and move semantics of classes due to new rules for default move constructors and assignment operators
A review of noexcept in the threads library (revised)
static_assert and list-initialization in constexpr functions
shared_future(future<R>&& rhs) should be allowed to throw
Variadic Templates: Wording for Core Issues 778, 1182, and 1183
Wording for Range-Based For Loop (Option #5)
Follow-up on override control
Minutes, WG21 Teleconference 2011-03-04
Minutes of WG21 Meeting, March 21, 2011
Minutes of PL22.16 Meeting, March 21, 2011
US22/DE9 Revisited: Decltype and Call Expressions
Core issues 1194/1195/1199: References and constexpr
Recent Concurrency Issue Resolutions
Conservative use of noexcept in the Library
C++ Freestanding and Conditionally Supported
692. Partial ordering of variadic class template partial specializations
Resolution for core issues 1207 and 1017
Dependent Bases and the Current Instantiation: Wording for Core Issue 1043
C++ Standard Library Active Issues List (Madrid Resolutions)
C++ Standard Library Active Issues List (Revision R75)
C++ Standard Library Closed Issues List (Revision R75)
C++ Standard Library Closed Issues List (Revision R75)
Appendix C: ISO C++ 2003 Compatibility, Revision 7
ISO/IEC FCD 14882, C++0X Responses to National Body Comments
Programming Languages -- C++
Working Draft, Standard for Programming Language C++
Editor's report
C++ Standard Core Language Active Issues, Revision 76
C++ Standard Core Language Defect Reports, Revision 76
C++ Standard Core Language Closed Issues, Revision 76
C++ FCD Comment Status Rev. 6
ISO/IEC FCD 14882, C++0X, Responses to National Body Comments, Rev. 1
Convener's report
February 2012 Meeting
Minutes, WG21 Teleconference 2011-08-05
Defect Report: Terminology for Container Element Requirements
Constexpr Library Additions: complex, v2
Constexpr Library Additions: chrono, v2
Constexpr Library Additions: containers
Constexpr Library Additions: utilities, v2
A Proposal to Tweak Certain C++ Contextual Conversions, v2
Issues Found Implementing C++0x
constexpr consternation
C++ Standard Core Language Active Issues, Revision 77
C++ Standard Core Language Defect Reports, Revision 77
C++ Standard Core Language Closed Issues, Revision 77
C++ Standard Library Active Issues List (Revision R76)
C++ Standard Library Defect Report List (Revision R76)
C++ Standard Library Closed Issues List (Revision R76)
Minutes, PL22.16 Meeting No. 57, WG21 Meeting No. 52, 15-19 August 2011 Bloomington, Indiana, USA
Minutes, PL22.16 Meeting No. 57, WG21 Meeting No. 52, 15-19 August 2011 Bloomington, Indiana, USA
AGENDA, PL22.16 Meeting No. 58, WG21 Meeting No. 53, February 6-10, 2012, Kona Hawaii
C++ Standard Library Active Issues List (Revision R77)
C++ Standard Library Defect Report List (Revision R77)
C++ Standard Library Closed Issues List (Revision R77)
Agenda and Meeting Notice for Upcoming WG21 Telecon Meetings
A Preliminary Proposal for a Static if
A Proposal to Tweak Certain C++ Contextual Conversions, v3
Terminology: "indirection" versus "dereference"
HTML for C++ Standards Documents
Sequential access to data members and base sub-objects
A Standard Programmatic Interface for Asynchronous Operations
Resumable Functions
Proposal: static if declaration
C++ Standard Core Language Active Issues, Revision 78
C++ Standard Core Language Defect Reports, Revision 78
C++ Standard Core Language Closed Issues, Revision 78
Hashing User-Defined Types in C++1y
Proposing array_ref<T> and string_ref
Filesystem Library for C++11/TR2 (Revision 1)
Adapting Standard Library Strings and I/O to a Unicode World
Working Draft, Standard for Programming Language C++
Editor's Report
A Preliminary Proposal for a Deep-Copying Smart Pointer
Rich Pointers
Transactional Language Constructs for C++
Digit Separators coming back
Portland meeting information
Toward a Standard C++ 'Date' Class
C++ Language Constructs for Parallel Programming
Defect Report: Terminology for Container Element Requirements - Rev 1
Modules in C++ (Revision 6)
Scoping of operator new
Ease of using namespaces
A minimal std::range<Iter>
A Concept Design for the STL
C++ Binary Fixed-Point Arithmetic
C++ Concurrent Queues
C++ Stream Mutexes
C++ Distributed Counters
C++ Mutable Threads
C++ Standard Library Active Issues List (Revision R78)
C++ Standard Library Defect Report List (Revision R78)
C++ Standard Library Closed Issues List (Revision R78)
Networking Library Status Report
C++ Language Constructs for Parallel Programming
Terminology: "indirection" versus "dereference" (revision 2)
A Rational Number Library for C++
Filesystem Library Proposal (Revision 2)
Runtime-sized arrays with automatic storage duration
C++ Standard Core Language Active Issues, Revision 79
C++ Standard Core Language Defect Reports, Revision 79
C++ Standard Core Language Closed Issues, Revision 79
Call for Library Proposals
Status List for Library Proposals
AGENDA, PL22.16 Meeting No. 59, WG21 Meeting No. 54, October 15-19, 2012 - Portland, Oregon
SG4: Networking
Proposal for Unbounded-Precision Integer Types
Working Draft, Standard for Programming Language C++
C++ Editor's Report, February 2012
A preliminary proposal for work executors
Minutes, WG21 Teleconference 2012-01-27
Minutes, WG21 Meeting No. 53, 6-10 February 2012 Kona, Hawaii, USA
Minutes, PL22.16 Meeting No. 58, 6-10 February 2012 Kona, Hawaii, USA
C++ Standard Core Language Active Issues, Revision 80
C++ Standard Core Language Defect Reports, Revision 80
C++ Standard Core Language Closed Issues, Revision 80
Return type deduction for normal functions
Overload resolution tiebreakers for integer types
Using Asio with C++11
Urdl: a simple library for accessing web content
Any Library Proposal (Revision 1)
ISO C++ SG1 Meeting Minutes for May 2012
Minutes, WG21/SG4 Meeting 8 May 2012 Redmond, Washington, USA
Business Plan and Convener's Report
[[deprecated]] attribute
C++ Stream Mutexes
Dynamic memory allocation for over-aligned data
Spring 2013 JTC1/SC22/WG21 C++ Standards Committee Meeting
String Interoperation Library
Filesystem Library Proposal (Revision 3)
A proposal for eliminating the underscore madness that library writers have to suffer
Generating move operations (elaborating on Core 1402)
User-defined Literals for Standard Library Types
Use Cases for Compile-Time Reflection
Tuple Tidbits
Template Tidbits
A proposal to add a utility class to represent optional objects (Revision 2)
Proposal to Add Decimal Floating Point Support to C++
Parallelizing The Standard Algorithms Library
Strict Fork-Join Parallelism
Rich Pointers with Dynamic and Static Introspection
Additional Searching Algorithms
Runtime-sized arrays with automatic storage duration (revision 2)
Allowing arbitrary literal types for non-type template parameters
A Rational Number Library for C++
A Database Access Library
Packaging Parameter Packs
Proposal for Unbounded-Precision Integer Types
Proposal for Generic (Polymorphic) Lambda Expressions
Vector loops and Parallel Loops
A URI Library for C++
Making Operator Functors greater<>
SG5: Software Transactional Memory (TM) Status Report
SG5: Software Transactional Memory (TM) Meeting Minutes
Lambda Correctness and Usability Issues
Concurrent Unordered Associative Containers for C++
Experience with Pre-Parsed Headers
Shared locking in C++
A Standard Programmatic Interface for Asynchronous Operations
A C++ Library Solution To Parallelism
Proposing std::split()
Quoted Strings Library Proposal
C++ Sized Deallocation
Clarifying Memory Allocation
C++ Concurrent Queues
Standardized feature-test macros
std::result_of and SFINAE
Type Name Strings For C++
C++ Standard Library Active Issues List (Revision R79)
C++ Standard Library Defect Report List (Revision R79)
C++ Standard Library Closed Issues List (Revision R79)
Call Stack Utilities and std::exception Extension Proposal
string_ref: a non-owning reference to a string
Priority Queue Changes and Additions
Relaxing syntactic constraints on constexpr function definitions
Pass by Const Reference or Value
C++ Mapreduce
Painless Digit Separation
Open and Efficient Type Switch for C++
Iterator-Related Improvements to Containers
async and ~future
Minutes, WG21 Teleconference 2012-10-5
Minutes, WG21 Meeting No. 54, 15-19 October 2012 Portland, Oregon, USA
Minutes, PL22.16 Meeting No. 59, 15-19 October 2012 Portland, Oregon, USA
Range arguments for container constructors and methods, with wording
Algorithm std::iota and its modifications.
Simple Database Integration in C++11
Comparison of Two Database Access Methodologies
std::result_of and SFINAE
Portable Program Source Files
Adding heterogeneous comparison lookup to associative containers for TR2 (Rev 2)
More Perfect Forwarding
Runtime-sized arrays with automatic storage duration (revision 3)
User-defined Literals for Standard Library Types (version 2)
Constexpr Library Additions: chrono, v3
Constexpr Library Additions: containers, v2
Constexpr Library Additions: utilities, v3
Binary Literals in the C++ Core Language
C++ Standard Library Active Issues List (Revision R80)
C++ Standard Library Defect Report List (Revision R80)
C++ Standard Library Closed Issues List (Revision R80)
C++ Internet Protocol Classes
Core Issue 1512: Pointer comparison vs qualification conversions
Priority Queue, Queue and Stack: Changes and Additions
C++ Standard Core Language Active Issues, Revision 81
C++ Standard Core Language Defect Reports and Accepted Issues, Revision 81
C++ Standard Core Language Closed Issues, Revision 81
A URI Library for C++
Working Draft, Standard for Programming Language C++
C++ Editor's Report, October 2012
TLS and Parallelism
Evolution Working Group paper status
A Rational Number Library for C++
ADL Control for C++
Minutes: SG4 Networking, October 2012
Use Cases for Compile-Time Reflection (Rev. 2)
Compile-time integer sequences
A proposal to add special mathematical functions according to the ISO/IEC 80000-2:2009 standard
inplace realloc
AGENDA, PL22.16 Meeting No. 60, WG21 Meeting No. 55, April 15-20, 2013 -- Bristol, UK
Runtime-sized arrays with automatic storage duration (revision 4)
Core Issue 1512: Pointer comparison vs qualification conversions (revision 2)
Digit Separators
New assert variants
C++ Standard Core Language Active Issues, Revision 82
C++ Standard Core Language Defect Reports and Accepted Issues, Revision 82
C++ Standard Core Language Closed Issues, Revision 82
Filesystem Library Proposal (Revision 4)
A printf-like Interface for the Streams Library
A URI Library for C++
Any Library Proposal (Revision 2)
Operator Bool for Ranges
std::split(): An algorithm for splitting strings
exchange() utility function
string_ref: a non-owning reference to a string, revision 2
Range arguments for container constructors and methods, wording revision 2
A Proposal for the World's Dumbest Smart Pointer
Toward Opaque Typedefs for C++1Y
C++ Standard Library Active Issues List (Revision R81)
C++ Standard Library Defect Report List (Revision R81)
C++ Standard Library Closed Issues List (Revision R81)
Feb 5, 2013 SG1 Teleconference Announcement and Agenda
Critical sections in vector loops
convert() utility function
C++ Standard Library Active Issues List (Revision R82)
C++ Standard Library Defect Report List (Revision R82)
C++ Standard Library Closed Issues List (Revision R82)
Polymorphic Allocators
Uniform initialization for arrays and class aggregate types
A proposal to add a utility class to represent optional objects (Revision 2)
Minutes of Feb 5 2013 SG1 Phone Call
SG5: Transactional Memory (TM) Meeting Minutes 2012/10/30-2013/02/04
Leveraging OpenMP infrastructure for language level parallelisation
User-defined Literals for Standard Library Types (version 3)
C++ Dynamic Arrays
C++ Concurrent Queues
C++ Pipelines
C++ Stream Mutexes
C++ Sized Deallocation
Clarifying Memory Allocation
Pass by Const Reference or Value
C++ Standard Core Language Active Issues, Revision 83
C++ Standard Core Language Defect Reports and Accepted Issues, Revision 83
C++ Standard Core Language Closed Issues, Revision 83
Proposal for Unbounded-Precision Integer Types
Priority Queue, Queue and Stack: Changes and Additions
SG5: Transactional Memory (TM) Meeting Minutes 2013/02/25-2013/03/04
An Incremental Improvement to integral_constant
TransformationTraits Redux
Three <random>-related Proposals
Conditionally-supported Special Math Functions for C++14
s/bound/extent/
Proposed C++14 Value Classification
Random Number Generation in C++11
Introducing Object Aliases
Proposing a C++1Y Swap Operator
A Parallel Algorithms Library
Thread-Local Storage in X-Parallel Computations
Considering a Fork-Join Parallelism Library
A Standardized Representation of Asynchronous Operations
Proposal for Generic (Polymorphic) Lambda Expressions
Proposal for Assorted Extensions to Lambda Expressions
Semantics of Vector Loops
Executors and schedulers, revision 1
C++ Mapreduce
Resumable Functions
IP Address Design Constraints
Evolution Open Issues
Evolution Closed Issues
Shared locking in C++
SPRING 2014 JTC1/SC22/WG21 C++ STANDARDS COMMITTEE MEETING: Preliminary Information
Quoted Strings Library Proposal (Revision 1)
A Proposal to add Single Instruction Multiple Data Computation to the Standard Library
Unicode Support in the Standard Library
Heterogenous extensions to unordered containers
Binding stateful functions as function pointers
Additional Standard allocation schemes
SG8 Concepts Teleconference Minutes - 2013-03-12
Fall 2013 JTC1/SC22/WG21 C++ Standards Committee Meeting
Proposing the Rule of Five
A type trait for signatures
Concepts Lite: Constraining Templates with Predicates
Delimited iterators
Return type deduction for normal functions
Exploring constexpr at Runtime
Wording for Accessing Tuple Fields by Type
Iterator-Related Improvements to Containers (Revision 2)
Splicing Maps and Sets
For Loop Exit Strategies
make_unique
Summary of Progress Since Portland towards Transactional Language Constructs for C++
Summary of Discussions on Explicit Cancellation in Transactional Language Constructs for C++
Alternative cancellation and data escape mechanisms for transactions
std::split(): An algorithm for splitting strings
std::join(): An algorithm for joining a range of elements
Simplifying Argument-Dependent Lookup Rules
Code Reuse in Class Template Specialization
Relaxing constraints on constexpr functions
constexpr member functions and implicit const
Literal operator templates for strings
C++ Latches and Barriers
Implicit template parameters
Template parameter deduction for constructors
A Three-Class IP Address Proposal
Centralized Defensive-Programming Support for Narrow Contracts
Member initializers and aggregates
Extending std::search to use Additional Searching Algorithms
Making non-modifying sequence operations more robust
exchange() utility function, revision 2
string_view: a non-owning reference to a string, revision 3
Generic lambda-capture initializers, supporting capture-by-move
A Rational Number Library for C++
Desiderata of a C++11 Database Interface
"Static If" Considered
unwinding_exception
Constexpr Variable Templates
Lifting overload sets into function objects
What can signal handlers do? (CWG 1441)
A proposal to add swappability traits to the standard library
Network byte order conversion
Minutes, WG21 Teleconference 2013-03-29
Minutes: WG21 Meeting No. 55, 15-20 April 2013 - Bristol, UK
Minutes: PL22.16 Meeting No. 60, 15-20 April 2013 - Bristol, UK
Core Issue 1512: Pointer comparison vs qualification conversions (revision 3)
A URI Library for C++
Floating-Point Typedefs Having Specified Widths
Relaxed switch statement
C and C++ Compatibility
Simplifying C++0x Concepts
async, ~future, and ~thread (Revision 1)
C11: The New C Standard
Additional std::async Launch Policies
What can signal handlers do? (CWG 1441)
Improvements to std::future<T> and Related APIs
Towards restrict-like semantics for C++
~thread should join
async and ~future (Revision 3)
Return type deduction for normal functions
Runtime-sized arrays with automatic storage duration (revision 5)
Extending shared_ptr to Support Arrays
Extending make_shared to Support Arrays
User-defined Literals for Standard Library Types (part 1 - version 4)
Range Adaptor for Selecting from Pair or Tuple
Null Forward Iterators
Splicing Maps and Sets (Revision 1)
Network byte order conversion
Minutes: PL22.16 Meeting No. 59, 15-19 October 2012 Portland, Oregon, USA
Wording Changes for Generalized Lambda-capture
Generic (Polymorphic) Lambda Expressions (Revision 3)
Resumable Functions
Variable Templates (Revision 1)
Relaxing constraints on constexpr functions / constexpr member functions and implicit const
Member initializers and aggregates
Quoted Strings Library Proposal (Revision 2)
TransformationTraits Redux, v2
make_unique (Revision 1)
Adding heterogeneous comparison lookup to associative containers (rev 4)
Compile-time integer sequences
Shared locking in C++
User-defined Literals for std::complex, part 2 of UDL for Standard Library Types (version 4)
Digit Separators
C++ Dynamic Arrays
C++ Sized Deallocation
Clarifying Memory Allocation
Uninterleaved String Output Streaming
C++ Latches and Barriers
Drafting for Core 1402
exchange() utility function, revision 3
Fixing constexpr member functions without const
Wording for Addressing Tuples by Type: Revision 2
Making non-modifying sequence operations more robust: Revision 2
A proposal to add a utility class to represent optional objects (Revision 4)
C++ Library Working Group Ready Issues Bristol 2013
C++ Standard Core Language Active Issues, Revision 84
C++ Standard Core Language Defect Reports and Accepted Issues, Revision 84
C++ Standard Core Language Closed Issues, Revision 84
A Proposal to Add additional RAII Wrappers to the Standard Library
C++ Stream Guards
Async() future destructors must wait
Improving pair and tuple
Auto and braced-init lists
C++ Standard Evolution Active Issues List (Revision R02)
C++ Standard Evolution Completed Issues List (Revision R02)
C++ Standard Evolution Closed Issues List (Revision R02)
string_view: a non-owning reference to a string, revision 4
Traversable arguments for container constructors and methods, wording revision 3
C++ Standard Library Active Issues List (Revision R83)
C++ Standard Library Defect Report List (Revision R83)
C++ Standard Library Closed Issues List (Revision R83)
Programming Languages - C++
Working Draft, Standard for Programming Language C++
C++ Editor's Report, October 2012
Working Draft, Technical Specification -- File System
Feature-testing recommendations for C++
SG5: Transactional Memory (TM) Meeting Minutes 2013/03/11-2013/06/10
Proposal to extend atomic with priority update functions
Business Plan and Convener's Report
July 25-26 Santa Clara SG1 Meeting Announcement and Agenda
A proposal to add a generalized callable negator
Hierarchical Data Structures and Related Concepts for the C++ Standard Library
Concepts Lite
Introducing an optional parameter for mem_fn, which allows to bind an object to its member function
Extending std::search to use Additional Searching Algorithms (Version 3)
AGENDA, PL22.16 Meeting No. 61, WG21 Meeting No. 56, September 23-28, 2013 - Chicago, IL, USA
Agenda and Meeting Notice for WG21 Telecon Meeting
C++ Distributed Counters
2014-02 Meeting Invitation and Information
A proposal to add coroutines to the C++ standard library
Minutes for July 2013 Santa Clara SG1 Meeting
Specifying the absence of "out of thin air" results (LWG2265)
Task Groups As a Lower Level C++ Library Solution To Fork-Join Parallelism
Policy-Based Design for Safe Destruction in Concurrent Containers
C++ Standard Core Language Active Issues, Revision 85
C++ Standard Core Language Defect Reports and Accepted Issues, Revision 85
C++ Standard Core Language Closed Issues, Revision 85
A printf-like Interface for the Streams Library
SG5: Transactional Memory (TM) Meeting Minutes 2013/06/24-2013/08/26
Transactional Memory Support for C++
Extend INVOKE to support types convertible to target class
Working Draft Technical Specification - URI
Improvements to std::future<T> and Related APIs
Resumable Functions
Extend operator-> to support rvalues
A Parallel Algorithms Library
Original Draft Specification of Transactional Language Constructs for C++ Version 1.1 (February 3, 2012)
Polymorphic Memory Resources
A proposal to add invoke function template
Packaging Parameter Packs (Rev. 2)
Invocation type traits
Specializations and namespaces
Executors and schedulers, revision 2
Value-Oriented Concurrent Unordered Containers
ISO/IEC CD 14882, C++ 2014, National Body Comments
Vector Programming: A proposal for WG21
On the difference between parallel loops and vector loops
C++ Standard Evolution Active Issues List (Revision R03)
C++ Standard Evolution Completed Issues List (Revision R03)
C++ Standard Evolution Closed Issues List (Revision R03)
Improving pair and tuple, revision 1
A Proposal for the World's Dumbest Smart Pointer, v2
Toward Opaque Typedefs for C++1Y, v2
Three <random>-related Proposals, v2
Conditionally-supported Special Math Functions for C++14, v2
Proposing [[pure]]
Feature-testing recommendations for C++
Proposing a C++1Y Swap Operator, v2
A Universal Model for Asynchronous Operations
Implicit Evaluation of "auto" Variables and Arguments
Constexpr Library Additions: functional
C++ Ostream Buffers
Object Lifetime, Low-level Programming, and memcpy
Index Based Ranges
Centralized Defensive-Programming Support for Narrow Contracts (Revision 1)
C++ Standard Library Active Issues List (Revision R84)
C++ Standard Library Defect Report List (Revision R84)
C++ Standard Library Closed Issues List (Revision R84)
Support for user-defined exception information and diagnostic information in std::exception
Standard exception information types for std::exception
SIMD Vector Types
[[deprecated]] attribute
Proposing type_at<>
string_view: a non-owning reference to a string, revision 5
Traversable arguments for container constructors and methods, wording revision 4
Ruminations on relational operators
On Optional
The identity type transformation
Teleconference Minutes (September 2013)
Minutes (September 2013)
Minutes: PL22.16 Meeting No. 61, 2013-09 Chicago Minutes
C++ CD Comment Status, Rev. 1
Canadian C++14 Comments
Changing the type of address-of-member expression
async and ~future (Revision 4)
C++ Needs Language Support For Vectorization
Deprecating rand() and Friends
Wording for ~future
Wording for deprecating async
C++ Sized Deallocation
User-defined Literals for std::complex
Why Deprecating async() is the Worst of all Options
Single-Quotation-Mark as a Digit Separator
Index Based Ranges (Rev. 1)
Network Byte Order Conversion
Improvements to std::future<T> and Related APIs
Executors and schedulers, revision 3
Prohibiting "out of thin air" results in C++14
What can signal handlers do? (CWG 1441)
Immediate issues
Constexpr Library Additions: functional
Working Draft, Technical Specification -- File System
Lightweight Drawing Library - Objectives, Requirements, Strategies
Working Draft Technical Specification - URI
A proposal to add a utility class to represent optional objects (Revision 5)
Proposal to Add Multi-Dimensional Support to std::array
A more common version of algorithm std::partition_copy
std::rand replacement
Working Draft, Standard for Programming Language C++
C++ Editor's Report, October 2013
AGENDA: PL22.16 Meeting No. 62, WG21 Meeting No. 57, February 10-15, 2014 - Issaquah, WA, USA
A proposal to add a generalized callable negator (Revision 1)
Removing Undefined Behavior from the Preprocessor
apply() call a function with arguments from a tuple
Programming Languages -- C++ Standard Library -- File System Technical Specification
Any Library Proposal (Revision 3)
SPRING 2014 JTC1/SC22/WG21 C++ STANDARDS COMMITTEE MEETING: Preliminary Information
C++ Standard Core Language Active Issues, Revision 86
C++ Standard Core Language Defect Reports and Accepted Issues, Revision 86
C++ Standard Core Language Closed Issues, Revision 86
Alternatives for Array Extensions
C++ Standard Evolution Active Issues List (Revision R04)
C++ Standard Evolution Completed Issues List (Revision R04)
C++ Standard Evolution Closed Issues List (Revision R04)
Call for Compile-Time Reflection Proposals
Enumerator List Property Queries
Polymorphic Memory Resources - r1
C++ Latches and Barriers
Centralized Defensive-Programming Support for Narrow Contracts (Revision 2)
Concepts Lite Specification
Working Draft, Technical Specification -- Array Extensions
C++ Standard Library Active Issues List (Revision R85)
C++ Standard Library Defect Report List (Revision R85)
C++ Standard Library Closed Issues List (Revision R85)
make_array
SG13 Graphics Discussion
Agenda and Meeting Notice for WG21 Telecon Meeting
Working Draft Technical Specification - URI
FALL 2014 JTC1/SC22/WG21 C++ Standards Committee Meeting
apply() call a function with arguments from a tuple (V2)
Scoped Resource - Generic RAII Wrapper for the Standard Library
Language Extensions for Vector level parallelism
Task Region
C++ Standard Core Language Active Issues, Revision 87
C++ Standard Core Language Defect Reports and Accepted Issues, Revision 87
C++ Standard Core Language Closed Issues, Revision 87
C++ Standard Evolution Active Issues List (Revision R05)
C++ Standard Evolution Completed Issues List (Revision R05)
C++ Standard Evolution Closed Issues List (Revision R05)
Proposing the Rule of Five, v2
A Proposal for the World's Dumbest Smart Pointer, v3
Discouraging rand() in C++14
A sample Proposal
A SFINAE-Friendly std::common_type
A SFINAE-Friendly std::iterator_traits
Greatest Common Divisor and Least Common Multiple
Extending static_assert
Random Number Generation is Not Simple!
Working Draft, Technical Specification on C++ Extensions for Library Fundamentals
string_view: a non-owning reference to a string, revision 6
Working Draft, Technical Specification for C++ Extensions for Parallelism
Multidimensional bounds, index and array_view
C++ CD Status, Rev. 1
Range-Based For-Loops: The Next Generation
Variable Templates For Type Traits
Unforgetting standard functions min/max as constexpr
Improvements to std::future<T> and Related APIs
Resumable Functions
Transactional Memory Support for C++
Transactional Memory (TM) Meeting Minutes 2013/09/09-2014/01/20
Towards a Transaction-safe C++ Standard Library: std::list
Private Extension Methods
A constexpr bitwise operations library for C++
More Improvements to std::future<T>
Invocation type traits (Rev. 2)
Specializations and namespaces (Rev. 2)
Extending shared_ptr to Support Arrays, Revision 1
Extending make_shared to Support Arrays, Revision 1
Proposal to Add Decimal Floating Point Support to C++ (revision 2)
A Primer on Scheduling Fork-Join Parallelism with Work Stealing
Improved insertion interface for unique-key maps
Light-Weight Execution Agents
Run-time bound array data members
Convenience Functions to Combine Hash Values
Centralized Defensive-Programming Support for Narrow Contracts (Revision 3)
Extensions to the Concept Introduction Syntax in Concepts Lite
Explicit Flow Control: break label, goto case and explicit switch
Improving the Verification of C++ Programs
Fixing the specification of universal-character-names
An update to the preprocessor specification
Code checkers & generators
Contiguous Iterators: A Refinement of Random Access Iterators
A Proposal to add a Database Access Layer to the Standard Library
Consistent Metafunction Aliases
A Proposal to Add 2D Graphics Rendering and Display to C++
Concepts Lite Specification
Container<Incomplete Type>
A proposal to rename shared_mutex to shared_timed_mutex
C++ Ostream Buffers
C++ Standard Library Active Issues List (Revision R86)
C++ Standard Library Defect Report List (Revision R86)
C++ Standard Library Closed Issues List (Revision R86)
LIBRARY FOUNDATIONS FOR ASYNCHRONOUS OPERATIONS
Auto-type members
HASHING AND FINGERPRINTING
Nested Allocation
WG21 2014-01-31 Telecon Minutes
Minutes (February 2014) WG21 Meeting No. 57
Minutes (February 2014) PL22.16 Meeting No. 62
C++ CD Comment Status Rev. 6
Extending std::search to use Additional Searching Algorithms (Version 4)
ISO/IEC PDTS 18822, File System, National Body Comments
Working Draft, Information technology – Programming languages, their environments and system software interfaces – C++ Extensions for Library Fundamentals
A SFINAE-Friendly std::iterator_traits, v2
What can signal handlers do? (CWG 1441)
TransformationTrait Alias void_t
Auto and braced-init-lists, continued
Greatest Common Divisor and Least Common Multiple, v2
Additional Core Language Issue Resolutions for Issaquah
apply() call a function with arguments from a tuple (V3)
Polymorphic Memory Resources - r2
Core Issue 1299: Temporary objects vs temporary expressions
Transactional Memory Support for C++
Extending shared_ptr to Support Arrays, Revision 2
string_view: a non-owning reference to a string, revision 7
New Rules for auto deduction from braced-init-list
A SFINAE-Friendly std::iterator_traits, v3
Discouraging rand() in C++14, v2
A sample Proposal, v4
LWG Issue 2168 is NAD
Definition of Lock-Free
Extending static_assert, v2
Concepts Lite Specification
Immediate Issues
Immediate Issues
Variable Templates For Type Traits (Revision 1)
Working Draft, Standard for Programming Language C++
Programming Languages — C++
Editor's Report
Extending make_shared to Support Arrays, Revision 2
Working Draft, Technical Specification – File System
Filesystem Study Group (SG3) Active Issues List (Revision R0)
Filesystem Study Group (SG3) Closed Issues List (Revision R0)
Filesystem Study Group (SG3) Defect Report List (Revision R0)
C++ Standard Library Active Issues List (Revision R87)
C++ Standard Library Defect Report List (Revision R87)
C++ Standard Library Closed Issues List (Revision R87)
URI - Proposed Wording (Revision 4)
Feature-testing for C++ Technical Specifications
Scoped Resource - Generic RAII Wrapper for the Standard Library
Defaulted comparison operators
C++ type reflection via variadic template expansion
C++ Standard Core Language Active Issues, Revision 88
C++ Standard Core Language Defect Reports and Accepted Issues, Revision 88
C++ Standard Core Language Closed Issues, Revision 88
Group Member Specifiers
ISO/IEC CD 14882, C++ 2014 Responses to National Body Comments
C++ Standard Evolution Active Issues List (Revision R06)
C++ Standard Evolution Completed Issues List (Revision R06)
C++ Standard Evolution Closed Issues List (Revision R06)
Working Draft, Technical Specification for C++ Extensions for Parallelism
A proposal to add shared_mutex (untimed)
File System TS Editor's Report, February 2014 - Post-Issaquah
Centralized Defensive-Programming Support for Narrow Contracts (Revision 4)
Library Foundations for Asynchronous Operations, Revision 1
Proposal for Unbounded-Precision Integer Types
Fixes for optional objects
C++ Standard Library Active Issues List (Revision R88)
C++ Standard Library Defect Report List (Revision R88)
C++ Standard Library Closed Issues List (Revision R88)
Working Draft, Technical Specification for C++ Extensions for Concurrency
Concurrency TS Editor's Report, May 2014
Source-Code Information Capture
A Proposal to Add a Logical Const Wrapper to the Standard Library Technical Report
Polymorphic Deleter for Unique Pointers
URI - Proposed Wording (Revision 5)
Multidimensional bounds, index and array_view, revision 2
Resumable Functions
C++ Ostream Buffers
AGENDA, PL22.16 Meeting No. 63, WG21 Meeting No. 58, June 16-21, 2014 -- Rapperswil, Switzerland
Types don't know #
Removing trigraphs??!
Rvalue reference overloads for optional
Hashing tuple-like types
Adding attribute reflection to C++.
A proposal to add coroutines to the C++ standard library (Revision 1)
Adding Standard support to avoid padding within structures
Yet another set of C++ type traits.
Towards restrict-like aliasing semantics for C++
Working Draft, Technical Specification for C++ Extensions for Parallelism
Adding Standard Circular Shift operators for computer integers
Task Region R2
Agenda and Meeting Notice for WG21 Telecon Meeting
On Parallel Invocations of Functions in Parallelism TS
Range-Based For-Loops: The Next Generation (Revision 1)
A proposal to add shared_mutex (untimed) (Revision 2)
Static reflection
Centralized Defensive-Programming Support for Narrow Contracts (Revision 5)
C++ Latches and Barriers
Standard Wording for Transactional Memory Support for C++
Towards a Transaction-safe C++ Standard Library: std::list
SG5: Transactional Memory (TM) Meeting Minutes 2014/02/03-2014/05/19
Cleaning-up noexcept in the Library
File System TS Active Issues List (Revision R1)
File System TS Closed Issues List (Revision R1)
File System TS Defect Report List (Revision R1)
An improved emplace() for unique-key maps
Delimited iterators (Rev. 2)
SIMD polymorphism
Uniform Container Erasure
C++ Standard Evolution Active Issues List (Revision R07)
C++ Standard Evolution Completed Issues List (Revision R07)
C++ Standard Evolution Closed Issues List (Revision R07)
Atomic operations on non-atomic data
Uniform Copy Initialization
A proposal to add a utility class to represent expected monad
Light-Weight Execution Agents Revision 2
Non-member size() and more
C++ Standard Core Language Active Issues, Revision 89
C++ Standard Core Language Defect Reports and Accepted Issues, Revision 89
C++ Standard Core Language Closed Issues, Revision 89
A Proposal to Add 2D Graphics Rendering and Display to C++
A proposal to add a generalized callable negator (Revision 2)
Working Draft, C++ Extensions for Library Fundamentals
Distinguishing coroutines and fibers
Exploring classes of runtime size
Nested namespace definition
Type Member Property Queries (rev 2)
Defining a Portable C++ ABI
Let return Be Direct and explicit
Feature-testing recommendations for C++
make_array, revision 1
Comments on continuations and executors
synchronized_value<T> for associating a mutex with a value
Destructive Move
Implicit Evaluation of "auto" Variables and Arguments
Towards Implementation and Use of memory_order_consume
Non-Transactional Implementation of Atomic Tree Move
Proposal for Unbounded-Precision Integer Types
Default executor
Working Draft, C++ Extensions for Concepts
Concerns with changing existing types in Technical Specifications
Safe conversions in unique_ptr<T[]>
Dynarray Allocation Context
A Three-Class IP Address Proposal, Revision 1
Library Foundations for Asynchronous Operations, Revision 2
Executors and Asynchronous Operations
A Module System for C++
More Improvements to std::future<T> - Revision 1
0-overhead-principle violations in exception handling
Dynarray Semi-Editorial Issues
Allow typename in a template template parameter
WG21 2014-06-06 Telecon Minutes
WG21 2014-06 Rapperswil Minutes
PL22.16 2014-06 Rapperswil Minutes
Ruminations on (node-based) containers and noexcept
Minimal incomplete type support for standard containers
A Proposal to Add a Const-Propagating Wrapper to the Standard Library
Atomic Smart Pointers
Spring 2015 C++ Standards Committee Meeting
Changes to vector_execution_policy
Greatest Common Divisor and Least Common Multiple, v3
On Parallel Invocations of Functions in Parallelism TS
Improving pair and tuple, revision 2
make_array, revision 2
Delimited iterators (Rev. 3)
Experimental std::function etc.
Toward More Expressive Iterator Tags
C++ Ostream Buffers
Improving the specification of the vector execution policy in Parallelism TS
Working Draft, Technical Specification for C++ Extensions for Parallelism
Fixed Size Parameter Packs
A Proposal to Add 2D Graphics Rendering and Display to C++
Let return {expr} Be Explicit, Revision 2
Centralized Defensive-Programming Support for Narrow Contracts (Revision 5)
A proposal to add a generalized callable negator (Revision 2)
Experimental shared_ptr for Library Fundamentals TS
Fixes for optional objects
C++ Standard Library Issues Resolved Directly In Rapperswil, 2014
File System TS Immediate Issues for Rapperswil
Working Draft, C++ Extensions for Library Fundamentals
Programming Languages — C++ Extensions for Library Fundamentals
Editor's Report for Version 1 of the Library Fundamentals TS
Working Draft, C++ Extensions for Library Fundamentals, Version 2
Editor's Report for Version 2 of the Library Fundamentals TS
Removing trigraphs??!
Multidimensional bounds, index and array_view, revision 3
Task Region R3
Safe conversions in unique_ptr<T[]>, revision 2
The Maladies of All Member Templates: An Incomplete Biography of Specialization (DR727 + DR1755)
C++ Standard Core Language Active Issues, Revision 90
C++ Standard Core Language Defect Reports and Accepted Issues, Revision 90
C++ Standard Core Language Closed Issues, Revision 90
Response To: Let return {expr} Be Explicit
File System TS Active Issues List (Revision R2)
File System TS Closed Issues List (Revision R2)
File System TS Defect Report List (Revision R2)
File System TS Editor's Report, Post-Rapperswil
Working Draft, Technical Specification — File System
Programming Languages — C++ — File System Technical Specification
C++ Standard Evolution Active Issues List (Revision R08)
C++ Standard Evolution Completed Issues List (Revision R08)
C++ Standard Evolution Closed Issues List (Revision R08)
Working Draft, Technical Specification for C++ Extensions for Parallelism
Information technology – Programming languages, their environments and system software interfaces – Technical Specification for C++ Extensions for Parallelism
Parallelism TS Editor's Report, post-Rapperswil
Working Draft, Technical Specification for C++ Extensions for Concurrency
Concurrency TS Editor's Report, July 2014
A proposal to add a utility class to represent expected monad - Revision 1
Exploring the design space of contract specifications for C++
Static reflection (rev. 2)
File System PDTS National Body Comments Record of Response
Reflection Type Traits For Classes, Unions and Enumerations (rev 3)
Defaulted comparison operators
Searching for Types in Parameter Packs
Nested Namespace Definition (rev 1)
C++ Standard Library Active Issues List (Revision R89)
C++ Standard Library Defect Report List (Revision R89)
C++ Standard Library Closed Issues List (Revision R89)
Null Coalescing Conditional Operator
Compile-Time String: std::string_literal<n>
AGENDA, PL22.16 Meeting No. 64, WG21 Meeting No. 59, November 3-8, 2014 – Urbana-Champaign, IL
Improvements to the Concurrency Technical Specification
Toward More Expressive Iterator Tags
2014-09 WG21/SG1 Meeting Information
Explicitly defaulted comparison operators
Checked-dereference conditions
Ranges for the Standard Library, Revision 1
Source-Code Information Capture
Pad Thy Atomics
explicit should never be implicit
Contiguous Iterators
Cleanup for exception-specification and throw-expression
Resumable Functions v.2
Language Support for Runtime Contract Validation (Revision 8)
C Concurrency Challenges Draft
Business Plan and Convener's Report
Editor's Report -- Working Draft, Standard for Programming Language C++
Editor's Report -- Programming Languages -- C++
Working Draft, Standard for Programming Language C++
Programming Languages — C++
Atomic Operations on a Very Large Array
Executors and schedulers, revision 4
Searching and Manipulation of Parameter Packs
Data-Invariant Functions
Disposition of Comments, ISO/IEC DIS 14882 C++ 2014
Inline variables, or encapsulated expressions
Disallowing Inaccessible Operators From Trivially Copyable
Categorically qualified classes
Alias-Set Attributes: Toward restrict-like aliasing semantics for C++
TriviallyCopyable reference_wrapper
uncaught_exceptions
2015-02 LWG Meeting Invitation and Information
Operator assert
Non-member size() and more (Revision 1)
Light-Weight Execution Agents Revision 3
Relaxing Packaging Rules for Exceptions Thrown by Parallel Algorithms
Destructive Move (Rev 1)
std::function and Beyond
Value constraints
Uniform Container Erasure (Revision 1)
Atomic Smart Pointers, rev. 1
Agenda and Meeting Notice for WG21 Telecon Meeting
Forwarding References
Unified Call Syntax
Movable initializer lists
Transform Reduce, an Additional Algorithm for C++ Extensions for Parallelism
Removing auto_ptr
A proposal to add invoke function template (Revision 1)
Extend INVOKE to support types convertible to target class (Revision 1)
Parameter group placeholders for bind
Named arguments
Operator Dot
Call syntax: x.f(y) vs. f(x,y)
Default comparisons
Thoughts about Comparisons
Multidimensional bounds, index and array_view, revision 4
Proposed resolution for Core Issue 330: Qualification conversions and pointers to arrays of pointers
Transactional Memory Support for C++: Wording (revision 2)
SG5 Transactional Memory Support for C++ Update
SG5: Transactional Memory (TM) Meeting Minutes 2014/07/14-2014/10/06
Contiguous Iterators: Pointer Conversion & Type Trait
SIMD Types: The Vector Type & Operations
SIMD Types: The Mask Type & Write-Masking
Supporting Custom Diagnostics and SFINAE
C++ Ostream Buffers
Proposal for classes with runtime size
Generic Scope Guard and RAII Wrapper for the Standard Library
Removing auto_ptr, random_shuffle(), And Old <functional> Stuff
Folding expressions
C++ Standard Core Language Active Issues, Revision 91
C++ Standard Core Language Defect Reports and Accepted Issues, Revision 91
C++ Standard Core Language Closed Issues, Revision 91
std::synchronic<T>
Attributes for namespaces and enumerators
Adding u8 character literals
Allow constant evaluation for all non-type template arguments
Minutes of Sept. 4-5, 2014 SG1 meeting in Redmond, WA
Feature-testing recommendations for C++
Alignment Helpers for C++
Strongly Typed Bitset
Fast ASCII Character Manipulation
C++ Latches and Barriers
Working Draft, C++ Extensions for Concepts
C++ Standard Evolution Active Issues List (Revision R09)
C++ Standard Evolution Completed Issues List (Revision R09)
C++ Standard Evolution Closed Issues List (Revision R09)
A Proposal to Add a Const-Propagating Wrapper to the Standard Library
IBM comment on preparing for a Trigraph-adverse future in C++17
File System TS Active Issues List (Revision R3)
File System TS Closed Issues List (Revision R3)
File System TS Defect Report List (Revision R3)
A Module System for C++ (Revision 2)
Towards Implementation and Use of memory_order_consume
Out-of-Thin-Air Execution is Vacuous
std::rand replacement
Variant: a typesafe union
Fixing the specification of universal-character-names (rev. 2)
An update to the preprocessor specification (rev. 2)
Generalized lifetime extension
Minimal Additions to the Array View Library for Performance and Interoperability
Response To: Let return {expr} Be Explicit
Supplements to C++ Latches
Towards uniform handling of subobjects
Apply the [[noreturn]] attribute to main as a hint to eliminate global object destructor calls
Cleaning-up noexcept in the Library (Rev 2)
Refining Expression Evaluation Order for Idiomatic C++
Pointer Ordering
Nested namespace definition (revision 2)
Terms and definitions related to "threads"
Stackful Coroutines and Stackless Resumable Functions
A Class for Status and Optional Value
0-overhead-principle violations in exception handling - part 2
Selecting from Parameter Packs
A compile-time string library template with UDL operator templates
Language Extensions for Vector loop level parallelism
An Abstract Model of Vector Parallelism
Defaulted Comparison Using Reflection
Improved insertion interface for unique-key maps (Revision 2)
A proposal to add shared_mutex (untimed) (Revision 3)
Executors and Asynchronous Operations, Revision 1
Networking Library Proposal (Revision 2)
Resumable Lambdas: A language extension for generators and coroutines
C++ Standard Library Active Issues List (Revision R90)
C++ Standard Library Defect Report List (Revision R90)
C++ Standard Library Closed Issues List (Revision R90)
Library Preconditions are a Language Feature
Networking Primitives: std::experimental::network::htonl Considered Harmful
WG21 2014-10-24 Telecon Minutes
WG21 2014-11 Urbana Minutes
PL22.16 2014-11 Urbana Minutes
Language Support for Runtime Contract Validation (Revision 9)
User-defined Literals for size_t and ptrdiff_t
Proposed resolution for US104: Allocator-aware regular expressions (rev 3)
Delimited iterators (rev 4)
Cleaning up noexcept in the Library (Rev 3)
Wording for std::uncaught_exceptions
Wording for Atomic Smart Pointers
Proposed resolution for Core Issue 330: Qualification conversions and pointers to arrays of pointers
Wording for Forwarding References
Toward a concept-enabled standard library
Transactional Memory Support for C++: Wording (revision 3)
Attributes for namespaces and enumerators
Adding u8 character literals
Allow constant evaluation for all non-type template arguments
Consolidated Revisions to C++ Extensions for Library Fundamentals
Working Draft, Technical Specification for C++ Extensions for Transactional Memory
Uniform Container Erasure (Revision 2)
Relaxing Packaging Rules for Exceptions Thrown by Parallel Algorithms - Proposed Wording (Revision 1)
Parallelism PDTS Comment Responses
Adding Fused Transform Algorithms to the Parallelism TS
TriviallyCopyable reference_wrapper (Revision 1)
Improved insertion interface for unique-key maps (Revision 2.3)
Non-member size() and more (Revison 2)
A Proposal for the World's Dumbest Smart Pointer, v4
Contiguous Iterators
Cleanup for exception-specification and throw-expression
Resumable Functions (revision 3)
Threads, Fibers and Couroutines (slides deck)
Strike string_view::clear from Library Fundamentals
C++ language support for contract programming
Arrays of run-time bounds as data members
Folding Expressions
Working Draft, Standard for Programming Language C++
Editor's Report -- Programming Languages -- C++
Agenda and Meeting Notice for WG21 Ballot Resolution Telecon Meeting
Working Draft, Technical Specification for C++ Extensions for Transactional Memory
Technical Specification for C++ Extensions for Technical Specification for C++ Extensions for Transactional Memory
Pointer Safety and Placement New
C++ Standard Core Language Active Issues, Revision 92
C++ Standard Core Language Defect Reports and Accepted Issues, Revision 92
C++ Standard Core Language Closed Issues, Revision 92
National Body Comment -- ISO/IEC PDTS 19568 -- Technical Specification: C++ Extensions for Library Fundamentals
National Body Comment -- ISO/IEC PDTS 19570 -- Technical Specification: C++ Extensions for Parallelism
Return type deduction for explicitly-defaulted and deleted special member functions
Working Draft, Technical Specification for C++ Extensions for Parallelism
Parallelism TS Editor's Report
Programming Languages -- Technical Specification for C++ Extensions for Parallelism
Improvements to the Concurrency Technical Specification, revision 1
Data-Invariant Functions (revision 2)
make_array, revision 3
std::rand replacement, revision 2
New Safer Functions to Advance Iterators
Proposal to add an absolute difference function to the C++ Standard Library
Contracts for C++: What are the Choices
Make exception specifications be part of the type system
Towards Implementation and Use of memory_order_consume
Linux-Kernel Memory Model
Out-of-Thin-Air Execution is Vacuous
Use Cases for Thread-Local Storage
C++ Standard Evolution Active Issues List (Revision R10)
C++ Standard Evolution Completed Issues List (Revision R10)
C++ Standard Evolution Closed Issues List (Revision R10)
C++ Standard Library Issues History for C++14
C++ Standard Library Active Issues List (Revision R91)
C++ Standard Library Defect Report List (Revision R91)
C++ Standard Library Closed Issues List (Revision R91)
Networking Library Proposal (Revision 3)
Concepts Lite
Wording for bool_constant
Working Draft, C++ Extensions for Library Fundamentals
Working Draft, C++ Extensions for Library Fundamentals, Version 2
Editor's Report for the Library Fundamentals TS
Editor's Report: Technical Specification for C++ Extensions for Transactional Memory
Agenda and Meeting Notice for WG21 Concepts Meeting
Remove Deprecated Use of the register Keyword
Multidimensional bounds, index and array_view, revision 5
Making std::function thread-safe
Minutes of WG21 Telecon
Agenda and Meeting Notice for WG21 Concepts Meeting Notice (revision 1)
Responses to National Body Comments, PDTS 19570, C++ Extensions for Parallelism
Parallelism TS
Parallelism TS - Editor's Report
Parallelism TS - DTS Ballot Document
Shared Multidimensional Arrays with Polymorphic Layout
Relaxed Array Type Declarator
Introduce the [[noexit]] attribute for main as a hint to eliminate destructor calls for objects with static storage duration
Unary Folds and Empty Parameter Packs
A Proposal to Add vector release method just like unique_ptr release method to the Standard Library
Delayed Evaluation Parameters
Concepts Lite TS
WG21 2015-01 Skillman Minutes
Responses to National Body Comments, ISO/IEC PDTS 19568, C++ Extensions for Library Fundamentals
LWG 2228: Missing SFINAE rule in unique_ptr templated assignment
Comparison in C++
Introducing alias size_type for type size_t in class std::bitset
Default argument for second parameter of std::advance
Networking Library Proposal (Revision 4)
Minimal incomplete type support for standard containers, revision 2
A Proposal to Add a Const-Propagating Wrapper to the Standard Library
Atomic View
Linux-Kernel Memory Mode
Out-of-Thin-Air Execution is Vacuous
Use Cases for Thread-Local Storage
C++ Extensions for Concepts PDTS
Language Support for Contract Assertions
FAQ about N4378, Language Support for Contract Assertions
Constant View: A proposal for a std::as_const helper function template
Suggested Design for Customization Points
Working Draft, C++ extensions for Ranges
C++ Standard Library Active Issues List (Revision R92)
C++ Standard Library Defect Report List (Revision R92)
C++ Standard Library Closed Issues List (Revision R92)
Unspecialized std::tuple_size should be defined
Improving pair and tuple, revision 3
A Proposal to Add a Const-Propagating Wrapper to the Standard Library
Wording for bool_constant, revision 1
Minimal incomplete type support for standard containers, revision 3
make_array, revision 4
C++ Latches and Barriers
Noop Constructors and Destructors
Agenda for Lenexa Meeting
SIMD Types: ABI Considerations
National Body Comments: PDTS 19841, Transactional Memory
A low-level API for stackful coroutines
A unified syntax for stackless and stackful coroutines
Proposed Working Draft, Technical Specification for C++ Extensions for Concurrency
Concurrency TS Editor's Report, May 2015
Defaulted comparison operator semantics should be uniform
Resumable Functions (revision 4)
Draft wording for Resumable Functions
Extension to aggregate initialization
Type of the accumulaters of standard algorithms std::accumulate and std::inner_product
Integrating Executors with Parallel Algorithm Execution
Working Draft, Technical Specification for C++ Extensions for Parallelism
Parallelism TS Editor's Report
Programming Languages -- Technical Specification for C++ Extensions for Parallelism
Responses to PDTS comments on Transactional Memory
Task Block (formerly Task Region) R4
Shortcomings of iostreams
Executors and Schedulers Revision 5
Simple Contracts for C++
Don't Move: Vector Can Have Your Non-Moveable Types Covered
Source-Code Information Capture
Parameter Stringization
Potential extensions to Source-Code Information Capture
Defining Test Code
Evolution Active Issues List (Revision R11)
Evolution Completed Issues List (Revision R11)
Evolution Closed Issues List (Revision R11)
Inline Variables
Generalized Dynamic Assumptions
Adding [nothrow-] swappable traits
Agenda and Meeting Notice for WG21 Pre-Lenexa Telecon Meeting
Type Property Queries (rev 4)
Core issue 1941 - rewording inherited constructors
Core issue 1776 - replacement of class objects containing reference members
Working Draft, Standard for Programming Language C++
Editor's Report -- Working Draft, Standard for Programming Language C++
Flexible static_assert messages
Tweaks to Streamline Concepts Lite Syntax
Proposing Contract Attributes
Proposing Standard Library Support for the C++ Detection Idiom
Conditionally-supported Special Math Functions, v3
Industrial Experience with Transactional Memory at Wyatt Technologies.
Light-Weight Execution Agents Revision 3
Feature-testing recommendations for C++
SG5: Transactional Memory (TM) Meeting Minutes 2015-03-23 and 2015-04-06
Default argument for second parameter of std::advance (Rev. 1)
Introducing alias size_type for type size_t in class std::bitset (Rev. 1 )
Linux-Kernel Memory Model
Overly attached promise
The missing INVOKE related trait
From a type T, gather members name and type information, via variadic template expansion
Rounding and Overflow in C++
Message Digest Library for C++
Variant: a typesafe union (v2)
Static reflection
Use cases of reflection
Resumable Expressions
SIMD Types Example: Matrix Multiplication
No Sane Compiler Would Optimize Atomics
Towards improved support for games, graphics, real-time, low latency, embedded systems
C++ Standard Core Language Active Issues, Revision 93
C++ Standard Core Language Defect Reports and Accepted Issues, Revision 93
C++ Standard Core Language Closed Issues, Revision 93
LWG 2424: Atomics, mutexes and condition variables should not be trivially copyable
Static if resurrected
LWG 2089, Towards more perfect forwarding
IO device requirements for C++
Pi-calculus syntax for C++ executors
A Module System for C++ (Revision 3)
Wording for Modules
On Quantifying Memory-Allocation Strategies
Template Argument Type Deduction
Variadic lock_guard
Template parameter deduction for constructors (Rev 2)
consexpr goto
noexcept(auto), again
Unified Call Syntax: x.f(y) and f(x,y)
Default comparisons (R2)
Thoughts about Comparisons (R2)
Operator Dot (R2)
Networking Library Proposal (Revision 5
Merge Fundamentals V1 into v2
Programming Languages -- C++ Extensions for Library Fundamentals DTS
Working Draft, C++ Extensions for Library Fundamentals, Version 2
Some notes on executors and the Networking Library Proposal
Read-copy-update
C++ Standard Library Active Issues List (Revision R93)
C++ Standard Library Defect Report List (Revision R93)
C++ Standard Library Closed Issues List (Revision R93)
Constexpr lambdas
Responses to PDTS comments on Transactional Memory, version 2
WG21 2015-04-24 Telecon Minutes
WG21 2015-05 Lenexa Minutes
PL22.16 2015-05 Lenexa Minutes (Draft)
Thoughts about C++17
Multidimensional bounds, offset and array_view, revision 6
Operator dot
WG21 2014-11 Urbana Minutes (revision 1)
PL22.16 2014-11 Urbana Minutes (Final)
Variadic lock_guard (Rev. 2)
Draft wording for Coroutines (Revision 2)
Working Draft, Technical Specification for C++ Extensions for Concurrency
Proposing Standard Library Support for the C++ Detection Idiom, V2
Working Draft, Technical Specification for C++ Extensions for Parallelism
Parallelism TS Editor's Report
Technical Specification for C++ Extensions for Parallelism
A proposal to add shared_mutex (untimed) (Revision 4)
constexpr atomic::is_always_lock_free
Minimal incomplete type support for standard containers, revision 4
Adding [nothrow-]swappable traits, revision 1
Multidimensional bounds, offset and array_view, revision 7
Working Draft Technical Specification for C++ Extensions for Transactional Memory
Technical Specification for C++ Extensions for Transactional Memory
Editor's Report: Technical Specification for C++ Extensions for Transactional Memory
Variant: a type-safe union (v3)
Record of Response: National Body Comments ISO/IEC PDTS 19841
Make exception specifications be part of the type system, version 2
Source-Code Information Capture
Merge Fundamentals V1 into V2
std::atomic_object_fence(mo, T&&...)
constexpr std::thread::hardware_{true,false}_sharing_size
Respect vector::reserve(request) Relative to Reallocation
C++ Standard Library Issues Resolved Directly In Lenexa
Towards improved support for games, graphics, real-time, low latency, embedded systems
Working Draft, Standard for Programming Language C++
Editor's Report -- Working Draft, Standard for Programming Language C++
Working Draft, C++ Extensions for Library Fundamentals, Version 2
Editor's Report for the Library Fundamentals TS
std::rand replacement, revision 3
Proposed wording for default comparisons
Make exception specifications be part of the type system, version 3
Data-Invariant Functions (revision 3)
Feature-testing preprocessor predicates for C++17
An algorithm to "clamp" a value between a pair of boundary values
Adding Symmetry Between shared_ptr and weak_ptr
Technical Specification for C++ Extensions for Concurrency
Evolution Active Issues List (Revision R12)
Evolution Completed Issues List (Revision R12)
Evolution Closed Issues List (Revision R12)
Variant: a type-safe union (v4).
A polymorphic wrapper for all Callable objects
October 2015 WG21 Meeting (Kona)
PL22.16/WG21 draft agenda: 19-24 Oct 2015, Kona, HI/US
Agenda and Meeting Notice for WG21 Concepts Telecon
Business Plan and Convener's report
WG21 2015-07-20 Telecon Minutes
Programming Languages -- C++ Extensions for Concepts
Record of Response: National Body Comments on ISO/IEC PDTS 19217, Technical Specification: C++ Extensions for Concepts
National Body Comments, ISO/IEC PDTS 19571, C++ Extensions for Concurrency
Pre-Kona WG21 Telecon
Working Draft, C++ extensions for Concepts
Editor's report for the Concepts TS
February 2016 WG21 Meeting
WG21 telecon minutes
WG21 2015-07-20 Telecon (revised)
Kona WG21 Minutes
Kona PL22.16 Minutes
Working Draft, C++ Extensions for Ranges
Ranges Editor's Report
Working Draft, C++ Extensions for Library Fundamentals, Version 2
Editor's Report for the Library Fundamentals TS
C++ Extensions for Library Fundamentals, Version 2 PDTS
Record of Response: National Body Comments ISO/IEC PDTS 19571 Technical Specification: C++ Extensions for Concurrency
Editor's Report -- Working Draft, Standard for Programming Language C++
Working Draft, Standard for Programming Language C++ Note:
PL22.16/WG21 draft agenda: 29 Feb-05 Mar 2016, Jacksonville, FL/US
Proposed Ranges TS working draft
Oulu Meeting Information
2016-11 Issaquah meeting information
WG21 telecon meeting: Pre-Jacksonville
2017-02 Kona WG21 Meeting Information
Networking TS Working Draft
Networking TS Editor's Report
Technical Specification for C++ Extensions for Concurrency
Working Draft, Technical Specification for C++ Extensions for Parallelism Version 2
Parallelism TS Editor's Report, pre-Jacksonville mailing
WG21 2016-02-19 Telecon Minutes
Revised WG21 2016-02-19 Telecon Minutes
Working Draft, Standard for Programming Language C++
Editor's Report -- Working Draft, Standard for Programming Language C++
Working Draft, C++ Extensions for Library Fundamentals, Version 2
Editor's Report for the Library Fundamentals TS
WG21 2016-02 Jacksonville Min
PL22.16 2016-02 Jacksonville Minutes (Draft)
Working Draft, C++ extensions for Networking Note:
Networking TS Editor's Report
PL22.16/WG21 draft agenda: 20-25 Jun 2016, Oulu, FI
WG21 telecon meeting: Pre-Oulu
Modules TS Working Draft
Editor's Report -- Working Draft, Standard for Programming Language C++
Working Draft, Standard for Programming Language C++
WG21 2016-06-10 Telecon Minutes
PL22.16 Jacksonville Minutes (revised)
WG21 2016-06 Oulu Minutes
PL22.16 2016-06 Oulu Minutes
2016-08 LWG Meeting
Working Draft, C++ Extensions for Library Fundamentals, Version 2
Editor's Report for the Library Fundamentals TS
WG21 telecon minutes - pre-Oulu (revised)
Editor's Report -- Committee Draft, Standard for Programming Language C++
C++17 CD Ballot Document
Working Draft, Standard for Programming Language C++
Toronto Meeting Information
PL22.16/WG21 draft agenda: 7-12 Nov 2016, Issaquah, WA, US
Business Plan and Convener's Report
Working Draft, Extensions to C++ for Modules
Editor's Report for the Modules TS
Working Draft, C++ extensions for Networking
Networking TS - Editor's Report
WG21 telecon meeting: Pre-Issaquah
WG21 2016-10-28 Telecon Minutes
Response to NB Comments: SC22 N5097, ISO/IEC PDTS 19568 Part 2, Library Fundamentals, Part 2
Programming Languages -- C++ Extensions for Library Fundamentals, Version 2 DTS
Working Draft, Standard for Programming Language C++
Editor's Report -- Working Draft, Standard for Programming Language C++
Working Draft, C++ Extensions for Ranges
Editor's Report for the Ranges TS
Programming Languages -- C++ Extensions for Ranges PDTS
WG21 2016-11 Issaquah Minutes
PL22.16 2016-11 Issaquah Minutes
Programming Languages -- C++ Extensions for Networking PDTS
Working Draft, C++ Extensions for Networking
Networking TS - Editor's Report
Working Draft, Technical Specification on C++ Extensions for Coroutines
Editor's report for the Coroutines TS
Working Draft, C++ extensions for Concepts
Editor's report for the Concepts TS
PL22.16/WG21 draft agenda: 27 Feb - 4 Mar 2017, Kona, HI, US
2017-11 Albuquerque WG21 meeting information
PL22.16 2016-11 Issaquah Minutes (final)
Pre-Kona WG21 Telecon Agenda
2017-07-10-15 ISO WG21 C++ Standard Meeting in Toronto
Working Draft, Extensions to C++ for Modules
Editor's Report for the Module TS
Editor's Report -- Working Draft, Standard for Programming Language C++
Working Draft, Standard for Programming Language C++
Working Draft, C++ extensions for Concepts
Editor's report for the Concepts TS
National Body Comments for PDTS 19216, C++ Extensions for Networking
National Body Comments for PDTS 21425, C++ Extensions for Ranges
WG21 Telecon Minutes
Working Draft, Extensions to C++ for Modules
Editor's Report for the Module TS
Working Draft, Technical Specification on C++ Extensions for Coroutines
Editor's report for the Coroutines TS
Working Draft, C++ Extensions for Ranges
Editor's Report for the Ranges TS
2017-02 Kona Record of Discussion ISO/IEC
WG21 2017-02 Kona Minutes
PL22.16 2017-02 Kona Minutes
Working Draft, C++ Extensions for Networking
Networking TS - Editor's Report
Alternative accommodation (student residence) for the 2017-07 Toronto WG21 Meeting
Working Draft, Standard for Programming Language C++ Note:
C++17 DIS Ballot Document
Editor's Report -- Working Draft, Standard for Programming Language C++
PL22.16/WG21 draft agenda: 10-15 Jul 2017, Toronto, ON, CA
Coroutines PDTS document
Responses to National Body Comments for ISO/IEC CD 14882
WG21 telecon meeting: Pre-Toronto
National Body Comments, SC22 N 5205, ISO/IEC PDTS 22277, C++ Extensions for Coroutines
Working Draft, Extensions to C++ for Modules
Editor's Report for the Module TS
Working Draft, Technical Specification for C++ Extensions for Parallelism Version 2
Parallelism TS Editor's Report, pre-Toronto mailing
Working Draft, C++ Extensions for Ranges
Editor's Report for the Ranges TS
Spring 2018 WG21 Meeting Information (Rapperswil)
Working Draft, C++ extensions for Concepts
Editor's report for the Concepts TS
WG21 Telecon Minutes
WG21 / PL22.16 Meeting, Jacksonville, FL, March 12 - 17, 2018
National Body Comments for ISO/IEC PDTS 22277, C++ Extensions for Coroutines
Editor's report for the Coroutines TS
C++ Extensions for Coroutines TS Document
Working Draft, Extensions to C++ for Modules
Editor's Report for the Module TS
Business Plan and Convener's Report
Ranges TS Ballot Document
Working Draft, C++ Extensions for Ranges
Editor's Report for the Ranges TS
Working Draft, Standard for Programming Language C++ Note:
Editor's Report -- Working Draft, Standard for Programming Language C++
Extensions to C++ for Modules Ballot Document
2017-07 Toronto Record of Discussion
WG21 2017-07 Toronto Minutes
PL22.16 2017-07 Toronto Minutes
PL22.16/WG21 draft agenda: 06-11 Nov 2017, Albuquerque, NM, US
Responses to National Body Comments to ISO/IEC PDTS 21425, C++ Extensions for Ranges
NB Comments, ISO/IEC PDTS 21544, C++ Extensions for Modules
Working Draft, Technical Specification for C++ Extensions for Parallelism Version 2
Parallelism TS Editor's Report
Working Draft, Standard for Programming Language C++ Note:
Editor's Report -- Working Draft, Standard for Programming Language C++
WG21 telecon meeting: Pre-Albuquerque
WG21 2017-10-27 Telecon Minutes
Working Draft, Technical Specification for C++ Extensions for Parallelism Version 2
Parallelism TS Editor's Report
Responses to National Body Comments, ISO/IEC PDTS 19216, C++ Extensions for Networking
WG21 2017-11 Albuquerque Minutes
PL22.16 2017-11 Albuquerque Minutes
Working Draft, C ++ Extensions for Networking
Networking TS - Editor's Report
Working Draft, Standard for Programming Language C++
Editors' Report -- Programming Languages -- C++
2018-11 San Diego Meeting Information
PL22.16/WG21 draft agenda: 12-17 March 2018, Jacksonville, FL, US
WG21 telecon meeting: Pre-Jacksonville
WG21 telecon meeting: Modules TS publication
Programming Languages — Extensions to C++ for Modules
Working Draft, Extensions to C++ for Modules
Editor’s Report for the Module TS
Responses to SC22 N5250, ISO/IEC PDTS 21544, C++ Extensions for Modules
Working Draft, C++ Extensions for Coroutines
Editor's report for the Coroutines TS
Working Draft, Technical Specification for C++ Extensions for Parallelism Version 2
Parallelism TS Editor’s Report
Working Draft, Standard for Programming Language C++
Editors' Report -- Programming Languages – C++
WG21 telecon meeting: Modules TS publication
WG21 pre-Jacksonville telecon minutes
SC22 WG14 Liaison Report (C Standard)
WG21 2018-03 Jacksonville Minutes
Working Draft, C ++ Extensions for Networking
Networking TS - Editor's Report
Working Draft, C ++ Extensions for Coroutines
Editor's report for the Coroutines TS
C++ Standardization Committee Meeting, HSR Rapperswil – Latest Info
Jacksonville 2018 LEWG Summary
N4740 Editors' Report - Programming Languages - C++
Working Draft, Standard for Programming Language C++
Working Draft, Technical Specification for C++ Extensions for Parallelism Version 2
Parallelism TS Editor’s Report, post-Jacksonville mailing
Programming Languages - Technical Specification for C++ Extensions for Parallelism Version 2
PL22.16/WG21 draft agenda: 4-9 June 2018, Rapperswil, Switzerland
Working Draft, C++ Extensions for Reflection
Reflection TS - Editor’s Report
WG21 telecon meeting: Pre-Rapperswil
Editors' Report - Programming Languages - C++
Working Draft, Standard for Programming Language C++
WG21 pre-Rapperswil telecon minutes
Responses to National Body Comments for ISO/IEC PDTS 19750, C++ Extensions for Parallelism Version 2
WG21 2018-06 Rapperswil Minutes
Rapperswil 2018 LEWG Summary
Working Draft, C++ Extensions for Parallelism Version 2
Parallelism TS Editor’s Report, post-Rapperswil mailing
Programming Languages - C++ Extensions for Parallelism Version 2
Working Draft, C++ Extensions for Library Fundamentals, Version 3
Editor’s Report: C++ Extensions for Library Fundamentals, Version 3
Working Draft, C++ Extensions for Coroutines
Editor's report for the Coroutines TS
Working Draft, Standard for Programming Language C++
Collated Responses to National Body Comments, PDTS 19750, Parallelism, V2
Editors' Report - Programming Languages - C++
2019 Kona meeting information
Working Draft, C++ Extensions for Reflection
Reflection TS - Editor’s Report
Business Plan and Convener's Report: ISO/IEC JTC1/SC22/WG21 (C++)
PL22.16/WG21 draft agenda: 5-10 November 2018, San-Diego, USA
2019 Kona meeting information (rev. 1)
Working Draft, C++ Extensions for Networking
Networking TS - Editor's Report
Working Draft, C++ Extensions for Parallelism Version 2
Parallelism TS Editor’s Report, pre-San Diego mailing
Working Draft, C++ Extensions for Coroutines
Editor's report for the Coroutines TS
WG21 telecon meeting: Pre-San Diego
Working Draft, Standard for Programming Language C++
Editors' Report - Programming Languages - C++
2019 Cologne Meeting Invitation and Information
WG21 2018-06 Rapperswil Minutes
WG21 Autumn Meeting - Belfast, Northern Ireland
2019 Cologne Meeting Invitation and Information
WG21 pre-San Diego telecon minutes
San Diego 2018 LEWG Summary
Working Draft, C++ Extensions for Library Fundamentals, Version 3
Editor’s Report: C++ Extensions for Library Fundamentals, Version 3


WG21 2018-11 San Diego Minutes
Working Draft, Standard for Programming Language C++
Editors' Report - Programming Languages - C++
Working Draft, C++ Extensions for Parallelism Version 2
Parallelism TS Editor’s Report, post-San Diego mailing
PL22.16/WG21 Draft agenda: 18-23 Febuary 2019, Kona, HI, USA
Working Draft, C++ Extensions for Parallelism Version 2
Parallelism TS Editor’s Report, pre-Kona mailing
WG21 telecon meeting: Pre-Kona
Editors' Report - Programming Languages - C++
Working Draft, Standard for Programming Language C++
WG21 pre-Kona telecon minutes
WG21 2018-11 San Diego Minutes
Kona 2019 LEWG Summary
WG21 2019-02 Kona Minutes of Meeting
Working Draft, C++ Extensions for Library Fundamentals, Version 3
Editor’s Report: C++ Extensions for Library Fundamentals, Version 3
Working Draft, C++ Extensions for Parallelism Version 2
Parallelism TS Editor’s Report, post-Kona mailing
Working Draft, Standard for Programming Language C++
Editors' Report - Programming Languages - C++
Editors' Report - Programming Languages - C++
2019 Belfast Meeting Invitation and Information
Cologne Agenda
WG21 telecon meeting: Pre-Cologne
2020 Prague Meeting Invitation and Information
Working Draft, C++ Extensions for Reflection
Reflection TS - Editor's Report
Working Draft, Standard for Programming Language C++
Editors' Report - Programming Languages - C++
Removing Deprecated Register Keyword
Removing Deprecated Register Keyword
Removing Deprecated Operator++ for bool
Removing Deprecated Operator++ for bool
Removing Deprecated Dynamic Exception Specifications
Removing Deprecated Exception Specifications from C++17
Removing Deprecated Dynamic Exception Specifications from C++17
Removing Deprecated Exception Specifications from C++17
Removing Deprecated Exception Specifications from C++17
Removing Deprecated Exception Specifications from C++17
Removing Deprecated Aliases in iostreams
Removing Deprecated Aliases in iostreams
Adopt not_fn from Library Fundamentals 2 for C++17
Adopt not_fn from Library Fundamentals 2 for C++17
Adopt not_fn from Library Fundamentals 2 for C++17
Adopt not_fn from Library Fundamentals 2 for C++17
Adopt not_fn from Library Fundamentals 2 for C++17
Adopt Type Traits Variable Templates from Library Fundamentals TS for C++17
Constant View: A proposal for a std::as_const helper function template
Constant View: A proposal for a std::as_const helper function template
C++ Executors
Polymorphic Multidimensional Array View
Polymorphic Multidimensional Array View
Polymorphic Multidimensional Array View
Polymorphic Multidimensional Array View
Polymorphic Multidimensional Array Reference
Polymorphic Multidimensional Array Reference
mdspan: A Non-Owning Multidimensional Array Reference
mdspan: A Non-Owning Multidimensional Array Reference
mdspan: A Non-Owning Multidimensional Array Reference
mdspan: A Non-Owning Multidimensional Array Reference
Adding a subsection for concurrent random number generation in C++17
Additions to Filesystem supporting Relative Paths
Make exception specifications be part of the type system, version 4
Make exception specifications be part of the type system, version 5
Logical Operator Type Traits
Logical Operator Type Traits (revison 1)
Proposal to add the multiline option to std::regex for its ECMAScript engine
Proposal to add the multiline option to std::regex for its ECMAScript engine
A specialization-friendly std::common_type
Extension to aggregate initialization
Extension to aggregate initialization
Lambda Capture of *this by Value
Lambda Capture of *this by Value
Lambda Capture of *this by Value
Lambda Capture of *this by Value as [=,*this]
Atomic View
Atomic View
Atomic View
Atomic View
Atomic View
Atomic View
Atomic View
Atomic Ref
Atomic Ref
Floating Point Atomic View
Floating Point Atomic
Floating Point Atomic
Floating Point Atomic View
Floating Point Atomic
Floating Point Atomic
Floating Point Atomic
Working Draft, C++ Extensions for Ranges
Proxy Iterators for the Ranges Extensions
Proxy Iterators for the Ranges Extensions
Proxy Iterators for the Ranges Extensions
Relocator: Efficiently moving objects
The Parallelism TS Should be Standardized
The Parallelism TS Should be Standardized
The Parallelism TS Should be Standardized
An algorithm to "clamp" a value between a pair of boundary values
An algorithm to "clamp" a value between a pair of boundary values
multi-range-based for loops
Named Types
Using non-standard attributes
Using non-standard attributes
Using non-standard attributes
Using non-standard attributes
Using attribute namespaces without repetition
A Unified Proposal for Composable Hashing
Proposal to Introduce a 3-Argument Overload to std::hypot
Proposal to Introduce a 3-Argument Overload to std::hypot
A Proposal to Add Constexpr Modifiers to reverse_iterator, move_iterator, array and Range Access
Homogeneous interface for variant, any and optional
Homogeneous interface for variant, any and optional (Revision 1)
Homogeneous interface for variant, any and optional (Revision 2)
Homogeneous interface for variant, any and optional (Revision 3)
Re-enabling shared_from_this
Re-enabling shared_from_this (revision 1)
Civil Time for the Standard Library
Dynamic memory allocation for over-aligned data
Dynamic memory allocation for over-aligned data
Dynamic memory allocation for over-aligned data
Dynamic memory allocation for over-aligned data
Dynamic memory allocation for over-aligned data
Unary Folds and Empty Parameter Packs (Revision 1)
Fixed point real numbers
Fixed point real numbers
Fixed-point real numbers
Fixed-point real numbers
Fixed-point real numbers
Fixed-Point Real Numbers
Fixed-Point Real Numbers
Fixed-Point Real Numbers
Flat Containers
Extending raw_storage_iterator
Extending memory management tools
Extending memory management tools
Extending memory management tools
Extending memory management tools
Unstable remove algorithms
std::recover: undoing type erasure
Function wrappers with allocators and noexcept
unwinding_state: safe exception relativity
Overloaded and qualified std::function
Qualified std::function signatures
Change is_transparent to metafunction
Change is_transparent to metafunction
Transactional Memory (TM) Meeting Minutes 2015/06/01-2015/09/21
Games Dev/Low Latency/Financial Trading/Banking Meeting Minutes 2015/08/12-2015/09/23
C++ generic match function
C++ generic overload function
C++ generic overload function (Revision 1)
C++ generic overload function
C++ generic overload function
Generic Scope Guard and RAII Wrapper for the Standard Library
Generic Scope Guard and RAII Wrapper for the Standard Library
Generic Scope Guard and RAII Wrapper for the Standard Library
Generic Scope Guard and RAII Wrapper for the Standard Library
Generic Scope Guard and RAII Wrapper for the Standard Library
Generic Scope Guard and RAII Wrapper for the Standard Library
Generic Scope Guard and RAII Wrapper for the Standard Library
Generic Scope Guard and RAII Wrapper for the Standard Library
Generic Scope Guard and RAII Wrapper for the Standard Library
Generic Scope Guard and RAII Wrapper for the Standard Library
Generic Scope Guard and RAII Wrapper for the Standard Library
C++ Synchronized Buffered Ostream
C++ Synchronized Buffered Ostream
C++ Synchronized Buffered Ostream
DRAFT C++ Synchronized Buffered Ostream
DRAFT C++ Synchronized Buffered Ostream
C++ Synchronized Buffered Ostream
C++ Synchronized Buffered Ostream
C++ Synchronized Buffered Ostream
Coroutines: reports from the fields
On Interactions Between Coroutines and Networking Library
On Interactions Between Coroutines and Networking Library
Soft Keywords
Wording for Coroutines (Revision 3)
Wording for Coroutines
Wording for Coroutines
Wording for Coroutines
Wording for Coroutines
Wording for Coroutines
Wording for Coroutines
Wording for Coroutines
Working Draft, C++ Extensions for Coroutines
An Interface for Abstracting Execution
An Interface for Abstracting Execution
Add rings to the Standard Library
Add rings to the Standard Library
Add rings to the Standard Library
A proposal to add a ring span to the standard library
A proposal to add a ring span to the standard library
Function Object-Based Overloading of Operator Dot
Feature-testing preprocessor predicates for C++17
__has_include for C++17
When should compilers optimize atomics?
When should compilers optimize atomics?
C++17 should refer to C11 instead of C99
C++17 should refer to C11 instead of C99
C++17 should refer to C11 instead of C99
C++17 should refer to C11 instead of C99
Movable initializer lists, rev. 2
Accessors and views with lifetime extension
Elementary string conversions
Elementary string conversions
Elementary string conversions, revision 2
Elementary string conversions, revision 2
Elementary string conversions, revision 4
Elementary string conversions, revision 5
Proposal of [[unused]], [[nodiscard]] and [[fallthrough]] attributes
A C++ Compiler for Heterogeneous Computing
Coroutines: Return Before Await
Coroutines: Keyword alternatives
Light-Weight Execution Agents
Light-Weight Execution Agents
On unifying the coroutines and resumable functions proposals
On unifying the coroutines and resumable functions proposals
On unifying the coroutines and resumable functions proposals
Making std::owner_less more flexible
Template Library for Index-Based Loops
Template Library for Index-Based Loops
Template Library for Parallel For Loops
Vector and Wavefront Policies
Vector and Wavefront Policies
Vector and Wavefront Policies
Vector and Wavefront Policies
Vector and Wavefront Policies
is_callable, the missing INVOKE related trait
is_callable, the missing INVOKE related trai
is_callable, the missing INVOKE related trai
The [[pure]] attribute
Extension methods in C++
Variant: Discriminated Union with Value Semantics
A proposal to add sincos to the standard library
For Loop Exit Strategies (Revision 1)
For Loop Exit Strategies (Revision 1)
For Loop Exit Strategies (Revision 3)
Splicing Maps and Sets (Revision 2)
Splicing Maps and Sets (Revision 3)
Splicing Maps and Sets (Revision 4)
Splicing Maps and Sets (Revision 5)
Emplace Return Type
Emplace Return Type (Revision 1)
Emplace Return Type (Revision 1)
Oo... adding a coherent character sequence to begin octal-literals
Variant design review
Variant: a type-safe union without undefined behavior (v2)
Variant: a type-safe union that is rarely invalid (v5)
Variant: a type-safe union that is rarely invalid (v6)
Variant: a type-safe union for C++17 (v7)
Variant: a type-safe union for C++17 (v8)
Quantifying Memory-Allocatiom Strategies
Quantifying Memory-Allocation Strategies
Removing result_type, etc.
Template parameter deduction for constructors (Rev. 3)
Template parameter deduction for constructors (Rev. 3)
Template argument deduction for class templates (Rev. 5)
Template argument deduction for class templates (Rev. 6)
Template argument deduction for class templates (Rev. 7)
Polishing <chrono>
Polishing
Simply a strong variant
Simply a basic variant
The case for a language based variant
Pattern Matching and Language Variants
Language Variants
Feature-testing recommendations for C++
Feature-testing recommendations for C++
Feature-testing recommendations for C++
Feature-testing recommendations for C++
Feature-testing recommendations for C++
Feature-testing recommendations for C++
Use Cases for Thread-Local Storage
Towards Implementation and Use of memory order consume
Towards Implementation and Use of memory order consume
A low-level API for stackful context switching
A low-level API for stackful context switching
Comparison in C++
Comparison in C++
Comparison in C++
An Outline of a C++ Numbers Technical Specification,
C++ Parametric Number Type Aliases
Overflow-Detecting and Double-Wide Arithmetic Operations
Overflow-Detecting and Double-Wide Arithmetic Operations
Multi-Word Integer Operations and Types
Multi-Word Integer Operations and Types
Rounding and Overflow in C++
Rounding and Overflow in C++
C++ Binary Fixed-Point Arithmetic
Better support for constexpr in std::array
Skeleton Proposal for Thread-Local Storage (TLS)
Skeleton Proposal for Thread-Local Storage (TLS)
Function Aliases + Extended Inheritance = Opaque Typedefs
Implementing the strong guarantee for variant<> assignment
Networking Library (Revision 6)
Networking Library (Revision 7)
Executors and Asynchronous Operations, Revision 2
Resumable Expressions (revision 1)
Boolean conversion for Standard Library types
Generic to_string/to_wstring functions
Concepts-TS editors report
Overload sets as function arguments
Overload sets as function arguments
Overload sets as function arguments
constexpr unions and common initial sequences
Working Draft, C++ extensions for Concepts
array_view: bounds-safe views for sequences of objects
span: bounds-safe views of objects for sequences
span: bounds-safe views for sequences of objects
span: bounds-safe views for sequences of objects
span: bounds-safe views for sequences of objects
span: bounds-safe views for sequences of objects
span: bounds-safe views for sequences of objects
span: bounds-safe views for sequences of objects
Unifying the interfaces of string_view and array_view
string_span: bounds-safe views for sequences of characters
string_span: bounds-safe views for sequences of objects
Linux-Kernel Memory Model
Linux-Kernel Memory Model
Linux-Kernel Memory Model
Linux-Kernel Memory Model
Linux-Kernel Memory Model
Linux-Kernel Memory Model
Linux-Kernel Memory Model
std::bitset inclusion test methods
std::synchronic
std::synchronic<T>
std::synchronic<T>
Declaring non-type template arguments with auto
Declaring non-type template arguments with auto
Declaring non-type template arguments with auto
constexpr_if
constexpr_if
We cannot (realistically) get rid of throwing moves
Comparing virtual functions
Unified call syntax concerns
Non-throwing container operations
Non-throwing container operations
Putting noexcept(auto) on hold, again
Introducing a name for brace-or-equal-initializers for non-static data members
Guaranteed copy elision through simplified value categories
Wording for guaranteed copy elision through simplified value categories
Rewording inheriting constructors (core issue 1941 et al)
Rewording inheriting constructors (core issue 1941 et al)
Core Issue 1776: Replacement of class objects containing reference members
Core Issue 1776: Replacement of class objects containing reference members
Construction Rules for enum class Values
Construction Rules for enum class Values
Construction Rules for enum class Values
Modules, Componentization, and Transitional Paths
A Module System for C++ (Revision 4)
Wording for Modules
Wording for Modules
Wording for Modules
Structured Bindings
Structured Bindings
Structured Bindings
Expression Order of Evaluation
Refining Expression Evaluation Order for Idiomatic C++ (Revision 2)
Refining Expression Evaluation Order for Idiomatic C++
Refining Expression Evaluation Order for Idiomatic C++
Regular Void
Regular Void
The Use and Implementation of Contracts
memory_resource_ptr: A Limited Smart Pointer for memory_resource Correctness
Generalised member pointers
Proposal of Multi-Declarators
constexpr atomic::is_always_lock_free
constexpr atomic<T>::is_always_lock_free
std::atomic_object_fence(mo, T&&...)
constexpr std::thread::hardware_{true,false}_sharing_size
constexpr std::thread::hardware_{true,false}_sharing_size
Task Block R5
Variadic lock_guard (Rev. 3)
Variadic lock_guard (Rev. 4)
Variadic lock_guard (Rev. 4)
Handling Disappointment in C++
Couroutines belong in a TS
Draft of Technical Specification for C++ Extensions for Concurrency
Wording for removing defaults for unary folds
Bitset Iterators, Masks, and Container Operations
A response to "P0055R0: On Interactions Between Coroutines and Networking Library"
shared_ptr::weak_type
Core Language Working Group "ready" Issues
C++ Standard Library Issues to be moved in Kona
C++ Standard Library Issues to be moved in Jacksonville
C++ Standard Library Issues to be moved in Oulu
C++ Standard Library Issues to be moved in Issaquah
C++ Standard Library Issues to be moved in Kona
Three interesting questions about contracts
Core Language Working Group "ready" Issues after the October, 2015 (Kona) meeting
Core Language Working Group "ready" Issues for the February, 2016 (Jacksonville) meeting
Core Language Working Group "ready" Issues for the February, 2016 (Jacksonville) meeting
regex and Unicode character types
Wording for Constexpr Lambda
Wording for Constexpr Lambda
Response To: Resumable Expressions P0114R0
Abominable Function Types
Deprecating Vestigial Library Parts in C++17
Deprecating Vestigial Library Parts in C++17
Deprecating Vestigial Library Parts in C++17
Synopses for the C library
Synopses for the C library
Cleaning up allocator_traits
Cleaning up allocator_traits
Cleaning up allocator_traits
Allocators and swap
Reserve a New Library Namespace Future Standardization
Reserve a New Library Namespace Future Standardization
Reserve a New Library Namespace Future Standardization
Ordered By Default
Ordered By Default
Generalizing the Range-Based For Loop
Adding [nothrow-] swappable traits
Adding [nothrow-]swappable traits, revision 3
Iterator Facade Library Proposal for Ranges
Proposal of Bitfield Default Member Initializers
Proposal/Wording for Bit-field Default Member Initializer Syntax
Wording for [[fallthrough]] attribute
Wording for [[fallthrough]] attribute
Wording for [[nodiscard]] attribute
Wording for [[nodiscard]] attribute
Proposal for New memory order consume Definition
Proposal for New memory order consume Definition
Proposal for New memory order consume Definition
Proposal for New memory order consume Definition
Proposal for New memory order consume Definition
C++ virtual member function pointer comparison
Adding a Fundamental Type for Short Float
Adding a Fundamental Type for Short Float
`short float` and fixed-size floating point types
Where is Vectorization in C++‽
Where is Vectorization in C++‽
Static reflection (revision 4)
Static reflection (revision 4)
Static reflection
Static reflection
Static reflection
Static reflection
Static reflection
Modernizing using-declarations
Modernizing using-declarations
Pack expansions in using-declarations
A generic none_t literal type for Nullable types
Generic none() factories for Nullable types
Generic none() factories for Nullable types
Generic none() factories for Nullable types
Generic none() factories for Nullable types
Generic none() factories for Nullable types
Default Tuple-like access
Default Swap
Default Hash
A Proposal to Add Y Combinator to the Standard Library
A cloning pointer-class for C++
An indirect value-type for C++
A polymorphic value-type for C++
A polymorphic value-type for C++
A polymorphic value-type for C++
A polymorphic value-type for C++
Add Constexpr Modifiers to Functions in <algorithm> and <cstring> Headers
Add Constexpr Modifiers to Functions in <algorithm> and <cstring> Headers
Add Constexpr Modifiers to Functions in <algorithm> and <cstring> Headers
Add Constexpr Modifiers to Functions in <algorithm> and <utility> Headers
Considerations for the design of expressive portable SIMD vectors
Allow Seeding Random Number Engines With std::random_device
Discussion about std::thread and RAII
A joining thread
Ruminations on lambda captures
Copy-swap helper
Copy-swap Transaction
make_from_tuple: apply for construction
make_from_tuple: apply for construction
make_from_tuple: apply for construction
A light-weight, dynamic array
Allocator-aware library wrappers for dynamic allocation
Allocator-aware library wrappers for dynamic allocation
Allocator-aware library wrappers for dynamic allocation
Wording for [[maybe_unused]] attribute
Wording for [[maybe_unused]] attribute
Reexamining the Performance of Memory-Allocation Strategies
Data-Parallel Vector Types & Operations
Data-Parallel Vector Types & Operations
Data-Parallel Vector Types & Operations
Data-Parallel Vector Types & Operations
Data-Parallel Vector Types & Operations
Data-Parallel Vector Types & Operations
Data-Parallel Vector Types & Operations
Data-Parallel Vector Types & Operations
Data-Parallel Vector Types & Operations
Data-Parallel Vector Types & Operations
A Civil-Time Library
A Time-Zone Library
Proposed wording for structured bindings
Proposed wording for structured bindings
Proposed wording for structured bindings
Proposed wording for structured bindings
Adopt File System TS for C++17
Adopt File System TS for C++17
Relative Paths for Filesystem
Relative Paths for Filesystem
Adopt Library Fundamentals TS for C++17
Adopt Library Fundamentals V1 TS Components for C++17 (R1)
Proposed wording for default comparisons, revision 2
Proposed wording for default comparisons, revision 3
Proposed wording for default comparisons, revision 4
Allowing Anonymous Structs as Return Values
Class Namespace
Implicit Return Type
Why I want Concepts, and why I want them sooner rather than later
Mathematical Special Functions for C++17, v4
Mathematical Special Functions for C++17, v5
Weakening the iterator categories of some standard algorithms
A Proposal to Add Safe Integer Types to the Standard Library Technical Report
unique_function: a move-only std::function
SG5 Transactional Memory Meeting minutes 2015/11/02-2016/02/08
SG14 Games Dev/Low Latency/Financial Meeting Minutes 2015/10/14-2015/02/10
Extending the Transactional Memory Technical Specification to Support Commit Actions
A Concurrency ToolKit for Structured Deferral/Optimistic Speculation
Hazard Pointers: Safe Reclamation for Optimistic Concurrency
Hazard Pointers: Safe Reclamation for Optimistic Concurrency
Hazard Pointers: Safe Reclamation for Optimistic Concurrency
Hazard Pointers: Safe Reclamation for Optimistic Concurrency
Hazard Pointers: Safe Reclamation for Optimistic Concurrency
Hazard Pointers: Safe Reclamation for Optimistic Concurrency
Hazard Pointers: Safe Reclamation for Optimistic Concurrency
Towards Massive Parallelism(aka Heterogeneous Devices/Accelerators/GPGPU) support in C++
A Packaging System for C++
Khronos's OpenCL SYCL to support Heterogeneous Devices for C++
On the standardization of fundamental bit manipulation utilities
Wording for fundamental bit manipulation utilities
Wording for fundamental bit manipulation utilities
Wording for fundamental bit manipulation utilities
Wording for fundamental bit manipulation utilities
Wording for fundamental bit manipulation utilities
Wording for fundamental bit manipulation utilities
Wording for fundamental bit manipulation utilities
Wording for fundamental bit manipulation utilities
Wording for fundamental bit manipulation utilities
Wording for fundamental bit manipulation utilities
Return type deduction and SFINAE
Return type deduction and SFINAE
valueless_by_exception
Why I want Concepts, but why they should come later rather than sooner
Remove Future-Related Explicit Specializations for Void
Standard Library Support For Void
Text_view: A C++ concepts and range based character encoding and code point enumeration library
Text_view: A C++ concepts and range based character encoding and code point enumeration library
Text_view: A C++ concepts and range based character encoding and code point enumeration library
Hexadecimal float literals for C++
Hexadecimal float literals for C++
Contract Assert Support Merged Proposal
Criteria for Contract Support
Concepts in C++17
Input Devices For 2D Graphics
Input Devices For 2D Graphics
Wording improvements for initialization and thread ids (CWG 2046)
Wording improvements for initialization and thread ids (CWG 2046)
Wording improvements for initialization and thread ids (CWG 2046, 1784)
Wording improvements for initialization and thread ids (CWG 2046, 1784)
Unified Call Syntax Wording
Operator Dot Wording
Operator Dot Wording
Operator Dot Wording
Fixing a design mistake in the searchers interface in Library Fundamentals
Fixing a design mistake in the searchers interface in Library Fundamentals
Integrating std::string_view and std::string
Integrating std::string_view and std::string
Integrating std::string_view and std::string
C++ Static Reflection via template pack expansion
C++ Reflection Light
A byte type for the standard library.
A byte type for increased type safety
is_contiguous_layout
is_contiguous_layout
has_unique_object_representations - wording
fixed_string: a compile-time string
C++ Concurrent Queues
C++ Concurrent Queues
C++ Concurrent Queues
C++ Concurrent Queues
C++ Distributed Counters
C++ Distributed Counters
C++ Distributed Counters
C++ Distributed Counters
A Class for Status and Optional Value
A Class for Status and Optional Value
Core Language Working Group "tentatively ready" Issues for the February, 2016 (Jacksonville) Meeting
Core Language Working Group "tentatively ready" Issues for the February, 2016 (Jacksonville) Meeting
auto operator= considered dangerous
SG5 is NOT proposing Transactional Memory for C++17
Removing Restrictions on requires-Expressions
Removing Restrictions on requires-Expressions
Lifting Restrictions on requires-Expressions
A Proposal to Add 2D Graphics Rendering and Display to C++,
A Proposal to Add 2D Graphics Rendering and Display to C++,
A Proposal to Add 2D Graphics Rendering and Display to C++,
A Proposal to Add 2D Graphics Rendering and Display to C++,
A Proposal to Add 2D Graphics Rendering and Display to C++,
A Proposal to Add 2D Graphics Rendering and Display to C++,
A Proposal to Add 2D Graphics Rendering and Display to C++,
A Proposal to Add 2D Graphics Rendering and Display to C++
A Proposal to Add 2D Graphics Rendering and Display to C++
A Proposal to Add 2D Graphics Rendering and Display to C++
up-to expression
Allocator-aware regular expressions
Removing C dependencies from signal handler wording
Removing C dependencies from signal handler wording
Removing C dependencies from signal handler wording
Removing C dependencies from signal handler wording
std::direct_init<T> for plugging the metaprogramming constructor hole
Give 'std::string' a non-const '.data()' member function
Give 'std::string' a non-const '.data()' member function
Proposed modules changes from implementation and deployment experience
Proposed modules changes from implementation and deployment experience
Clump - A Vector-like Sequence Container with Embedded Storage
A Proposal to add Classes and Functions Required for Dynamic Library Load
A Proposal to add Classes and Functions Required for Dynamic Library Load
A Proposal to add Classes and Functions Required for Dynamic Library Load
A Proposal to add Classes and Functions Required for Dynamic Library Load
A Proposal to add Classes and Functions Required for Dynamic Library Load
A Proposal to add Attribute [[visible]]
const Inheritance
const Inheritance
volatile solutions
Read-Copy Update (RCU) for C++
Read-Copy Update (RCU) for C++
Initialize unspecified aggregate members with direct list initialization
Remove comma elision in variadic function declarations
Const-preserving overloads for the strtox family of functions
Standard and non-standard attributes
Standard and non-standard attributes
Standard and non-standard attributes
Unqualified enumerators in case labels
Using customization points to unify executors
A networking library extension to support co_await-based coroutines
Simple Contracts for C++
A polymorphic wrapper for all Callable objects
A polymorphic wrapper for all Callable objects
any_invocable
Forward declarations of nested classes
apply() for synchronized_value<T>
apply() for synchronized_value<T>
apply() for synchronized_value<T>
constexpr if: A slightly different syntax
constexpr if: A slightly different syntax
constexpr if: A slightly different syntax
Template deduction for nested classes
Adopt Selected Library Fundamentals V2 Components for C++17
Forward progress guarantees: Base definitions
Forward progress guarantees: Base definitions
Forward progress guarantees: Base definitions
A byte type definition
A byte type definition
A byte type definition
A byte type definition
Forward progress guarantees for the Parallelism TS v2
Forward progress guarantees for the Parallelism TS features
Wording for Unified Call Syntax
Wording for Unified Call Syntax (revision 1)
Deprecating Allocator Support in std::function
Removing Allocator Support in std::function (rev 1)
Extensions to C++ for Short Float Type
C++ Standard Library Issues Resolved Directly In Jacksonville
C++ Standard Library Issues Resolved Directly In Issaquah
If statement with initializer
Selection statements with initializer
Comma elision and comma deletion
Comma elision and comma deletion
Comma elision and comma deletion
Comma elision and comma deletion
Comma elision and comma deletion
Making Optional Greater Equal Again
Making Optional Greater Equal Again
Valueless Variants Considered Harmful
Partial class
Splitting node and array allocation in allocators
A Unified Vision for Manipulating Tuple-like Objects
Make Pointers to Members Callable
Make Pointers to Members Callable
Comparison operators in fold-expressions
Querying the alignment of an object
Lambdas in unevaluated context
Lambdas in unevaluated context
Lambdas in unevaluated context
Lambdas in unevaluated context
Wording for lambdas in unevaluated contexts
allocate_unique and allocator_delete
Directory Entry Caching for Filesystem
Directory Entry Caching for Filesystem
decay_unwrap and unwrap_reference
unwrap_ref_decay and unwrap_reference
Adding Emplace functions for promise<T>/future<T>
Adding Emplace functions for promise<T>/future<T>
Adding Emplace functions for promise<T>/future<T> (revision 2)
Thread Constructor Attributes
Thread Constructor Attributes
exception_list
A proposal to add a utility class to represent expected monad (Revision 2)
A proposal to add a utility class to represent expected object (Revision 3)
A proposal to add a utility class to represent expected object (Revision 4)
Utility class to represent expected object
std::expected
std::expected
std::expected
std::expected
std::expected
One Concept Definition Syntax
Propose to adopt make_array in C++17
Propose to adopt make_array into the IS
to_array from LFTS with updates
to_array from LFTS with updates
Structured binding: customization point issues
Product types access
Product types access
Product types access
Product types access
Designated Initialization
Designated Initialization Wording
Designated Initialization Wording
Designated Initialization Wording
Designated Initialization Wording
User-Defined Literals for size_t
User-Defined Literals for size_t
Literal Suffixes for ptrdiff_t and size_t
Literal Suffixes for ptrdiff_t and size_t
Literal Suffixes for ptrdiff_t and size_t
Literal Suffixes for ptrdiff_t and size_t
Motivation and Examples for Multidimensional Array
Relaxed Incomplete Multidimensional Array Type Declaration
Relaxed Incomplete Multidimensional Array Type Declaration
Relaxed Incomplete Multidimensional Array Type Declaration
Improving Parallel Algorithm Exception Handling
Immutable Persistent Containers
Context Tokens for Parallel Algorithms
Context Tokens for Parallel Algorithms
Better Names for Parallel Execution Policies in C++17
Better Names for Parallel Execution Policies in C++17
Delete operator= for polymorphic_allocator
C++ generic factories
C++ generic factories
C++ generic factories
C++ generic factories
polymorphic_allocator<void> as a vocabulary type
polymorphic_allocator<void> as a vocabulary type
polymorphic_allocator<void> as a vocabulary type
polymorphic_allocator<void> as a vocabulary type
polymorphic_allocator<> as a vocabulary type
polymorphic_allocator<> as a vocabulary type
polymorphic_allocator<> as a vocabulary type
Making std::underlying_type SFINAE-friendly
Making std::underlying_type SFINAE-friendly
Making std::underlying_type SFINAE-friendly
Making std::underlying_type SFINAE-friendly
parameter packs outside of templates
Timing barriers
Meta-programming High-Order Functions
Meta-programming High-Order Functions
Allowing any unsigned integral type as parameter type for literal operators
A <random> Nomenclature Tweak
A <random> Nomenclature Tweak
Simplifying simple uses of <random>
Simplifying simple uses of <random>
Validity testing issues
Assumptions about the size of datapar
Integrating datapar with parallel algorithms and executors
Integrating simd with parallel algorithms
Integrating simd with parallel algorithms
Smart References through Delegation: An Alternative to N4477's Operator Dot
Smart References through Delegation (2nd revision)
Unicode Encoding Conversions for the Standard Library
Unicode Friendly Encoding Conversions for the Standard Library
default == is >, default < is < so
Extending <chrono> to Calendars and Time Zones
Extending <code><chrono></code> to Calendars and Time Zones
Extending <chrono> to Calendars and Time Zones
Extending <code><chrono></code> to Calendars and Time Zones
Extending <code><chrono></code> to Calendars and Time Zones
Extending <chrono> to Calendars and Time Zones
Extending chrono to Calendars and Time Zones
Extending <chrono> to Calendars and Time Zones
Simplified partial function application
Simplified partial function application
Simplified partial function application
Simplified partial function application
Simplified partial function application
Simplified partial function application
reference_wrapper for incomplete types
reference_wrapper for incomplete types
'reference_wrapper' for incomplete types
'reference_wrapper' for incomplete types
Fixes for not_fn
Fixes for not_fn
SG5: Transactional Memory (TM) Meeting Minutes 2016/02/22-2016/05/23
SG14: Low Latency Meeting Minutes 2016/02/17-2015/05/25
Invoking Algorithms asynchronously
Invoking Algorithms asynchronously
Towards support for Heterogeneous Devices in C++ (Concurrency aspects)
Towards support for Heterogeneous Devices in C++ (Language aspects)
Report on Exception Handling Lite (Disappointment) from SG14
Report on SG14, a year later and future directions
Extending the Transactional Memory Technical Specification with an in_transaction Statemen
a C++ standard library class to qualify data accesses
2017-07 Toronto ISO WG21 C++ Standard Meeting information
Ranges TS Design Updates Omnibus
Ranges TS Design Updates Omnibus
Ranges TS Design Updates Omnibus
Ranges TS Design Updates Omnibus
Temporarily deprecate memory_order_consume
Temporarily discourage memory_order_consume
A type for utf-8 data
Proposal of File Literals
Stream parallelism patterns
[[exhaustive]] attribute for enums
A Single Generalization of std::invoke, std::apply, and std::visit
std::integral_constant with a Deduced Value Type
Why a joining thread from P0206 is a Bad Idea
A Contract Design
A Contract Design
Numeric Width
Numeric Width
Comments on P0119: Overload sets as function arguments
Core Language Working Group "tentatively ready" Issues for the June, 2016 (Oulu) meeting
Static reflection: Rationale, design and evolution
Static reflection: Rationale, design and evolution
Static reflection: Rationale, design and evolution
Inline Variables
Inline Variables
Memory Model Issues for Concurrent Data Structures
Memory Model Issues for Concurrent Data Structures
Permit conversions to arrays of unknown bound
Permit conversions to arrays of unknown bound
Permit conversions to arrays of unknown bound
Permit conversions to arrays of unknown bound
template keyword in unqualified-ids
A Proposal to Add Pointer Cast Functions with Move Semantics to the Standard Library
Introducing the term "templated entity"
Adapting string_view by filesystem paths
Making Variant Greater Equal
Hotel Parallelifornia: terminate() for Parallel Algorithms Exception Handling
C++ Concepts Active Issues List (Snapshot of Revision 4)
C++ Standard Library Priority 1 Issues Resolved Directly In Oulu
Core issue 1518: Explicit default constructors and copy-list-initialization
Networking TS & Threadpools
Wording for Order of Evaluation of Function Arguments
Extensions to the Allocator interface
Providing size feedback in the Allocator interface
Literal suffixes for basic_string_view
Literal suffixes for basic_string_view
Matching Types: 404 Syntax Not found
Wording for Networking TS changes from Kona
Intrusive Containers
Allocator-aware basic stringbuf
Allocator-aware basic stringbuf
Allocator-aware basic_stringbuf
Efficient Access to basic stringbuf's Buffer
Efficient Access to basic stringbuf's Buffer
Efficient Access to basic stringbuf's Buffer
Efficient Access to basic_stringbuf's Buffer
Efficient Access to basic_stringbuf’s Buffer
Efficient Access to basic_stringbuf’s Buffer
Efficient Access to basic_stringbuf’s Buffer
Allow lambda capture [=, this]
Allow lambda capture [=, this]
Allow lambda capture [=, this]
Separating Library Requirements and Preconditions
Benchmarking primitives
Updating Parallel Execution Policy Names in the Parallelism TS
Merging shared_ptr changes from Library Fundamentals to C++17
Merging shared_ptr changes from Library Fundamentals to C++17
Merging shared_ptr changes from Library Fundamentals to C++17
Constexpr for std::complex
Constexpr for std::complex
Operator Dot (R3)
Operator Dot (R3)
C++17 should refer to ISO/IEC 10646 2014 instead of 1994
C++17 should refer to ISO/IEC 10646 2014 instead of 1994 (R1)
Fail or succeed: there is no atomic lattice
Fail or succeed: there is no atomic lattice
Static class constructor
Out-of-Thin-Air Execution is Vacuous
Variable templates for Networking TS traits
Reconsidering literal operator templates for strings
Reconsidering literal operator templates for strings
String literals as non-type template parameters
Metaprogramming by design, not by accident
Constexpr for std::char_traits
Constexpr for std::char_traits
Familiar template syntax for generic lambdas
Familiar template syntax for generic lambdas
Familiar template syntax for generic lambdas
A Standard flat_map
A Standard flat_map
A Standard flat_map
A Standard flat_map
A Standard flatmap
A Standard flat_map
A Standard flatmap
A Standard flat_map
File system library on non-POSIX-like operating systems
File system library on non-POSIX-like operating systems
File system library on non-POSIX-like operating systems
Correcting Evaluation Order for C++
Implicit and Explicit Default Comparison Operators
Toward a resolution of US7 and US14: Integrating template deduction for class templates into the standard library
Toward a resolution of US7 and US14: Integrating template deduction for class templates into the standard library
Toward a resolution of US7 and US14: Integrating template deduction for class templates into the standard library
Toward a resolution of US7 and US14: Integrating template deduction for class templates into the standard library
Portable Interrupt Library
Resolving LWG Issues re common_type
Resolving LWG Issues re common_type
An Extensible Approach to Obtaining Selected Operators
An Extensible Approach to Obtaining Selected Operators
Numeric Traits for the Next Standard Library
Numeric Traits for the Standard Library
Toward a <random> Technical Specification
Make memory_order a scoped enumeration
Floating Point Atomic View
Floating Point Atomic View
Ranges: Merging Writable and MoveWritable
Ranges: Merging Writable and MoveWritable
A Unified Executors Proposal for C++
A Unified Executors Proposal for C++
A Unified Executors Proposal for C++
A Unified Executors Proposal for C++
A Unified Executors Proposal for C++
A Unified Executors Proposal for C++
A Unified Executors Proposal for C++
A Unified Executors Proposal for C++
A Unified Executors Proposal for C++
A Unified Executors Proposal for C++
Unifying suspend-by-call and suspend-by-return
SG14: Low Latency Meeting Minutes 2016/09/21-2016/10/13
SG5: Transactional Memory (TM) Meeting Minutes 2016/07/18-2016/10/10
Introduction of std::colony to the standard library
Introduction of std::colony to the standard library
Introduction of std::colony to the standard library
Introduction of std::colony to the standard library
Introduction of std::colony to the standard library
A strstream replacement using span<charT> as
A strstream replacement using span<charT> as
A strstream replacement using span<charT> as buffer
Future-Proofing Parallel Algorithms Exception Handling
Binary transform_reduce(): The Missing Overload
Unifying <numeric> Parallel Algorithms
Wording for a Minimal mdspan
String Prefix and Suffix Checking
String Prefix and Suffix Checking
String Prefix and Suffix Checking
Checking for Existence of an Element in Associative Containers
Checking for Existence of an Element in Associative Containers
Checking for Existence of an Element in Associative Containers
C++ Extensions for Ranges, Speculative Combined Proposal Document
Flat containers wording
Proposed RCU C++ API
Proposed RCU C++ API
Proposed RCU C++ API
Marking memory order consume Dependency Chains
Marking memory order consume Dependency Chains
endian, Just endian
endian, Just endian
Revisiting the meaning of "foo(ConceptName,ConceptName)"
Revisiting the meaning of "foo(ConceptName,ConceptName)"
Revisiting the meaning of "foo(ConceptName,ConceptName)"
Procedural Function Interfaces
Layout-compatibility and Pointer-interconvertibility Traits
Layout-compatibility and Pointer-interconvertibility Traits
Layout-compatibility and Pointer-interconvertibility Traits
Layout-compatibility and Pointer-interconvertibility Traits
Layout-compatibility and Pointer-interconvertibility Traits
Iterator Concerns for Parallel Algorithms
Iterator Concerns for Parallel Algorithms
Iterator Concerns for Parallel Algorithms
A Proposal to Add an Intrusive Smart Pointer to the C++ Standard Library
An Intrusive Smart Pointer
Sample in place
Single argument std::inserter
Move 'std::monostate' to <utility>
+ for std::vector concatenation
Comparison in C++: Basic Facilities
LWG 2511: guaranteed copy elision for piecewise construction
LWG 2511: guaranteed copy elision for piecewise construction
Bit-casting object representations
Bit-casting object representations
Bit-casting object representations
std::monostate_function<>
Template argument deduction for non-terminal function parameter packs
Attributes for Likely and Unlikely Branches
Attributes for Likely and Unlikely Branches
Attributes for Likely and Unlikely Branches
Proposed wording for likely and unlikely attributes
Proposed wording for likely and unlikely attributes
Explicit type checking with structured bindings
Structured bindings with explicit types
Bravely Default
char8_t: A type for UTF-8 characters and strings
char8_t: A type for UTF-8 characters and strings
char8_t: A type for UTF-8 characters and strings
char8_t: A type for UTF-8 characters and strings (Revision 3)
char8_t: A type for UTF-8 characters and strings
char8_t: A type for UTF-8 characters and strings
char8_t: A type for UTF-8 characters and strings (Revision 6)
Extending Memory Management Tools, And a Bit More
static_vector
Enhancing Thread Constructor Attributes
Enhancing Thread Constructor Attributes
Amended rules for Partial Ordering of function templates
for_each_iter algorithm proposal
Fixing operator>> (basic_istream&, CharT*) (LWG 2499)
Fixing operator>>(basic_istream&, CharT*) (LWG 2499)
WG21 Working paper: NB Comments, ISO/IEC CD 14882
WG21 Working paper: Late Comments on CD 14882
Core language changes addressing National Body comments for CD C++17
Proposed Resolution of C++17 National Body Comments for Filesystem
Proposed Resolution of C++17 National Body Comments for Filesystem
Proposed Resolution of C++17 National Body Comments for Filesystem
Atomic maximum/minimum
contiguous_container proposal
Concurrency Safety in C++ Data Structures
Fixes to shared_ptr support for arrays
Resolved Module TS (N4610) Issues
C++ Module TS Issues List
C++ Module TS Issues List
C++ Module TS Issues List
C++ Module TS Issues List
Throwing out of a parallel algorithm terminates--but how?
Correcting library usage of "literal type"
Revisiting in-place tag types for any/optional/variant
Wording for GB 50
use string_view for library function parameters instead of const string & / const char *
use string_view for library function parameters instead of const string & / const char *
use string_view for library function parameters instead of const string & / const char *
Core Issue 1343: Sequencing of non-class initialization
Wording for GB 58
Updating "Restrictions on exception handling"
Disallowing references, incomplete types, arrays, and empty variants
Deduction guide for std::array
Deduction guide for std::array
Class Template Argument Deduction Assorted NB resolution and issues
Poisoning the Hash
Enhancing std::atomic_flag for waiting
Enhancing std::atomic_flag for waiting
Efficient waiting for concurrent programs
Efficient concurrent waiting for C++20
Efficient concurrent waiting for C++20
Consistent comparison
Consistent comparison
Consistent comparison
Consistent comparison
Clarify That shared_future's Copy Operations have Wide Contracts
Make future_error Constructible
Allowing copies as arguments to function objects given to parallel algorithms in response to CH11
Allowing copies as arguments to function objects given to parallel algorithms in response to CH11
Core Language Working Group "ready" Issues for the November, 2016 (Issaquah) meeting
Core Language Working Group "tentatively ready" Issues for the November, 2016 (Issaquah) meeting
Proposed Resolution for CA 14 (shared_ptr use_count/unique)
DR: Matching of template template-arguments excludes compatible templates
Wording for CH 10: Complexity of parallel algorithms
Wording for CH 10: Complexity of parallel algorithms
Implicitly move from rvalue references in return statements
Implicitly move from rvalue references in return statements
The Curious Case of Padding Bits, Featuring Atomic Compare-and-Exchange
The Curious Case of Padding Bits, Featuring Atomic Compare-and-Exchange
The Curious Case of Padding Bits, Featuring Atomic Compare-and-Exchange
The Curious Case of Padding Bits, Featuring Atomic Compare-and-Exchange
Wording changes for proposed Modules TS extensions
On std::launder()
constexpr for <cmath> and <cstdlib>
constexpr for <cmath> and <cstdlib>
constexpr for <cmath> and <cstdlib>
constexpr for <cmath> and <cstdlib>
constexpr for <cmath> and <cstdlib>
constexpr for <cmath> and <cstdlib>
call/cc (call-with-current-continuation): A low-level API for stackful context switching
call/cc (call-with-current-continuation): A low-level API for stackful context switching
call/cc (call-with-current-continuation): A low-level API for stackful context switching
call/cc (call-with-current-continuation): A low-level API for stackful context switching
Generalized Unpacking and Parameter Pack Slicing
Implicit Return Type and Allowing Anonymous Types as Return Values
Allow Attributes on Template Explicit Instantiations
A Qualified Replacement for #pragma once
Wide Integer Class
A Proposal to add wide_int Template Class
A Proposal to add wide_int Template Class
A Proposal to add wide_int Template Class
A Proposal to add wide_int Template Class
A Proposal to Add split/join of string/string_view to the Standard Library
A Proposal to Add split/join of string/string_view to the Standard Library
Post-Increment on Input and Output Iterators
Ranges TS: Post-Increment on Input and Output Iterators
Support for contract based programming in C++
Support for contract based programming in C++
Support for contract based programming in C++
Support for contract based programming in C++
Support for contract based programming in C++
Support for contract based programming in C++
Saturation arithmetic
User Injection of Filesystems
Supporting offsetof for Stable-layout Classes
Span - foundation for the future
Span - foundation for the future
Span - foundation for the future
Assorted Object Concept Fixes
Ranges TS: Assorted Object Concept Fixes
Ranges TS: Assorted Object Concept Fixes
common_type and duration
common_type and duration
Adjuncts to std::hash
Adjuncts to std::hash
Adjuncts to std::hash
Adjuncts to std::hash
Adjuncts to std::hash
Adjuncts to std::hash
Transformation Trait uncvref
Transformation Trait uncvref
Transformation Trait remove_cvref
Thou Shalt Not Specialize std Function Templates!
Thou Shalt Not Specialize std Function Templates!
Thou Shalt Not Specialize std Function Templates!
Thou Shalt Not Specialize std Function Templates!
enable_if vs. requires
Bit Operations
Bit Operations
Bit operations
Bit operations
Bit operations
Composition of Arithmetic Types
Composition of Arithmetic Types
string_view for source_location
Integral power-of-2 operations
Integral power-of-2 operations
Integral power-of-2 operations
Integral power-of-2 operations
Concepts: The Future of Generic Programming
Resolving atomic<T> named base class inconsistencies
Resolving atomic<T> named base class inconsistencies
Operating principles for evolving C++
Class template deduction guides for "diamond operators"
RAII Interface for Deferred Reclamation
RAII Interface for Deferred Reclamation
RAII Interface for Deferred Reclamation
An RAII Interface for Deferred Reclamation
An RAII Interface for Deferred Reclamation
Initialization List Symmetry
Vector Front Operations
Wording for three-way comparisons
Prefix for operator as a pack generator and postfix operator[] for pack indexing
Proposed Wording for Concurrent Data Structures: Hazard Pointer and Read-Copy-Update (RCU)
Proposed Wording for Concurrent Data Structures: Hazard Pointer and Read-Copy-Update (RCU)
Proposed Wording for Concurrent Data Structures: Hazard Pointer and Read-Copy-Update (RCU)
Proposed Wording for Concurrent Data Structures: Hazard Pointer and Read-Copy-Update (RCU)
Proposed Wording for Concurrent Data Structures: Hazard Pointer and Read-Copy-Update (RCU)
Proposed Wording for Concurrent Data Structures: Hazard Pointer and Read­Copy­Update (RCU)
Asynchronous managed pointer for Heterogeneous computing
Asynchronous managed pointer for Heterogeneous computing
Towards Better Embedded programming support for C++ and an update on the status of SG14, two years later
SG5: Transactional Memory (TM) Meeting Minutes 2016/07/18-2016/10/10
SG14: Low Latency Meeting Minutes 2016/12/14-2017/02/01
Type Requirements for <numeric> Algorithms
Type Requirements for <numeric> Algorithms
Type Requirements for <numeric> Algorithms
bit_sizeof and bit_offsetof
bit_sizeof and bit_offsetof
Static reflection of bit fields
Abbreviated Lambdas for Fun and Profit
Abbreviated Lambdas for Fun and Profit
Abbreviated Lambdas for Fun and Profit
Algorithm Complexity Constraints and Parallel Overloads
Algorithm Complexity Constraints and Parallel Overloads
Core Language Working Group "ready" Issues for the February, 2016 (Kona) meeting
Core Language Working Group "ready" Issues for the February, 2016 (Kona) meeting
Core Language Working Group "ready" Issues for the February, 2016 (Kona) meeting
Core Language Working Group "tentatively ready" Issues for the February, 2016 (Kona) meeting
Core Language Working Group "tentatively ready" Issues for the February, 2016 (Kona) meeting
Keep that Temporary!
Kept-value statement for guard objects
Static Reflection in a Nutshell
Static Reflection in a Nutshell
Constexpr for <experimental/ranges/iterator>
Constexpr for <experimental/ranges/iterator>
Standard Library Modules
Standard Library Modules
Modules: Contexts of template instantiations and name lookup
std::byte is the correct name
Module Interface and Preamble
Safe integral comparisons
Safe integral comparisons
Concepts TS revisited
Simplifying implicit lambda capture
Simplifying implicit lambda capture
Tuple-based for loops
A design static reflection
Utility functions to implement uses-allocator construction
Utility functions to implement uses-allocator construction
Utility functions to implement uses-allocator construction
Utility functions to implement uses-allocator construction
Utility functions to implement uses-allocator construction
To boldly suggest an overall plan for C++20
To boldly suggest an overall plan for C++23
What to do with buffers that are not arrays, and undefined behavior thereof?
Implicit creation of objects for low-level object manipulation
Implicit creation of objects for low-level object manipulation
Implicit creation of objects for low-level object manipulation
Implicit creation of objects for low-level object manipulation
Relative comparisons and std::less<T*>
The "constexpr" Operator
std::is_constant_evaluated()
std::is_constant_evaluated
std::constexpr_trace and std::constexpr_assert
std::constexpr_vector<T>
Reflect Through Values Instead of Types
US140: noxecept for hash functions
US140: noxecept for hash functions
applying [[nodiscard]] for C++17
[[nodiscard]] in the Library
Establishing a direction for SIMD-enabled functions
variant and optional should propagate copy/move triviality
variant and optional should propagate copy/move triviality
variant and optional should propagate copy/move triviality
variant and optional should propagate copy/move triviality
variant and optional should propagate copy/move triviality
safe memcpy: A simpler implementation primitive for seqlock and friends
Resolving GB 55, US 84, US 85, US 86
Concepts Are Ready
Inline Variables for the Standard Library
A sane variant converting constructor (LEWG 227)
A sane variant converting constructor
A sane variant converting constructor
A sane variant converting constructor
Attributes for Structured Bindings
Attributes for Structured Bindings
C++ Standard Library "Review" Issues Resolved in Kona
More Better Operators
NB comment CH 2: volatile
NB comment GB15: Resolution of Core Issue 2011
Range-based for statements with initializer
Range-based for statements with initializer
Renaming for structured bindings
de-pessimize legacy <numeric> algorithms with std::move
Deprecating <codecvt>
Reviewing Deprecated Facilities of C++17 for C++20
Reviewing Deprecated Facilities of C++17 for C++20
Reviewing Deprecated Facilities of C++17 for C++20
Reviewing Deprecated Facilities of C++17 for C++20
Reviewing Deprecated Facilities of C++17 for C++20
Drafting for class template argument deduction issues
Ready Ranges TS Issues
Additional Core Language Working Group "ready" and "tentatively ready" Issues for the February, 2017 (Kona) meeting
Final C++17 Parallel Algorithms Fixes
Default constructible stateless lambdas
Default constructible stateless lambdas
Default constructible and assignable stateless lambdas
C++ Standard Library Issues Resolved Directly In Kona
Attribute to mark unreachable code
Attribute to mark unreachable code
Function to mark unreachable code
Module interface vs. imiplementation
To boldly suggest a pub crawl for C++ Toronto
Math Constants
Math Constants
Math Constants
Math Constants
Math Constants
Math Constants
Math Constants
Math Constants
Proposal of [[uninitialized]] attribute
Exploring the design space of metaprogramming and reflection
Down with `typename`!
Down with `typename`!
Down with typename!
Down with typename!
Add c_array method to std::array
Changes between C++14 and C++17
Changes between C++14 and C++17
Changes between C++14 and C++17
Changes between C++14 and C++17
Capture *this with initialize
Crochemore-Perrin search algorithm for std::search
Changing attack vector of the constexpr_vector
User-defined exception information and diagnostic information in exception objects
Resolving Core Issue #1331 (const mismatch with defaulted copy constructor)
Resolving Core Issue #1331 (const mismatch with defaulted copy constructor)
Resolving Core Issue #1331 (const mismatch with defaulted copy constructor)
Structural Support for C++ Concurrency
Structural Support for C++ Concurrency
The Concurrent Invocation Library
Omnibus paper:Toronto 2017 meeting
Forward without forward
Forward without forward
Text Formatting
Text Formatting
Text Formatting
Text Formatting
Text Formatting
Text Formatting
Text Formatting
Text Formatting
Improving the Return Value of Erase-Like Algorithms
Improving the Return Value of Erase-Like Algorithms I: list/forward list
Floating point value access for std::ratio
Floating point value access for std::ratio
Extending Tuple-like algorithms to Product-Typ
Other Product-Type algorithms
C++ Monadic interface
C++ Monadic interface
C++ Monadic interface
Switch the Ranges TS to Use Variable Concepts
Switch the Ranges TS to Use Variable Concepts
Concurrent associative data structure with unsynchronized view
Concurrent associative data structure with unsynchronized view
Concurrent associative data structure with unsynchronized view
Concurrent associative data structure with unsynchronized view
pointer_traits utility to convert to raw pointer
Utility to convert a pointer to a raw pointer
Utility to convert a pointer to a raw pointer
Explicit struct
visit<R>: Explicit Return Type for visit
visit<R>: Explicit Return Type for visit
Reducing <ratio>
Deprecate Certain Declarations in the Global Namespace
Deprecate Certain Declarations in the Global Namespace
Deprecate Certain Declarations in the Global Namespace
Proposal for adding alias declarations to concepts
Proposal for adding alias declarations to concepts
Adding status() to std::future
A Cooperatively Interruptible Joining Thread
A Cooperatively Interruptible Joining Thread, Rev 2
A Cooperatively Interruptible Joining Thread
A Cooperatively Interruptible Joining Thread
A Cooperatively Interruptible Joining Thread
A Cooperatively Interruptible Joining Thread, Rev 6
Interrupt Tokens and a Joining Thread, Rev 7
Stop Tokens and a Joining Thread
Stop Token and Joining Thread
slot_map Container in C++
Wording for Ranges TS Issue 345 / US-2: Update ranged-for-loop wording
Ranges TS "Ready" Issues for the July 2017 (Toronto) meeting
Coroutines TS Issues
Coroutines TS Issues
C++ Coroutine TS Issues
C++ Coroutine TS Issues
C++ Coroutine TS Issues
C++ Coroutine TS Issues
C++ Coroutine TS Issues
C++ Coroutine TS Issues
C++ Coroutine TS Issues
Allowing Class Template Specializations in Unrelated Namespaces
Allowing Class Template Specializations in Associated Namespaces (revision 1)
C++ Latches and Barriers
Revised Latches and Barriers for C++20
Revised Latches and Barriers for C++20
The future of std::future extensions
Revising the C++ memory model
Revising the C++ memory model
Revising the C++ memory model
Revising the C++ memory model
Revising the C++ memory model
Revising the C++ memory model
Why We Should Standardize 2D Graphics for C++
Static reflection of functions
Static reflection of functions
Static reflection of functions
Function reflection
Function reflection
Parametric Functions
Parametric Functions
Self-explanatory Function Arguments
Implicit Evaluation of "auto" Variables
Merge Concurrency TS atomic pointers into C++20 working draft
Extending make_shared to Support Arrays
Extending make_shared to Support Arrays
Numeric Traits for Type Composition
Towards a Good Future
Business Requrements for Modules
Forward progress vs. futures and continuations
SG1 efficiency
Precise Semantics for Assertions
Repairing elementary string conversions
Repairing elementary string conversions
Default member initializers for bit-fields
Default member initializers for bit-fields
C++ Stability, Velocity, and Deployment Plans
C++ Stability, Velocity, and Deployment Plans
C++ Stability, Velocity, and Deployment Plans
SG5: Transactional Memory (TM) Meeting Minutes 2017/01/30-2017/06/05
SG14: Low Latency Meeting Minutes 2017/03/09-2017/06/14
Data Movement in C++
A Proposal to Simplify the Unified Executors Design
A Word about Modules
Tearable Atomics
Tearable Atomics
Integrating Concepts: "Open" items for consideration
Access Specifiers and Specializations
Access Checking on Specializations
Function declarations using concepts
Alternative concepts
Remove abbreviated functions and template-introduction syntax from the Concepts TS
Remove abbreviated functions and template-introduction syntax from the Concepts TS
Clarifying the status of feature test macros
C++ Standard Library Issues to be moved in Toronto
C++ Standard Library Issues Resolved Directly In Toronto
Alternatives to operator dot
Back to the std2::future
Back to the std2::future
Back to the std2::future Part II
Language support for Constructor Template Argument Deduction
Language support for Constructor Template Argument Deduction
Networking TS Issues
Fixing const-qualified pointers to members
Fixing const-qualified pointers to members
Implicit and Explicit conversions
Efficient headers for modules (or not)
Metaclasses
Metaclasses: Generative C++
Metaclasses: Generative C++
Metaclasses: Generative C++
Metaclasses: Generative C++
Zero-overhead deterministic exceptions: Throwing values
Zero-overhead deterministic exceptions: Throwing values
Zero-overhead deterministic exceptions: Throwing values
Zero-overhead deterministic exceptions: Throwing values
Core Language Working Group "ready" Issues for the July, 2017 (Toronto) meeting
Core Language Working Group "ready" Issues for the July, 2017 (Toronto) meeting
Core Language Working Group "tentatively ready" Issues for the July, 2017 (Toronto) meeting
Implementing language support for compile-time programming
Identifying Module Source Code
Identifying Module Source
Identically Named Namespaces and non-Exported Symbols
Exporting Using Directives
Unified concept definition syntax
Semantic constraint matching for concepts
Semantic constraint matching for concepts
Revising atomic_shared_ptr for C++20
Revising atomic_shared_ptr for C++20
Exporting Using Declarations
Controlling destruction in delete expressions
Efficient sized delete for variable sized classes
Efficient sized delete for variable sized classes
Efficient sized delete for variable sized classes
Response to "Clarifying the status of feature test macros"
Merge the Concepts TS Working Draft into the C++20 working draft
Remove the requirement for constrained-type-specifiers to be deduced to the same type from the Concepts TS
Does the Concepts TS Improve on C++17?
Core Issue 1299: Temporary objects vs temporary expressions
Wording for Networking PDTS ballot comment 005
Proposed wording for Networking TS NB comment GB 9
Options for addressing requires-clause syntax ambiguities
Options for addressing requires-clause syntax ambiguities
Module Interface Imports
Class Types in Non-Type Template Parameters
Class Types in Non-Type Template Parameters
Class Types in Non-Type Template Parameters
Wording Paper, C++ extensions for Concepts
Interaction of memory_order_consume with release sequences
Interaction of memory_order_consume with release sequences
Nameless parameters and unutterable specializations
Nameless parameters and unutterable specializations
Execution Context of Execution Agents
I Stream, You Stream, We All Stream for istream_iterator
I Stream, You Stream, We All Stream for istream_iterator
I Stream, You Stream, We All Stream for istream_iterator
Some improvements to class template argument deduction integration into the standard library
Ranges TS "Immediate" Issues from the July 2017 (Toronto) meeting
Wording for Networking PDTS ballot comment resolutions
Concepts in-place syntax
Concepts in-place syntax
Wording for Networking PDTS ballot comment 011 (US-10)
Wording for Networking PDTS ballot comments 026 (GB-15) and 027 (GB-16)
Wording for Networking PDTS ballot comment 026 (GB-15), but not 027 (GB-16)
Wording for Networking PDTS ballot comments on reentrancy
Namespace Pervasiveness & Modules
Consume
Consume
std::vector Destruction Order
Manipulators for C++ Synchronized Buffered Ostream
Manipulators for C++ Synchronized Buffered Ostream
Manipulators for C++ Synchronized Buffered Ostream
<version>
<version>
<version>
Lambda syntax should be more liberal in what it accepts
regex_iterator should be iterable
Implicit conversion traits and utility functions
Implicit conversion traits and utility functions
fpos Requirements
fpos requirements
Executors Design Document
Executors Design Document
Executors Design Document
Concerns about expected<T, E> from the Boost.Outcome peer review
Fixing small-ish functionality gaps in constraints
Fixing small-ish functionality gaps in constraints
Expunge POD
Deprecate POD
Library Support for the Spaceship (Comparison) Operaton
Library Support for the Spaceship (Comparison) Operator
Add shift to <algorithm>
Add shift to <algorithm>
Add shift to <algorithm>
A Proposal to Specify Behavior in Case of Exception Allocation Failure
std::function move operations should be noexcept
std::function move constructor should be noexcept
Execution-Agent Local Storage
Execution Agent Local Storage
Towards meaningful fancy pointers
Module-decl location
module partitions
Rebase the Concurrency TS onto C++17 Standard
Rebase the Parallelism TS onto the C++17 Standard
Treating Unnecessary decay
Treating Unnecessary decay
Module Names
Proposing operator try() (with added native C++ macro functions!)
Allow pack expansion in lambda init-capture
Allow pack expansion in lambda init-capture
Allow pack expansion in lambda init-capture
A Modern C++ Signature for main
A Case for Simplifying/Improving Natural Syntax Concepts
Constraining Concepts Overload Sets
Constraining Concepts Overload Sets
Continuations without overcomplicating the future
Standard containers and constexpr
Standard containers and constexpr
Standard containers and constexpr
More constexpr containers
More constexpr containers
More constexpr containers
More constexpr containers
Runtime-sized arrays and a C++ wrapper
SuccessOrFailure, ValuedOrError and ValuedOrNone types
ValuedOrError and ValueOrNone types
Proclaimed Ownership
Standard Library Specification in a Concepts and Contracts World
Standard Library Specification in a Concepts and Contracts World
Standard Library Specification in a Concepts and Contracts World
Standard Library Specification in a Concepts and Contracts World
Range Adaptors and Utilities
Range Adaptors and Utilities
Range Adaptors and Utilities
Range Adaptors and Utilities
Effect of operator<=> on the C++ Standard Library
Effect of operator<=> on the C++ Standard Library
Effect of operator<=> on the C++ Standard Library
Concepts are Adjectives, not Nouns
function_ref: a non-owning reference to a Callable
function_ref: a non-owning reference to a Callable
function_ref: a non-owning reference to a Callable
function_ref: a non-owning reference to a Callable
function_ref: a non-owning reference to a Callable
SG5: Transactional Memory (TM) Meeting Minutes 2017/06/19-2017/10/09
SG14: Low Latency Meeting Minutes 2017/08/09-2017/10/11
From Vulkan with love: a plea to reconsider the Module Keyword to be contextual
Supporting Heterogeneous & Distributed Computing Through Affinity
Supporting Heterogeneous & Distributed Computing Through Affinity
Supporting Heterogeneous & Distributed Computing Through Affinity
Supporting Heterogeneous & Distributed Computing Through Affinity
Exception Handling in Parallel STL Algorithms
Handling Concurrent Exceptions with Executors
Handling Concurrent Exceptions with Executors
Monadic operations for std::optional
Monadic operations for std::optional
Monadic operations for std::optional
Monadic operations for std::optional
Programming vulnerabilities for C++ (part of WG23 N0746)
Vulnerability descriptions for the programming language C++
The Concepts TS improves upon C++
Extensions for Disambiguation Tags
Applying Concepts to the Standard Library
Endian Library Request for Comments
Impact of the Modules TS on the C++ tools ecosystem
Comparing containers
Comparing Containers
Comparing Containers
Deprecate Implicit Capture of thist
Deprecate implicit capture of this via [=]
Deprecate implicit capture of this via [=]
An Adjective Syntax for Concepts
Ranges Naming
Comparing Unordered Containers
constexpr in Practice
Well-behaved interpolation for numbers and pointers
Well-behaved interpolation for numbers and pointers
Well-behaved interpolation for numbers and pointers
Well-behaved interpolation for numbers and pointers
copy-list-initialization is inherently un-=
construct() shall Return the Replaced Address
construct() shall Return the Replaced Address
hash_combine() Again
hash_combine() Again
C++ Standard Library Issues to be moved in Albuquerque
No More Nested Namespaces in Library Design
Core Language Working Group "ready" Issues for the November, 2017 (Albuquerque) meeting
Core Language Working Group "tentatively ready" Issues for the November, 2017 (Albuquerque) meeting
Core Language Working Group "tentatively ready" Issues for the November, 2017 (Albuquerque) meeting
Formally Supporting Feature Macros
Feedback on P0214R5
Feedback on P0214r6
Feedback on P0214
Feedback on P0214
Feedback on P0214
Teaching Concepts TS Online
C++ Modules Are a Tooling Opportunity
Summary of SG14 discussion on <system_error>: towards exception-less error handling
Summary of SG14 discussion on <system_error>
A friendlier tuple get
A friendlier tuple get
SFINAE-friendly std::bind
General-Purpose Constant Value Type
Elastic Integers
Elastic Integers
Freestanding proposal
Freestanding Proposal
Freestanding Proposal
Freestanding Proposal
Freestanding Proposal
Using Concepts and requires in the C++ Standard Library
Keep alias syntax extendable
Module TS Does Not Support Intended Use Case
Lifting overload sets into objects
Adopt SD-6 feature macros into the C++20 working draft
Introduce Parallelism to the Ranges TS
Introduce Parallelism to the Ranges TS
Ruminations on modular macros
A conditional transform algorithm for C++
Recursive Lambdas
Lamguage support for empty objects
Language support for empty objects
Language support for empty objects
Modules at scale
Unknown Exports by Example
fixed_capacity_vector
fixed_capacity_vector
static_vector
static_vector
Type functions and beyond
Common Subset of C++03 and C++17: Binders
ADL and Function Templates that are not Visible
Deducing this
Deducing this
Deducing this
Conditionally Trivial Special Member Functions
Conditionally Trivial Special Member Functions
Conditionally Trivial Special Member Functions
auto(x): DECAY_COPY in the language
auto(x): decay-copy in the language
simd<T> is neither a product type nor a container type
Restrict Access Property for mdspan and span
Wording for "functionality gaps in constraints"
Constexpr iterator requirements
Core Issue 1581: When are constexpr member functions defined?
Atomic Access Property for span and mdspan
Atomic Access Property for mdspan
Fixing the partial_order comparison algorithm
Fixing the partial_order comparison algorithm
C++ Standard Library Issues Resolved Directly In Albuquerque
Response to “Fibers under the magnifying glass”
'Module Interface' is Misleading
Selected RCU Litmus Tests
Selected RCU Litmus Tests
Selected RCU Litmus Tests
A proposal for a type trait to detect narrowing conversions
Discussion Summary: Applying Concepts to the Standard Library
A plea for a consistent, terse and intuitive declaration syntax
A plea for a consistent, terse and intuitive declaration syntax
Syntax to anonymously refer to the current declaration contexts
WG21 2017-11 Albuquerque Record of Discussion
fibers without scheduler
fiber_context - fibers without scheduler
fiber_handle - fibers without scheduler
fiber_context - fibers without scheduler
fiber_context - fibers without scheduler
A proposal for modular macros
Subobjects copy elision
Constexpr for swap and swap related functions
Numbers interaction
Numbers interaction
Numbers interaction
A Proposal to add stack trace library
A Proposal to add stack trace library
A Proposal to add stack trace library
A Proposal to add stacktrace library
A Proposal to add stacktrace library
A Proposal to add stacktrace library
User-defined Literals for std::filesystem::path
Fixing Atomic Initialization
Fixing Atomic Initialization
Extending the noexcept Policy
The assume aligned attribute
The identity metafunction
The identity metafunction
C++ Standard Library Issues to be moved in Jacksonville
Ultimate copy elision
Ultimate copy elision
Let strong_order Truly Be a Customization Point!
Everyone Deserves a Little Order
Make strong_order a Customization Point!
explicit(bool)
explicit(bool)
explicit(bool)
Chaining Comparisons
Chaining Comparisons
`realloc()` for C++
realloc() for C++
Renaming cell<> to latest<>
Merging the Ranges TS
Merging the Ranges TS
The One Ranges Proposal
The One Ranges Proposal
The One Ranges Proposal
Supporting offsetof for All Classes
Standard Library Concepts
Standard Library Concepts
Standard Library Concepts
Standard Library Concepts
LWG 3016 is Not a Defect
LWG 3016 is Not a Defect
An Ontology for Properties of mdspan
Size feedback in operator new
Size feedback in operator new
Size feedback in operator new
Size feedback in operator new
Size feedback in operator new
Move-only iterators
Define basic_string_view(nullptr) and basic_string(nullptr)
Define basic_string_view(nullptr)
Define basic_string_view(nullptr)
A strawman Future API
Symmetry for spaceship
Symmetry for spaceship
Improvement suggestions for the Modules TS
Improvement suggestions for the Modules TS
Signed Integers are Two’s Complement
Signed Integers are Two’s Complement
Signed Integers are Two’s Complement
Signed Integers are Two’s Complement
Signed Integers are Two’s Complement
Offsetof for Pointers to Members
Module TS Supports Legacy Integration
Rebase the Coroutines TS onto the C++17 Standard
Rebase the Coroutines TS onto the C++17 Standard
Merge Coroutines TS into C++20 working draft
Merge Coroutines TS into C++20 working draft
Merge Coroutines TS into C++20 working draft
Merge Coroutines TS into C++20 working draft
Merge Coroutines TS into C++20 working draft
Merge Coroutines TS into C++20 working draft
Add symmetric coroutine control transfer
Add symmetric coroutine control transfer
Add parameter preview to coroutine promise constructor
Add parameter preview to coroutine promise constructor
Concept-constrained auto
Naming implementation-defined simd_abi tag types
Making operator?: overloadable
Making operator?: overloadable
Making operator?: overloadable
More simd<> Operations
More simd<> Operations
More simd<> Operations
Heterogeneous lookup for unordered containers
Heterogeneous lookup for unordered containers
Heterogeneous lookup for unordered containers
Heterogeneous lookup for unordered containers
Precalculated hash values in lookup
Precalculated hash values in lookup
Precalculated hash values in lookup
Standard Library Compatibility Promises
Standard Library Compatibility
LEWG wishlist for EWG
Modules: Dependent ADL
Modules:Dependent ADL
Modules: Context-Sensitive Keyword
Modules:Context-Sensitive Keyword
Modules: Unqualified Using Declarations
Towards A (Lazy) Forwarding Mechanism for C++
Towards A (Lazy) Forwarding Mechanism for C++
Towards A (Lazy) Forwarding Mechanism for C++
Mitigating Speculation Attacks in C++
Checking for abstract class types
Checking for abstract class types
Checking for abstract class types
Semifying Awaitables
Structured bindings with polymorphic lambas
Tightening the constraints on std::function
Tightening the constraints on std::function
Runtime type introspection with std::exception ptr
Runtime type introspection with std::exception_ptr
A Modest Proposal: Fixing ADL
Eradicating unnecessarily explicit default constructors from the standard library
Bind Returned/Initialized Objects to the Lifetime of Parameters
SG5: Transactional Memory (TM) Meeting Minutes 2017/10/23-2018/1/29
SG14: Low Latency Meeting Minutes 2017/12/13-2018/01/10
Direction for ISO C++
Directions for ISO C++
Direction for ISO C++
Direction for ISO C++
Concurrency TS is growing: Concurrent Utilities and Data Structures
Concurrency TS is growing: Concurrent Utilities and Data Structures
Concurrency TS is growing: Concurrent Utilities and Data Structures
Integrating feature-test macros into the C++ WD
Integrating feature-test macros into the C++ WD
Integrating feature-test macros into the C++ WD
Introducing a <smart_ptr> header
Support C atomics in C++
Support C atomics in C++
Support C atomics in C++
Support C atomics in C++
Contiguous Ranges
Generalizing alias declarations
Towards consistency between <=> and other comparison operators
Another take on Modules
Another take on Modules
Adding support for type-based metaprogramming to the standard library
A new specification for std::generate_canonical
constexpr reflexpr
constexpr reflexpr
constexpr reflexpr
What do we want to do with reflection?
Modules and macros
Answers to concept syntax suggestions
PFA: A Generic, Extendable and Efficient Solution for Polymorphic Programming
PFA: A Generic, Extendable and Efficient Solution for Polymorphic Programming
PFA: A Generic, Extendable and Efficient Solution for Polymorphic Programming
Networking TS changes to support proposed Executors TS
Networking TS changes to support proposed Executors TS
A Proposal for a Universally Unique Identifier Library
A Proposal for a Universally Unique Identifier Library
A Proposal for a Universally Unique Identifier Library
Allow initializing aggregates from a parenthesized list of values
Allow initializing aggregates from a parenthesized list of values
Allow initializing aggregates from a parenthesized list of values
Allow initializing aggregates from a parenthesized list of values
Relaxing the structured bindings customization point finding rules
Relaxing the structured bindings customization point finding rules
Relaxing the range-for loop customization point finding rules
Relaxing the range-for loop customization point finding rules
Structured binding declaration as a condition
Finding the right set of traits for simd<T>
Finding the right set of traits for simd<T>
Finding the right set of traits for simd<T>
Initializers of objects with automatic and dynamic storage duration have funny inconsistencies
string::reserve Should Not Shrink
string::reserve Should Not Shrink
Core Language Working Group "tentatively ready" Issues for the March, 2018 (Jacksonville) meeting
Allow structured bindings to accessible members
Better, Safer Range Access Customization Points
Better, Safer Range Access Customization Points
<chrono> zero(), min(), and max() should be noexcept
Coroutines TS Use Cases and Design Issues
A Function Returning Whether An Underlying Type Value Is a Valid Enumerator of a Given Enumeration
Impact of coroutines on current and upcoming library facilities
(Untitled)
The Evils of Paradigms
(Untitled)
Remember the Vasa!
A Response to "P0973r0: Coroutines TS Use Cases and Design Issues"
Making std::string constexpr
Halo: coroutine Heap Allocation eLision Optimization: the joint response
Weaken Release Sequences
Weaken release sequences
Plan of Record for Making C++ Modules Available in C++ Standards
All (*)()-Pointers Replaced by Ideal Lambdas
LWG Chair post-meeting report
LWG Chair post-meeting report
LWG Chair post-meeting report
LWG Chair post-meeting report
LWG Chair post-meeting report
Comparison of Modules Proposals
polymorphic_allocator<byte> instead of type-erasure
Ruminations on 2D graphics in the C++ International Standard
Standardizing Extended Integers
Rebuttal of Implementation Concerns for Bit Entanglement
Comparison of Stackful Coroutine Proposals
Translation and evaluation
Value-based Reflection
String View Conversion for Function Arguments
Improving atomic_flag
Improving atomic_flag
Rebase Library Fundamentals TS on C++17
Retire Pernicious Language Constructs in Module Contexts
More Natural Arithmetic in C++
Completing support for emotive programming in C++
C++ IS schedule
C++ IS schedule
Target Vectorization Policies from Parallelism V2 TS to C++20
Target Vectorization Policies from Parallelism V2 TS to C++20
Target Vectorization Policies from Parallelism V2 TS to C++20
Try-catch blocks in constexpr functions
Try-catch blocks in constexpr functions
C++ Standard Library Issues Resolved Directly In Jacksonville
Making std::vector constexpr
Making std::vector constexpr
namespace std { namespace fs = filesystem; }
namespace std { namespace fs = filesystem; }
Constexpr in std::pointer_traits
Constexpr in std::pointer_traits
std::assume_aligned
std::assume_aligned
std::assume_aligned
std::assume_aligned
Prohibit aggregate types with user-declared constructors
Prohibit aggregates with user-declared constructors
Array size deduction in new-expressions
Array size deduction in new-expressions
Array size deduction in new-expressions
Container support for implicit lifetime types
Container support for implicit lifetime types
Constant Pointer View - std::as_const Strikes Back!
Ternary Right Fold Expression
Explicit concept expressions
Explicit concept expressions
A Unit Type for C++
WG21 2018-03 Jacksonville Record of Discussion
A few additional type manipulation utilities
Executors should be variadic
Evolution status after Jacksonville 2018
Evolution status after Rapperswil 2018
Evolution status after San Diego 2018
Evolution status after Kona 2019
Integrating Executors with Parallel Algorithms
Integrating Executors with Parallel Algorithms
Integrating Executors with Parallel Algorithms
Smart pointer creation with default initialization
Smart pointer creation with default initialization
Extensions to Class Template Argument Deduction
Filling holes in Class Template Argument Deduction
Filling holes in Class Template Argument Deduction
Filling holes in Class Template Argument Deduction
Filling holes in Class Template Argument Deduction
Material for 2018 JAX Discussions of Hazard Pointer and Read-Copy-Update (RCU)
constexpr comparison operators for std::array
Usability Enhancements for std::span
Usability Enhancements for std::span
Usability Enhancements for std::span
Usability Enhancements for std::span
Update The Reference To The Unicode Standard
Update The Reference To The Unicode Standard
A call for a Data Persistence (iostream v2) study group
A call for an `Elsewhere Memory' study group
SG14 status_code and standard error object for P0709 Zero-overhead deterministic exceptions
status_code and standard error object for P0709 Zero-overhead deterministic exceptions
SG14 status_code and standard error object for P0709 Zero-overhead deterministic exceptions
SG14 [[move_relocates]]
[[move_relocates]]
move = relocates
std::filesystem::path_view
std::filesystem::path_view
std::filesystem::path_view
Low level file i/o library
Low level file i/o library
Low level file i/o library
Misc constexpr bits
Misc constexpr bits
Rangify the uninitialised memory algorithms!
Rangify the uninitialised memory algorithms!
Input range adaptors
Input range adaptors
Input range adaptors
Input range adaptors
Input range adaptors
Input Range Adaptors
Input Range Adaptors
Deep Integration of the Ranges TS
I got you, FAM: Flexible Array Members for C++
std::embed
std::embed
std::embed
std::embed
std::embed
Make char16_t/char32_t string literals be UTF-16/32
Make char16_t/char32_t string literals be UTF-16/32
Make char16_t/char32_t string literals be UTF-16/32
Make char16_t/char32_t string literals be UTF-16/32
__VA_OPT__ wording clarifications
__VA_OPT__ wording clarifications
Narrow contracts in string_view versus P0903R1
std::async() in an Executors World
constexpr Function Parameters
Automatically Generate More Operators
A proposal for a type trait to detect scoped enumerations
Fractional Numeric Type
Fractional Numeric Type
std::experimental::expected LWG design issues
Modules, Macros, and Build Systems
Future-proofing continuations for executors
Future-proofing continuations for executors
A Unified Futures Proposal for C++
A Modest Executor Proposal
Add coroutine task type
Add lazy coroutine (coroutine task) type
Adapting Asio to use std::expected
Structured Bindings can introduce a Pack
Diet Graphics
Core Coroutines
Core Coroutines
Core Coroutines
Allowing Virtual Function Calls in Constant Expressions
constexpr INVOKE
constexpr INVOKE
How to catch an exception_ptr without even try-ing
How to catch an exception_ptr without even try-ing
C++ Dependency Management: Package Consumption vs Development
Vector API for random number generation
Vector API for random number generation
Refining standard library support for Class Template Argument Deduction
Inferencing heap objects
SG5: Transactional Memory (TM) Meeting Minutes 2018/04/09
SG14: Low Latency Meeting Minutes 2018/04/11- 2018/05/02
Default Initialization for basic_string
Optimized Initialization for basic_string and vector
basic_string::resize_default_init
basic_string::resize_default_init
basic_string::resize_default_init
constexpr! functions
constexpr! functions
Immediate functions
Immediate functions
CWG defect Defined Behavior of Invalid Pointers
Editorial clause reorganization
Editorial clause reorganization
Allowing Virtual Destructors to be “Trivial”
A minimal solution to the concepts syntax problems
SG16: Unicode meeting summaries 2018/03/28 - 2018/04/25
On empty structs in the standard library
C++ Standard Library Issues to be moved in Rapperswil
Move resource_adaptor from Library TS to the C++ WP
Move resource_adaptor from Library TS to the C++ WP
Move resource_adaptor from Library TS to the C++ WP
Move resource_adaptor from Library TS to the C++ WP
Today's return-type-requirements Are Insufficient
Today's return-type-requirements Are Insufficient
Today's return-type-requirements Are Insufficient
Should Span be Regular?
Should Span be Regular?
Should Span be Regular?
Natural Syntax: Keep It Simple
Modules for Standard C++
Sizes Should Only span Unsigned
Sizes Should Only span Unsigned
Aggregate initialization in the presence of deleted constructors
Extending structured bindings to be more like variable declarations
Extending structured bindings to be more like variable declarations
Extending structured bindings to be more like variable declarations
Extending structured bindings to be more like variable declarations
Is undefined behaviour preserved?
Nested Inline Namespaces
Nested Inline Namespaces
Nested Inline Namespaces
Zero overhead deterministic failure - A unified mechanism for C and C++
Simplify the customization point for structured bindings
Named character escapes
Named character escapes
Named character escapes
Using Enum
Using Enum
Using Enum
Using Enum
Efficient composition with DynamicBuffer
Vector Length Agnostic SIMD
Down with ()!
Merging Modules
Merging Modules
Merging Modules
Merging Modules
Leaving no room for a lower-level language: A C++ Subset
Leaving no room for a lower-level language: A C++ Subset
web_view
web_view
web_view
WG21 2018-06 Rapperswil Record of Discussion
WG21 2018-06 Rapperswil Record of Discussion
A placeholder with no name
Resolutions to NB Comments on the Parallelism TS v2
Language support for class layout control
Language support for class layout control
Core Language Working Group "ready" Issues for the June, 2018 (Rapperswil) meeting
Core Language Working Group "tentatively ready" Issues for the June, 2018 (Rapperswil) meeting
Improving the Return Value of Erase-Like Algorithms II: Free erase/erase if
Re-Gaining Exclusive Ownership from shared_ptrs
Concat and Split on simd<> objects
ABI for std::hardware_{constructive,destructive}_interference_size
Consistency improvements for <=> and other comparison operators
Hazard Pointers: Proposed Interface and Wording for Concurrency TS 2
Hazard Pointers: Proposed Interface and Wording for Concurrency TS 2
Proposed Wording for Concurrent Data Structures: Read-Copy-Update (RCU)
Proposed Wording for Concurrent Data Structures: Read-Copy-Update (RCU)
Proposed Wording for Concurrent Data Structures: Read-Copy-Update (RCU)
Editorial Guidance for merging P0019r8 and P0528r3
Summer 2018 WG21 Batavia LWG Meeting Information
Module Resource Requirement Propagation
Core Issue 2292: simple-template-id is ambiguous between class-name and type-name
Core Issue 2292: simple-template-id is ambiguous between class-name and type-name
Core Issue 2292: simple-template-id is ambiguous between class-name and type-name
out_ptr - a scalable output pointer abstraction
out_ptr - a scalable output pointer abstraction
out_ptr - a scalable output pointer abstraction
out_ptr - a scalable output pointer abstraction
out_ptr - a scalable output pointer abstraction
Networking TS Associations For Call Wrappers
The C++20 Synchronization Library
The C++20 Synchronization Library
The C++20 Synchronization Library
The C++20 Synchronization Library
The C++20 Synchronization Library
The C++20 Synchronization Library
2018-09 Bellevue ad-hoc meeting information
SG16: Unicode meeting summaries 2018/05/16 - 2018/06/20
Deprecating ATOMIC_VAR_INIT
Address wording issues related to ISO 10646
Address wording issues related to ISO 10646
Address wording issues related to ISO 10646
Yet another approach for constrained declarations
Yet another approach for constrained declarations
Yet another approach for constrained declarations
Thoughts on a conservative terse syntax for constraints
Adding the `[[constinit]]` attribute
Adding the constinit keyword
Object relocation in terms of move plus destroy
Object relocation in terms of move plus destroy
Object relocation in terms of move plus destroy
Object relocation in terms of move plus destroy
Object relocation in terms of move plus destroy
Buffer Sequence Adaptors
Printing `volatile` Pointers
Cleaning up Clause 20
Constexpr regex
Deprecating volatile
Deprecating volatile
Deprecating volatile
Deprecating volatile
Copying volatile subobjects is not trivial
Type traits for structural comparison
Type traits for structural comparison
Type traits for structural comparison
More implicit moves
More implicit moves
More implicit moves
More implicit moves
Merged Modules and Tooling
Multi-argument constrained-parameter
Concept-defined placeholder types
Type Erased Iterators for modern C++
Add Test Polymorphic Memory Resource to the Standard Library
Deprecate uses of the comma operator in subscripting expressions
Deprecate uses of the comma operator in subscripting expressions
Deprecate uses of the comma operator in subscripting expressions
Deprecate uses of the comma operator in subscripting expressions
Explicitly Implicifying explicit Constructors
Make create_directory() Intuitive
Make create_directory() intuitive
Fixing allocator usage for operator+(basic_string)
Make stateful allocator propagation more consistent for operator+(basic_string)
What do we need from a linear algebra library?
Improving function templates with Class Template Argument Deduction
How to make Terse Notation soar with Class Template Argument Deduction
static operator()
Overload sets as function parameters
Synchronously waiting on asynchronous operations
The Concept of Memory Allocator
The Concept of Memory Allocator
A simple and practical optional reference for C++
Package Ecosystem Plan
Package Ecosystem Plan
C++ Compile
Lifetime safety: Preventing common dangling
Response to P1156
Proposing unless
New names for the power-of-2 templates (and their header)
A Module Mapper
A Module Mapper
<=> != ==
<=> != ==
<=> != ==
When do you actually use <=>?
When do you actually use <=>?
When do you actually use <=>?
A type trait for std::compare_3way()'s type
Library utilities for <=>
Adding <=> to library
I did not order this! Why is it on my bill?
Adding operator<=> to types that are not currently comparable
Experience report - integrating Executors with Parallel Algorithms
Experience report - integrating Executors with Parallel Algorithms
Explicitly Specified Returns for (Implicit) Conversions
The Compromise Executors Proposal: A lazy simplification of P0443
Making <system_error> constexpr
Value-based std::error_category comparison
A non-allocating overload of error_category::message()
Adding error_category::failed()
A simple proposal for unifying generic and object-oriented programming
High noon for the 2D Graphics proposal
Variant direct comparisons
Asymmetric fences
Asymmetric Fences
Asymmetric Fences
Modular main()
Canonical Project Structure
Teleportation via co_await
Range constructors for standard containers and views
ranges::to: A function to convert any range to a container
Movability of Single-pass Iterators
Movability of Single-pass Iterators
Movability of Single-pass Iterators
(Untitled)
Adopt source_location from Library Fundamentals V3 for C++20
Adopt source_location from Library Fundamentals V3 for C++20
Source-Code Information Capture
Adopt source location from Library Fundamentals V3 for C++20
Adopt source location from Library Fundamentals V3 for C++20
Adopt Consistent Container Erasure from Library Fundamentals 2 for C++20
Completing the Rebase of Library Fundamentals, Version 3, Working Draft
Modules and Freestanding
Global Module Fragment is Unnecessary
Global Module Fragment Is Unnecessary
Pointer to Member Functions and Member Objects are just Callables!
Out-of-thin-air, revisited, again
Out-of-thin-air, revisited, again
Out-of-thin-air, revisited, again
Redefinitions in Legacy Imports
Homogeneous variadic function parameters
Homogeneous variadic function parameters
Controlling When Inline Functions are Emitted
Parametric Expressions
Parametric Expressions
A Standard flat_set
A Standard flatset
A Standard flat_set
find_backward
find_backward
find_backward
C++ Standard Library Issues to be moved in San Diego
Feedback on 2D Graphics
Signed size() functions
Signed ssize() functions, unsigned size() functions
Signed ssize() functions, unsigned size() functions
A proposal to add an efficient string concatenation routine to the Standard Library
Labelled Parameters
Recursive Type Template Instantiation
Proposal for Study Group: C++ Education
Integrating executors with the standard library through customization
Shift-by-negative in shift_left and shift_right
Shift-by-negative in shift_left and shift_right
Implicit constexpr
Alternative Wording for P0907R4 Signed Integers are Two's Complement
Alternative Wording for P0907R4 Signed Integers are Two's Complement
SG16: Unicode meeting summaries 2018/07/11 - 2018/10/03
SG16: Unicode Direction
SG16: Unicode Direction
Placed Before
Scalable Reflection in C++
In support of merging coroutines into C++20
Single-file modules with the Atom semantic properties rule
Single-file modules with the Atom semantic properties rule
Rangify New Algorithms
Rangify New Algorithms
Rangify New Algorithms
Dependent Execution for a Unified Executors Proposal for C++
export module containing [[attribute]];
The no_float function attribute
Disabling static destructors: introducing no_destroy and always_destroy attributes
Fixing 'Relation's
Remove CommonReference requirement from StrictWeakOrdering
std::forward from std::initializer_list
Extension by inspecting members of User Defined Types?
A more constexpr bitset
A more constexpr bitset
Ranges Design Cleanup
Ranges Design Cleanup
Ranges Design Cleanup
Guidelines for when a WG21 proposal should be reviewed by SG16, the text and Unicode study group
Notes on C++ Package Management
A view of 0 or 1 elements: view::maybe
A view of 0 or 1 elements: view::maybe
A view of 0 or 1 elements: view::maybe
A view of 0 or 1 elements: view::maybe
A view of 0 or 1 elements: view::maybe
Executors Should Go To A TS
Late paper by Detlef describing problems with executors
Implementation experience on trying to implement concurrent data and control structures with executors
Don't Make C++ Unimplementable On Small CPUs
Merge most of Networking TS into C++ Working Draft
Merge most of Networking TS into C++ Working Draft
Pattern Matching
Supporting Pipelines in C++
Controlling the instantiation of vtables and RTTI
Revising the wording of stream input operations
Custom Constraint Diagnostics
Three Years with the Networking TS
Move resource_adaptor from Library TS to the C++ WP
P1272R1 updated with wording from LWG
Byteswapping for fun&&nuf
Byteswapping for fun&&nuf
Byteswapping for fun&&nuf
86 The Absurd (From Exceptions)
Bang For The Buck
Desert Sessions: Improving hostile environment interactions
Void Main
Subscripts On Parade
offsetof For the Modern Era
std::breakpoint
Integer Width Literals
Integer Width Literals
Integer Width Literals
Feature Presentation
Ceci N’est Pas Une Pipe: Adding a workflow operator to C++
Sharing is Caring
Allowing Inlining of Replaceable Functions
Improving Completeness Requirements for Type Traits
Contra CWG DR1778
Contra CWG DR1778
Contra CWG DR1778
Supporting async use-cases for interrupt_token
Coroutine concepts and metafunctions
Access control in contract conditions
Access control in contract conditions
Avoiding undefined behavior in contracts
Avoiding undefined behavior in contracts
Avoiding undefined behavior in contracts
Avoiding undefined behavior in contracts
std::ranges::less<> Should Be More!
Customization Point Functions
ostream_joiner
ostream_joiner
ostream_joiner
Proposed resolution for US104: Allocator-aware regular expressions (rev 3)
Spaceship library update
[[assert: std::disjoint(A,nA, B,nB)]]: Contract assertions as an alternate spelling of ‘restrict’
Reserve more freedom for atomic_ref<> implementers
Module Preamble is Unnecessary
Module Preamble is Unnecessarily Fragile
Replacement for placeholder
Module Preamble is Unnecessarily Fragile
Remember the FORTRAN
nodiscard should have a reason
[[nodiscard("should have a reason")]]
[[nodiscard("should have a reason")]]
[[nodiscard("should have a reason")]]
Implicit Module Partition Lookup
Implicit Module Partition Lookup
Inline Module Partitions
Simplifying Extern Template
Deprecate The Addressof Operator
Expansion statements
Expansion statements
weak_equality considered harmful
Pattern Matching
Unifying the many ways to compare
Comparison Concepts
Let's Talk About Package Specification
unique_val: a default-on-move
unique_val: a default-on-move type
secure_val: a secure-clear-on-move type
secure_val: a secure-clear-on-move type
secure_clear
A when_all() operator for coroutines
Remove return type deduction in std::apply
Tuple application traits
Changes between C++11 and C++14
Allowing contract predicates on non-first declarations
Allowing contract predicates on non-first declarations
Allowing contract predicates on non-first declarations
UB in contract violations
Networking TS enhancement to enable custom I/O executors
Contract postconditions and return type deduction
Contract postconditions and return type deduction
Contract postconditions and return type deduction
RE: Yet another approach for constrained declarations
Allowing dynamic_cast, polymorphic typeid in Constant Expressions
Allowing dynamic_cast, polymorphic typeid in Constant Expressions
Making std::type_info::operator== constexpr
On the Coroutines TS
Changing the active member of a union inside constexpr
Permitting trivial default initialization in constexpr contexts
Permitting trivial default initialization in constexpr contexts
Contract Checking in C++: A (long-term) Road Map
Assigning Concrete Semantics to Contract-Checking Levels at Compile Time
Specifying Concrete Semantics Directly in Contract-Checking Statements
"Avoiding undefined behavior in contracts" [P1290R0] Explained
Aliasing the standard library as a means to save C++
WG21 2018-11 San Diego Record of Discussion
WG21 2018-11 San Diego Record of Discussion
Disallowing the friending of names in namespace std
Disallowing the friending of names in namespace std
Unifying Asynchronous APIs in the Standard Library
Unifying Coroutines TS and Core Coroutines
Simplify proposed WD change #2.
Pre/Post vs. Enspects/Exsures
Pre/Post vs. Enspects/Exsures
pre/post with WD wording
Modules: ADL & Internal Linkage
Modules: ADL & Internal Linkage
revisions from SG1 Tuesday morning discussion
An Executor Property for Occupancy of Execution Agents
Better Integration of Sender Executors
Core Language Working Group "tentatively ready" Issues for the November, 2018 (San Diego) meeting
Intrusive smart pointer feedback
Missing Feature Test Macros
SG7 Guidelines for Review of Proposals
Exposing a narrow contract for ceil2
Exposing a narrow contract for ceil2
Exposing a narrow contract for ceil2
Coroutine TS ready issues (25 and 27)
Traits for [Un]bounded Arrays
Traits for [Un]bounded Arrays
Core "ready" Issues
Core "tentatively ready" Issues
Towards Machine Learning for C++: Study Group 19
Integration of chrono with text formatting
Integration of chrono with text formatting
Incremental Approach: Coroutine TS + Core Coroutines
Fibers under the magnifying glass
Using Coroutine TS with zero dynamic allocations
Not All Agents Have TLS
Not All Agents Have TLS
Multiplication and division of fixed-point numbers
Multiplication and division of fixed-point numbers
Guidelines for Formulating Library Semantics Specifications
Generic numerical algorithm development with(out) numeric_limits
Generic numerical algorithm development with(out) numeric_limits
Pattern Matching
Pattern Matching
Giving atomic_ref implementers more flexibility by providing customization points for non-lock-free implementation
Syntax alternatives for modules
Resolving LWG #2307 for C++20: Consistently Explicit Constructors
More Constrained: Apples or Oranges? On the road to semantic constraint matching
More Constrained: Apples or Oranges? On the road to semantic constraint matching
Summary of freestanding evening session discussions
Summary of Dec 2018 SG14 freestanding discussions
std::string_literal
Ambiguity and Insecurities with Three-Way Comparison
Ambiguity and Insecurities with Three-Way Comparison
Reference capture of structured bindings
Reference capture of structured bindings
volatile_load<T> and volatile_store<T>
volatile_load<T> and volatile_store<T>
More constexpr for <cmath> and <complex>
A proposal to add linear algebra support to the C++ standard library
A proposal to add linear algebra support to the C++ standard library
A proposal to add linear algebra support to the C++ standard library
A Standard Audio API for C++: Motivation, Scope, and Basic Design
A Standard Audio API for C++: Motivation, Scope, and Basic Design
A Standard Audio API for C++: Motivation, Scope, and Basic Design
2019-01-11 SG20 Telecon Minutes
Standing Document for SG20: Guidelines for Teaching C++ to Beginners
Suggested Reflection TS NB Resolutions
Reflection TS NB comment resolutions: summary and rationale
Range constructor for std::string_view
Range constructor for std::string_view
Range constructor for std::string_view
Differences Between Functions and Function Templates
A General Property Customization Mechanism
(Untitled)
Range constructor for std::span
Range constructor for std::span
Range constructor for std::span
Modules: Partitions Are Not a Panacea
Narrowing contextual conversions to bool
Narrowing contextual conversions to bool
std::cstring_view - a C compatible std::string_view adapter
Experience Report: Implementing a Coroutines TS Frontend to an Existing Tasking Library
bad_alloc is not out-of-memory!
bad_alloc is not out-of-memory!
C++20 Executors are Resilient to ABI Breakage
Add more std::hash specializations
Add more std::hash specializations
Tell Programmers About Signed Integer Overflow Behavior
Tell Programmers About Signed Integer Overflow Behavior
Abandon observer_ptr
Remove deprecated strstream
Please reconsider <scope> for C++20
Class Natures for Safety Critical Code: On user-declared and user-defined special member functions
A safer interface for std::aligned_storage
Deprecate std::aligned_storage and std::aligned_union
SG19 Machine Learning Layered List
SG19 Machine Learning Layered List
SG19 Linear Algebra for Data Science and Machine Learning
Historical lessons for C++ linear algebra library standardization
A SFINAE-friendly trait to determine the extent of statically sized containers
Assigning semantics to different Contract Checking Statements
SG16: Unicode meeting summaries 2018/10/17 - 2019/01/09
char8_t backward compatibility remediation
char8_t backward compatibility remediation
char8_t backward compatibility remediation
'constexpr' feature macro concerns
'constexpr' feature macro concerns
Iterators pair constructors for stack and queue
Pull the Plug on Contracts?
Concerns about module toolability
Subscripts and sizes should be signed
Contracts That Work
Contracts That Work
Contracts That Work
First-class symmetric coroutines in C++
First-class symmetric coroutines in C++
Compile Time Regular Expressions
Discussing Pointer Provenance
Executor properties for affinity-based execution
Executor properties for affinity-based execution
A Rational Number Library for C++
A Rational Number Library for C++
Charset Transcoding, Transformation, and Transliteration
Charset Transcoding, Transformation, and Transliteration
is_clamped
Are modules fast?
Are modules fast?
A Medley of Networking TS improvements
SG14: Low Latency Meeting Minutes 2018/07/11 - 2019/01/09
SG19: Machine Learning 2018/12/14 - 2019/01/11
Concurrency TS: to update or not update
Reconsider the Networking TS for inclusion in C++20
constexpr C++ is not constexpr C
Simplifying Mixed Contract Modes
Towards Tree and Graph Data Structures for C++
Enriching type modification traits
Enriching type modification traits
On the non-uniform semantics of return-type-requirements
On the non-uniform semantics of return-type-requirements
Modularizing the Standard Library is a Reorganization Opportunity
Move-only views
C++ Standard Library Issues to be moved in Kona
Mandating the Standard Library: Clause 16 - Language support library
Mandating the Standard Library: Clause 16 - Language support library
Mandating the Standard Library: Clause 18 - Diagnostics library
Mandating the Standard Library: Clause 18 - Diagnostics library
Mandating the Standard Library: Clause 20 - Strings library
Mandating the Standard Library: Clause 20 - Strings library
Mandating the Standard Library: Clause 21 - Containers library
Mandating the Standard Library: Clause 21 - Containers library
Mandating the Standard Library: Clause 22 - Iterators library
Mandating the Standard Library: Clause 22 - Iterators library
Function optimization hint attributes: [[always_inline]], [[never_inline]]
Miscellaneous minor fixes for chrono
Miscellaneous minor fixes for chrono
Miscellaneous minor fixes for chrono
Extended floating-point types
Extended floating-point types
Fixed-layout floating-point type aliases
Fixed-layout floating-point type aliases
Disallow _ Usage in C++20 for Pattern Matching in C++23
Against a standard concurrent hashmap
The trouble with coroutine_traits
SG5: Transactional Memory (TM) Meeting Minutes (June 2018 - January 2019)
Shadow namespaces
Helpful pointers for ContiguousIterator
Coroutines TS Simplifications
Coroutines TS Simplifications
Byte-wise atomic memcpy
Byte-wise atomic memcpy
ostringstream wrapper
constexpr structured bindings
Modules Feedback
A uniform and predefined mapping from modules to filenames
Better keywords for the Coroutines TS
Better keywords for the Coroutines
United Amendment to Contracts Facility for C++20
United Amendment to Contracts Facility for C++20
User Experience with Contracts That Work
Contract-Related Issues
Don’t add to the signed/unsigned mess
Coroutines: Language and Implementation Impact
Coroutines: Use-cases and Trade-offs
Partial program correctness
Constrained Internal Linkage for Modules
Constrained Internal Linkage for Modules
Standard library header units for C++20
Mandating the Standard Library: Clause 30 - Atomic operations library
Mandating the Standard Library: Clause 31 - Atomic operations library
Contract Requirements for Iterative High-Assurance Systems
Stop overconstraining allocators in container deduction guides
Response to response to “Fibers under the magnifying glass”
Iterator Difference Type and Integer Overflow
Views and Size Types
One-Way execute is a Poor Basis Operation
Recommendations for Specifying “Hidden Friends”
Make Me A Module
The inline keyword is not in line with the design of modules.
The inline keyword is not in line with the design of modules
Requirements for Contract Roles
Minimizing Contracts
C++ Should Support Just-in-Time Compilation
C++ Should Support Just-in-Time Compilation
Rename await_resume() to await_result()
WG21 2019-02 Kona Record of Discussion
Relocate Endian's Specification
The Mothership Has Landed: Adding <=> to the Library
The Mothership Has Landed: Adding <=> to the Library
Using unconstrained template template parameters with constrained templates
Functions for Testing Boundary Conditions on Integer Operations
Mandating the Standard Library: Clause 31 - Thread support library
Mandating the Standard Library: Clause 31 - Thread support library
Resolving technical issues in parameter mapping equivalence and related problems
Contracts: why the house is not on fire (i.e. why the status quo is tolerable)
Unicode characters properties
Standard Text Encoding
Spaceship needs a tune-up: Addressing some discovered issues with P0515 and P1185
Object detachment and attachment
Amendments to the C++20 Synchronization Library
Naming guidelines for modules
A Design for an Inter-Operable and Customizable Linear Algebra Library
Formatters for library types
basic_istream_view's iterator should not be copyable
Unifying source_location and contract_violation
Error size benchmarking
Freestanding Library: Rewording the Status Quo
Freestanding Library: Easy [utilities]
Add wait/notify to atomic_ref<T>
Add wait/notify to atomic<shared_ptr<T>>
constexpr for numeric algorithms
The Concept of Extending Argument and a Support Library
A Generic Library for Compile-time Routing
Output std::chrono::days with 'd' suffix
bind_front should not unwrap reference_wrapper
Printf corner cases in std::format
ABI breakage - summary of initial comments
LEWG Omnibus Design Policy Paper
"Throws: Nothing" should be noexcept
String substring checking
Suggestions for Consensus on Executors
starts_with and ends_with
A Compromise Executor Design Sketch
Remove dedicated precalculated hash lookup interface
Adding async RAII support to coroutines
Supporting return-value-optimisation in coroutines
Tag Based Customization Point Functions
SG16: Unicode meeting summaries 2019/01/23 - 2019/05/22
Concept-aware noexcept specifiers
Enabling constexpr Intrinsics By Permitting Unevaluated inline-assembly in constexpr Functions
Callsite Based Inlining Hints: [[always_inline]] and [[never_inline]]
Side Effects of Checked Contracts and Predicate Elision
Contract Evaluation in Constant Expressions
"Axiom" is a False Friend
A free function linear algebra interface based on the BLAS
Evolving a Standard C++ Linear Algebra Library from the BLAS
rethrow_exception must be allowed to copy
C++ Exception Optimizations. An experiment.
Cancellation is not an Error
Callbacks and Composition
String Contains function
Implementing Contracts in GCC
Revisiting allocator model for coroutine lazy/task/generator
std::to_underlying
mdarray: An Owning Multidimensional Array Analog of mdspan
Make get/set_default_resource replaceable
Mandating the Standard Library: Clause 27 - Time library
Summary of the Tooling Study Group's Pre-Cologne Telecons on Modules Tooling Interactions
Towards a C++ Ecosystem Technical Report
Format for describing dependencies of source files
Refinement Proposal for P0919 Heterogeneous lookup for unordered containers
Refinement proposal for P0920 Precalculated hash values in lookup
Require a diagnostic for "declaration changes meaning"
Target-audience tables
Inline Namespaces: Fragility Bites
Annex D Means Deprecated
Recognizing Header Unit Imports Requires Full Preprocessing
Undefined functions in axiom-level contract statements
Enumerating Core Undefined Behavior
Programming Language Vulnerabilities for C++ update
Simple Statistics functions
Graph Data Structures
Adding a global contract assumption mode
What to do about contracts?
Allowing both co_return; and co_return value; in the same coroutine
NTTP are incomplete without float, double, and long double!
Loosen restrictions on "_t" typedefs and "_v" values.
ranges compare algorithm are over-constrained
Compile-time Metaprogramming in C++
Mandating the Standard Library: Clause 25 - Algorithms library
Mandating the Standard Library: Clause 26 - Numerics library
Mandating the Standard Library: Clause 28 - Localization library
Mandating the Standard Library: Clause 29 - Input/Output library
Mandating the Standard Library: Clause 30 - Regular Expression library
Mandating the Standard Library: Clause 31 - Atomics library
C++ Standard Library Issues to be moved in Cologne
Modular Topic Design
Pointer lifetime-end zap
Issues with current flat_map proposal
Preconditions, axiom-level contracts and assumptions -- an in depth study
Text Parsing
Adding a global contract assumption mode
Memory helper functions for containers
Do not promise support for function syntax of operators
User-friendly and Evolution-friendly Reflection: A Compromise
Defaultable default constructors and destructors for all unions
SG19: Machine Learning 2019/04/11-2019/06/13
SG14: Low Latency Meeting Minutes 2019/04/17-2019/06/12
unique_function vs. any_invokable - Bikeshedding Off the Rails
The Executor Concept Hierarchy Needs a Single Root
Type erasure for forwarding ranges in combination with "subrange-y" view adaptors
Contracts, Undefined Behavior, and Defensive Programming
Avoiding Misuse of Contract-Checking
Coroutine changes for C++20 and beyond
Feedback on [P1386R2] std::audio
Don't use `char8_t` and `std::u8string` yet in P1389
Fill in [delay.cpp] TODO in D1389
Access control for reflection
A Proposal to Add Process Management to the C++ Standard Library
Numeric Type Families
Name Lookup Should "Find the First Thing of That Name"
Rename concepts to standard_case for C++20, while we still can
Pointer lifetime-end zap
Native handle from file streams
snapshot_source - A Horse with a Better Name
Concurrent map customization options (SG1 version)
Concurrent map customization options (LEWG version)
ssize() Should be Named count()
Mitigating minor modules maladies
Packaging C++ Modules
Contiguous Containers Should Contain .data()
The "default" contract build-level and continuation-mode should be implementation-defined
On vectors, tensors, matrices, and hypermatrices
[[nodiscard]] for constructors
Variadic overload sets and overload sequences
Contracts have failed to provide a portable "assume"
Portable optimisation hints
ABI isolation for member functions
Modular Relaxed Dependencies: A new approach to the Out-Of-Thin-Air Problem
Local contract restrictions
Adding a global contract assumption mode
Declarations and where to find them
Reuse of the built modules (BMI)
Library Support for Expansion Statements
Networking TS changes to enable better DynamicBuffer composition
Evolution of the P0443 Unified Executors Proposal to accommodate new requirements
Simplifying and generalising Sender/Receiver for asynchronous operations
Simplifying Contract Syntax
System topology discovery for heterogeneous & distributed computing
Effective Types: Examples
C/C++ Memory Object Model Papers - Introduction
SG14 Linear Algebra SIG Meeting Minutes 2018/10/10-2019/06/06
std::terminates()
